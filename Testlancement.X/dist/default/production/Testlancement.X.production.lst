

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Apr 09 08:56:31 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    52  0000                     _ANSELA	set	3896
    53  0000                     _ANSELB	set	3897
    54  0000                     _ANSELC	set	3898
    55  0000                     _BAUDCON2	set	3952
    56  0000                     _BAUDCON2bits	set	3952
    57  0000                     _OSCCON	set	4051
    58  0000                     _PORTBbits	set	3969
    59  0000                     _PORTC	set	3970
    60  0000                     _PORTCbits	set	3970
    61  0000                     _RCREG2	set	3956
    62  0000                     _RCSTA2	set	3953
    63  0000                     _RCSTA2bits	set	3953
    64  0000                     _SPBRG2	set	3957
    65  0000                     _SPBRGH2	set	3958
    66  0000                     _SSP1ADD	set	4040
    67  0000                     _SSP1BUF	set	4041
    68  0000                     _SSP1CON1	set	4038
    69  0000                     _SSP1CON2	set	4037
    70  0000                     _SSP1CON2bits	set	4037
    71  0000                     _SSP1CON3	set	4043
    72  0000                     _SSP1STAT	set	4039
    73  0000                     _SSPBUF	set	4041
    74  0000                     _T0CON	set	4053
    75  0000                     _TMR0L	set	4054
    76  0000                     _TRISA	set	3986
    77  0000                     _TRISB	set	3987
    78  0000                     _TRISC	set	3988
    79  0000                     _TXREG2	set	3955
    80  0000                     _TXSTA2	set	3954
    81  0000                     _TXSTA2bits	set	3954
    82  0000                     _GIE	set	32663
    83  0000                     _INT0IE	set	32660
    84  0000                     _INT0IF	set	32657
    85  0000                     _LATC0	set	31832
    86  0000                     _LATC2	set	31834
    87  0000                     _PEIE	set	32662
    88  0000                     _RC2IE	set	32029
    89  0000                     _RC2IF	set	32037
    90  0000                     _RCIF	set	31989
    91  0000                     _SSP1IF	set	31987
    92  0000                     _SSPIF	set	31987
    93  0000                     _TMR0IF	set	32658
    94                           
    95                           	psect	mediumconst
    96  00FED8                     __pmediumconst:
    97                           	opt stack 0
    98  00FED8  00                 	db	0
    99  00FED9                     __stringdata:
   100                           	opt stack 0
   101  00FED9                     STR_3:
   102  00FED9  20                 	db	32
   103  00FEDA  20                 	db	32
   104  00FEDB  20                 	db	32
   105  00FEDC  20                 	db	32
   106  00FEDD  20                 	db	32
   107  00FEDE  20                 	db	32
   108  00FEDF  20                 	db	32
   109  00FEE0  20                 	db	32
   110  00FEE1  20                 	db	32
   111  00FEE2  20                 	db	32
   112  00FEE3  20                 	db	32
   113  00FEE4  20                 	db	32
   114  00FEE5  20                 	db	32
   115  00FEE6  20                 	db	32
   116  00FEE7  20                 	db	32
   117  00FEE8  20                 	db	32
   118  00FEE9  20                 	db	32
   119  00FEEA  20                 	db	32
   120  00FEEB  20                 	db	32
   121  00FEEC  20                 	db	32
   122  00FEED  20                 	db	32
   123  00FEEE  20                 	db	32
   124  00FEEF  20                 	db	32
   125  00FEF0  20                 	db	32
   126  00FEF1  20                 	db	32
   127  00FEF2  20                 	db	32
   128  00FEF3  20                 	db	32
   129  00FEF4  20                 	db	32
   130  00FEF5  20                 	db	32
   131  00FEF6  20                 	db	32
   132  00FEF7  20                 	db	32
   133  00FEF8  20                 	db	32
   134  00FEF9  20                 	db	32
   135  00FEFA  20                 	db	32
   136  00FEFB  20                 	db	32
   137  00FEFC  20                 	db	32
   138  00FEFD  20                 	db	32
   139  00FEFE  20                 	db	32
   140  00FEFF  20                 	db	32
   141  00FF00  00                 	db	0
   142  00FF01                     STR_30:
   143  00FF01  76                 	db	118	;'v'
   144  00FF02  6F                 	db	111	;'o'
   145  00FF03  74                 	db	116	;'t'
   146  00FF04  72                 	db	114	;'r'
   147  00FF05  65                 	db	101	;'e'
   148  00FF06  20                 	db	32
   149  00FF07  73                 	db	115	;'s'
   150  00FF08  65                 	db	101	;'e'
   151  00FF09  72                 	db	114	;'r'
   152  00FF0A  76                 	db	118	;'v'
   153  00FF0B  69                 	db	105	;'i'
   154  00FF0C  63                 	db	99	;'c'
   155  00FF0D  65                 	db	101	;'e'
   156  00FF0E  20                 	db	32
   157  00FF0F  21                 	db	33
   158  00FF10  21                 	db	33
   159  00FF11  20                 	db	32
   160  00FF12  3A                 	db	58	;':'
   161  00FF13  29                 	db	41
   162  00FF14  00                 	db	0
   163  00FF15                     STR_2:
   164  00FF15  56                 	db	86	;'V'
   165  00FF16  69                 	db	105	;'i'
   166  00FF17  74                 	db	116	;'t'
   167  00FF18  65                 	db	101	;'e'
   168  00FF19  73                 	db	115	;'s'
   169  00FF1A  73                 	db	115	;'s'
   170  00FF1B  65                 	db	101	;'e'
   171  00FF1C  20                 	db	32
   172  00FF1D  64                 	db	100	;'d'
   173  00FF1E  75                 	db	117	;'u'
   174  00FF1F  20                 	db	32
   175  00FF20  76                 	db	118	;'v'
   176  00FF21  65                 	db	101	;'e'
   177  00FF22  6E                 	db	110	;'n'
   178  00FF23  74                 	db	116	;'t'
   179  00FF24  20                 	db	32
   180  00FF25  3A                 	db	58	;':'
   181  00FF26  00                 	db	0
   182  00FF27                     STR_8:
   183  00FF27  44                 	db	68	;'D'
   184  00FF28  69                 	db	105	;'i'
   185  00FF29  72                 	db	114	;'r'
   186  00FF2A  65                 	db	101	;'e'
   187  00FF2B  63                 	db	99	;'c'
   188  00FF2C  74                 	db	116	;'t'
   189  00FF2D  69                 	db	105	;'i'
   190  00FF2E  6F                 	db	111	;'o'
   191  00FF2F  6E                 	db	110	;'n'
   192  00FF30  20                 	db	32
   193  00FF31  76                 	db	118	;'v'
   194  00FF32  65                 	db	101	;'e'
   195  00FF33  6E                 	db	110	;'n'
   196  00FF34  74                 	db	116	;'t'
   197  00FF35  3A                 	db	58	;':'
   198  00FF36  20                 	db	32
   199  00FF37  00                 	db	0
   200  00FF38                     STR_23:
   201  00FF38  4F                 	db	79	;'O'
   202  00FF39  75                 	db	117	;'u'
   203  00FF3A  65                 	db	101	;'e'
   204  00FF3B  73                 	db	115	;'s'
   205  00FF3C  74                 	db	116	;'t'
   206  00FF3D  2F                 	db	47
   207  00FF3E  4E                 	db	78	;'N'
   208  00FF3F  6F                 	db	111	;'o'
   209  00FF40  72                 	db	114	;'r'
   210  00FF41  64                 	db	100	;'d'
   211  00FF42  2D                 	db	45
   212  00FF43  4F                 	db	79	;'O'
   213  00FF44  75                 	db	117	;'u'
   214  00FF45  65                 	db	101	;'e'
   215  00FF46  73                 	db	115	;'s'
   216  00FF47  74                 	db	116	;'t'
   217  00FF48  00                 	db	0
   218  00FF49                     STR_25:
   219  00FF49  4E                 	db	78	;'N'
   220  00FF4A  6F                 	db	111	;'o'
   221  00FF4B  72                 	db	114	;'r'
   222  00FF4C  64                 	db	100	;'d'
   223  00FF4D  2F                 	db	47
   224  00FF4E  4E                 	db	78	;'N'
   225  00FF4F  6F                 	db	111	;'o'
   226  00FF50  72                 	db	114	;'r'
   227  00FF51  64                 	db	100	;'d'
   228  00FF52  2D                 	db	45
   229  00FF53  4F                 	db	79	;'O'
   230  00FF54  75                 	db	117	;'u'
   231  00FF55  65                 	db	101	;'e'
   232  00FF56  73                 	db	115	;'s'
   233  00FF57  74                 	db	116	;'t'
   234  00FF58  00                 	db	0
   235  00FF59                     STR_21:
   236  00FF59  4F                 	db	79	;'O'
   237  00FF5A  75                 	db	117	;'u'
   238  00FF5B  65                 	db	101	;'e'
   239  00FF5C  73                 	db	115	;'s'
   240  00FF5D  74                 	db	116	;'t'
   241  00FF5E  2F                 	db	47
   242  00FF5F  53                 	db	83	;'S'
   243  00FF60  75                 	db	117	;'u'
   244  00FF61  64                 	db	100	;'d'
   245  00FF62  2D                 	db	45
   246  00FF63  4F                 	db	79	;'O'
   247  00FF64  75                 	db	117	;'u'
   248  00FF65  65                 	db	101	;'e'
   249  00FF66  73                 	db	115	;'s'
   250  00FF67  74                 	db	116	;'t'
   251  00FF68  00                 	db	0
   252  00FF69                     STR_1:
   253  00FF69  54                 	db	84	;'T'
   254  00FF6A  65                 	db	101	;'e'
   255  00FF6B  6D                 	db	109	;'m'
   256  00FF6C  70                 	db	112	;'p'
   257  00FF6D  65                 	db	101	;'e'
   258  00FF6E  72                 	db	114	;'r'
   259  00FF6F  61                 	db	97	;'a'
   260  00FF70  74                 	db	116	;'t'
   261  00FF71  75                 	db	117	;'u'
   262  00FF72  72                 	db	114	;'r'
   263  00FF73  65                 	db	101	;'e'
   264  00FF74  20                 	db	32
   265  00FF75  3A                 	db	58	;':'
   266  00FF76  00                 	db	0
   267  00FF77                     STR_29:
   268  00FF77  56                 	db	86	;'V'
   269  00FF78  49                 	db	73	;'I'
   270  00FF79  4E                 	db	78	;'N'
   271  00FF7A  59                 	db	89	;'Y'
   272  00FF7B  55                 	db	85	;'U'
   273  00FF7C  20                 	db	32
   274  00FF7D  4D                 	db	77	;'M'
   275  00FF7E  65                 	db	101	;'e'
   276  00FF7F  74                 	db	116	;'t'
   277  00FF80  65                 	db	101	;'e'
   278  00FF81  6F                 	db	111	;'o'
   279  00FF82  20                 	db	32
   280  00FF83  61                 	db	97	;'a'
   281  00FF84  00                 	db	0
   282  00FF85                     STR_11:
   283  00FF85  4E                 	db	78	;'N'
   284  00FF86  6F                 	db	111	;'o'
   285  00FF87  72                 	db	114	;'r'
   286  00FF88  64                 	db	100	;'d'
   287  00FF89  2F                 	db	47
   288  00FF8A  4E                 	db	78	;'N'
   289  00FF8B  6F                 	db	111	;'o'
   290  00FF8C  72                 	db	114	;'r'
   291  00FF8D  64                 	db	100	;'d'
   292  00FF8E  2D                 	db	45
   293  00FF8F  45                 	db	69	;'E'
   294  00FF90  73                 	db	115	;'s'
   295  00FF91  74                 	db	116	;'t'
   296  00FF92  00                 	db	0
   297  00FF93                     STR_19:
   298  00FF93  53                 	db	83	;'S'
   299  00FF94  75                 	db	117	;'u'
   300  00FF95  64                 	db	100	;'d'
   301  00FF96  2F                 	db	47
   302  00FF97  53                 	db	83	;'S'
   303  00FF98  75                 	db	117	;'u'
   304  00FF99  64                 	db	100	;'d'
   305  00FF9A  2D                 	db	45
   306  00FF9B  4F                 	db	79	;'O'
   307  00FF9C  75                 	db	117	;'u'
   308  00FF9D  65                 	db	101	;'e'
   309  00FF9E  73                 	db	115	;'s'
   310  00FF9F  74                 	db	116	;'t'
   311  00FFA0  00                 	db	0
   312  00FFA1                     STR_13:
   313  00FFA1  45                 	db	69	;'E'
   314  00FFA2  73                 	db	115	;'s'
   315  00FFA3  74                 	db	116	;'t'
   316  00FFA4  2F                 	db	47
   317  00FFA5  4E                 	db	78	;'N'
   318  00FFA6  6F                 	db	111	;'o'
   319  00FFA7  72                 	db	114	;'r'
   320  00FFA8  64                 	db	100	;'d'
   321  00FFA9  2D                 	db	45
   322  00FFAA  45                 	db	69	;'E'
   323  00FFAB  73                 	db	115	;'s'
   324  00FFAC  74                 	db	116	;'t'
   325  00FFAD  00                 	db	0
   326  00FFAE                     STR_31:
   327  00FFAE  52                 	db	82	;'R'
   328  00FFAF  65                 	db	101	;'e'
   329  00FFB0  74                 	db	116	;'t'
   330  00FFB1  6F                 	db	111	;'o'
   331  00FFB2  75                 	db	117	;'u'
   332  00FFB3  72                 	db	114	;'r'
   333  00FFB4  20                 	db	32
   334  00FFB5  44                 	db	68	;'D'
   335  00FFB6  65                 	db	101	;'e'
   336  00FFB7  62                 	db	98	;'b'
   337  00FFB8  75                 	db	117	;'u'
   338  00FFB9  74                 	db	116	;'t'
   339  00FFBA  00                 	db	0
   340  00FFBB                     STR_17:
   341  00FFBB  53                 	db	83	;'S'
   342  00FFBC  75                 	db	117	;'u'
   343  00FFBD  64                 	db	100	;'d'
   344  00FFBE  2F                 	db	47
   345  00FFBF  53                 	db	83	;'S'
   346  00FFC0  75                 	db	117	;'u'
   347  00FFC1  64                 	db	100	;'d'
   348  00FFC2  2D                 	db	45
   349  00FFC3  45                 	db	69	;'E'
   350  00FFC4  73                 	db	115	;'s'
   351  00FFC5  74                 	db	116	;'t'
   352  00FFC6  00                 	db	0
   353  00FFC7                     STR_15:
   354  00FFC7  45                 	db	69	;'E'
   355  00FFC8  73                 	db	115	;'s'
   356  00FFC9  74                 	db	116	;'t'
   357  00FFCA  2F                 	db	47
   358  00FFCB  53                 	db	83	;'S'
   359  00FFCC  75                 	db	117	;'u'
   360  00FFCD  64                 	db	100	;'d'
   361  00FFCE  2D                 	db	45
   362  00FFCF  45                 	db	69	;'E'
   363  00FFD0  73                 	db	115	;'s'
   364  00FFD1  74                 	db	116	;'t'
   365  00FFD2  00                 	db	0
   366  00FFD3                     STR_27:
   367  00FFD3  42                 	db	66	;'B'
   368  00FFD4  6F                 	db	111	;'o'
   369  00FFD5  6E                 	db	110	;'n'
   370  00FFD6  6A                 	db	106	;'j'
   371  00FFD7  6F                 	db	111	;'o'
   372  00FFD8  75                 	db	117	;'u'
   373  00FFD9  72                 	db	114	;'r'
   374  00FFDA  2C                 	db	44
   375  00FFDB  00                 	db	0
   376  00FFDC                     STR_28:
   377  00FFDC  57                 	db	87	;'W'
   378  00FFDD  65                 	db	101	;'e'
   379  00FFDE  6C                 	db	108	;'l'
   380  00FFDF  63                 	db	99	;'c'
   381  00FFE0  6F                 	db	111	;'o'
   382  00FFE1  6D                 	db	109	;'m'
   383  00FFE2  65                 	db	101	;'e'
   384  00FFE3  00                 	db	0
   385  00FFE4                     STR_4:
   386  00FFE4  20                 	db	32
   387  00FFE5  4B                 	db	75	;'K'
   388  00FFE6  6D                 	db	109	;'m'
   389  00FFE7  2F                 	db	47
   390  00FFE8  48                 	db	72	;'H'
   391  00FFE9  00                 	db	0
   392  00FFEA                     STR_26:
   393  00FFEA  45                 	db	69	;'E'
   394  00FFEB  72                 	db	114	;'r'
   395  00FFEC  72                 	db	114	;'r'
   396  00FFED  6F                 	db	111	;'o'
   397  00FFEE  72                 	db	114	;'r'
   398  00FFEF  00                 	db	0
   399  00FFF0                     STR_10:
   400  00FFF0  4E                 	db	78	;'N'
   401  00FFF1  6F                 	db	111	;'o'
   402  00FFF2  72                 	db	114	;'r'
   403  00FFF3  64                 	db	100	;'d'
   404  00FFF4  00                 	db	0
   405  00FFF5                     STR_7:
   406  00FFF5  20                 	db	32
   407  00FFF6  6D                 	db	109	;'m'
   408  00FFF7  2F                 	db	47
   409  00FFF8  73                 	db	115	;'s'
   410  00FFF9  00                 	db	0
   411  00FFFA                     STR_18:
   412  00FFFA  53                 	db	83	;'S'
   413  00FFFB  75                 	db	117	;'u'
   414  00FFFC  64                 	db	100	;'d'
   415  00FFFD  00                 	db	0
   416  00FFFE                     __end_of__stringdata:
   417                           	opt stack 0
   418                           
   419                           ; #config settings
   420  00FFFE  00                 	db	0	; dummy byte at the end
   421  0000                     
   422                           	psect	cinit
   423  000FF2                     __pcinit:
   424                           	opt stack 0
   425  000FF2                     start_initialization:
   426                           	opt stack 0
   427  000FF2                     __initialization:
   428                           	opt stack 0
   429                           
   430                           ; Clear objects allocated to BANK0 (55 bytes)
   431  000FF2  EE00  F060         	lfsr	0,__pbssBANK0
   432  000FF6  0E37               	movlw	55
   433  000FF8                     clear_0:
   434  000FF8  6AEE               	clrf	postinc0,c
   435  000FFA  06E8               	decf	wreg,f,c
   436  000FFC  E1FD               	bnz	clear_0
   437                           
   438                           ; Clear objects allocated to COMRAM (11 bytes)
   439  000FFE  EE00  F03A         	lfsr	0,__pbssCOMRAM
   440  001002  0E0B               	movlw	11
   441  001004                     clear_1:
   442  001004  6AEE               	clrf	postinc0,c
   443  001006  06E8               	decf	wreg,f,c
   444  001008  E1FD               	bnz	clear_1
   445  00100A                     end_of_initialization:
   446                           	opt stack 0
   447  00100A                     __end_of__initialization:
   448                           	opt stack 0
   449  00100A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   450  00100C  6EF8               	movwf	tblptru,c
   451  00100E  0100               	movlb	0
   452  001010  EF6C  F002         	goto	_main	;jump to C main() function
   453                           tblptru	equ	0xFF8
   454                           postinc0	equ	0xFEE
   455                           wreg	equ	0xFE8
   456                           
   457                           	psect	bssCOMRAM
   458  00003A                     __pbssCOMRAM:
   459                           	opt stack 0
   460  00003A                     _Chk:
   461                           	opt stack 0
   462  00003A                     	ds	1
   463  00003B                     _Dir:
   464                           	opt stack 0
   465  00003B                     	ds	1
   466  00003C                     _Dirverif:
   467                           	opt stack 0
   468  00003C                     	ds	1
   469  00003D                     _Start:
   470                           	opt stack 0
   471  00003D                     	ds	1
   472  00003E                     _V1:
   473                           	opt stack 0
   474  00003E                     	ds	1
   475  00003F                     _V11:
   476                           	opt stack 0
   477  00003F                     	ds	1
   478  000040                     _V2:
   479                           	opt stack 0
   480  000040                     	ds	1
   481  000041                     _V22:
   482                           	opt stack 0
   483  000041                     	ds	1
   484  000042                     _V3:
   485                           	opt stack 0
   486  000042                     	ds	1
   487  000043                     _V33:
   488                           	opt stack 0
   489  000043                     	ds	1
   490  000044                     _bouton:
   491                           	opt stack 0
   492  000044                     	ds	1
   493                           tblptru	equ	0xFF8
   494                           postinc0	equ	0xFEE
   495                           wreg	equ	0xFE8
   496                           
   497                           	psect	bssBANK0
   498  000060                     __pbssBANK0:
   499                           	opt stack 0
   500  000060                     _curs:
   501                           	opt stack 0
   502  000060                     	ds	4
   503  000064                     _inter:
   504                           	opt stack 0
   505  000064                     	ds	1
   506  000065                     _tab:
   507                           	opt stack 0
   508  000065                     	ds	50
   509                           tblptru	equ	0xFF8
   510                           postinc0	equ	0xFEE
   511                           wreg	equ	0xFE8
   512                           
   513                           	psect	cstackBANK0
   514  000097                     __pcstackBANK0:
   515                           	opt stack 0
   516  000097                     AffichTemp@curs:
   517                           	opt stack 0
   518  000097                     Affich_V_Vent_kmh@curs:
   519                           	opt stack 0
   520  000097                     Affich_V_Vent_ms@curs:
   521                           	opt stack 0
   522                           
   523                           ; 4 bytes @ 0x0
   524  000097                     	ds	4
   525  00009B                     AffichTemp@temp:
   526                           	opt stack 0
   527  00009B                     Affich_V_Vent_kmh@tab:
   528                           	opt stack 0
   529  00009B                     Affich_V_Vent_ms@tab:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0x4
   533  00009B                     	ds	2
   534  00009D                     Affich_V_Vent_kmh@vent1:
   535                           	opt stack 0
   536  00009D                     Affich_V_Vent_ms@vent1:
   537                           	opt stack 0
   538                           
   539                           ; 4 bytes @ 0x6
   540  00009D                     	ds	4
   541  0000A1                     Affich_V_Vent_kmh@vent:
   542                           	opt stack 0
   543  0000A1                     Affich_V_Vent_ms@vent:
   544                           	opt stack 0
   545                           
   546                           ; 4 bytes @ 0xA
   547  0000A1                     	ds	4
   548  0000A5                     main@TH:
   549                           	opt stack 0
   550                           
   551                           ; 1 bytes @ 0xE
   552  0000A5                     	ds	1
   553  0000A6                     main@TL:
   554                           	opt stack 0
   555                           
   556                           ; 1 bytes @ 0xF
   557  0000A6                     	ds	1
   558  0000A7                     main@temp:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x10
   562  0000A7                     	ds	1
   563                           tblptru	equ	0xFF8
   564                           postinc0	equ	0xFEE
   565                           wreg	equ	0xFE8
   566                           
   567                           	psect	cstackCOMRAM
   568  000001                     __pcstackCOMRAM:
   569                           	opt stack 0
   570  000001                     i2tempo_Xms@time:
   571                           	opt stack 0
   572                           
   573                           ; 4 bytes @ 0x0
   574  000001                     	ds	4
   575  000005                     ??i2_tempo_Xms:
   576                           
   577                           ; 0 bytes @ 0x4
   578  000005                     	ds	5
   579  00000A                     i2tempo_Xms@i:
   580                           	opt stack 0
   581                           
   582                           ; 2 bytes @ 0x9
   583  00000A                     	ds	2
   584  00000C                     ??_tc_int:
   585                           
   586                           ; 0 bytes @ 0xB
   587  00000C                     	ds	14
   588  00001A                     ?___lmul:
   589                           	opt stack 0
   590  00001A                     ?___lldiv:
   591                           	opt stack 0
   592  00001A                     ?___llmod:
   593                           	opt stack 0
   594  00001A                     i2c_ecrire@i2c_octet:
   595                           	opt stack 0
   596  00001A                     traitementVent@y:
   597                           	opt stack 0
   598  00001A                     i2c_lire@ack:
   599                           	opt stack 0
   600  00001A                     DetectVent@tab:
   601                           	opt stack 0
   602  00001A                     tempo_Xms@time:
   603                           	opt stack 0
   604  00001A                     ___lmul@multiplier:
   605                           	opt stack 0
   606  00001A                     ___lldiv@dividend:
   607                           	opt stack 0
   608  00001A                     ___llmod@dividend:
   609                           	opt stack 0
   610                           
   611                           ; 4 bytes @ 0x19
   612  00001A                     	ds	1
   613  00001B                     i2c_1trame@i2c_octet:
   614                           	opt stack 0
   615  00001B                     DS1621_init@TH:
   616                           	opt stack 0
   617  00001B                     traitementVent@tab:
   618                           	opt stack 0
   619                           
   620                           ; 2 bytes @ 0x1A
   621  00001B                     	ds	1
   622  00001C                     i2c_1trame@i2c_add:
   623                           	opt stack 0
   624  00001C                     i2c_lire@octetlu:
   625                           	opt stack 0
   626  00001C                     DS1621_init@TL:
   627                           	opt stack 0
   628  00001C                     DetectVent@i:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x1B
   632  00001C                     	ds	1
   633  00001D                     valinstr@data:
   634                           	opt stack 0
   635  00001D                     valcaract@data:
   636                           	opt stack 0
   637  00001D                     traitementVent@Inv:
   638                           	opt stack 0
   639  00001D                     DS1621_init@data:
   640                           	opt stack 0
   641  00001D                     DS1621_lire2octets@tempL:
   642                           	opt stack 0
   643                           
   644                           ; 1 bytes @ 0x1C
   645  00001D                     	ds	1
   646  00001E                     ??_tempo_Xms:
   647  00001E                     ??_traitementVent:
   648  00001E                     DS1621_lire2octets@adresse:
   649                           	opt stack 0
   650  00001E                     afftext@ptext:
   651                           	opt stack 0
   652  00001E                     ___lmul@multiplicand:
   653                           	opt stack 0
   654  00001E                     ___lldiv@divisor:
   655                           	opt stack 0
   656  00001E                     ___llmod@divisor:
   657                           	opt stack 0
   658                           
   659                           ; 4 bytes @ 0x1D
   660  00001E                     	ds	1
   661  00001F                     DS1621_lire2octets@tempH:
   662                           	opt stack 0
   663                           
   664                           ; 1 bytes @ 0x1E
   665  00001F                     	ds	1
   666  000020                     rafraich@temp:
   667                           	opt stack 0
   668                           
   669                           ; 1 bytes @ 0x1F
   670  000020                     	ds	2
   671  000022                     traitementVent@x:
   672                           	opt stack 0
   673  000022                     ___llmod@counter:
   674                           	opt stack 0
   675  000022                     ___lmul@product:
   676                           	opt stack 0
   677  000022                     ___lldiv@quotient:
   678                           	opt stack 0
   679                           
   680                           ; 4 bytes @ 0x21
   681  000022                     	ds	1
   682  000023                     tempo_Xms@i:
   683                           	opt stack 0
   684  000023                     traitementVent@i:
   685                           	opt stack 0
   686                           
   687                           ; 4 bytes @ 0x22
   688  000023                     	ds	2
   689  000025                     
   690                           ; 0 bytes @ 0x24
   691  000025                     	ds	1
   692  000026                     ___lldiv@counter:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0x25
   696  000026                     	ds	1
   697  000027                     traitementVent@data:
   698                           	opt stack 0
   699  000027                     affmotdec@data:
   700                           	opt stack 0
   701                           
   702                           ; 4 bytes @ 0x26
   703  000027                     	ds	1
   704  000028                     ?_VitVentkmh:
   705                           	opt stack 0
   706  000028                     ?_VitVentms:
   707                           	opt stack 0
   708  000028                     DirVent@tab:
   709                           	opt stack 0
   710  000028                     VitVentkmh@tab:
   711                           	opt stack 0
   712  000028                     VitVentms@tab:
   713                           	opt stack 0
   714                           
   715                           ; 2 bytes @ 0x27
   716  000028                     	ds	2
   717  00002A                     Affich_D_Vent@curs:
   718                           	opt stack 0
   719                           
   720                           ; 4 bytes @ 0x29
   721  00002A                     	ds	1
   722  00002B                     affmotdec@coma:
   723                           	opt stack 0
   724                           
   725                           ; 1 bytes @ 0x2A
   726  00002B                     	ds	1
   727  00002C                     ??_VitVentkmh:
   728  00002C                     ??_VitVentms:
   729  00002C                     ??_affmotdec:
   730                           
   731                           ; 0 bytes @ 0x2B
   732  00002C                     	ds	2
   733  00002E                     Affich_D_Vent@tab:
   734                           	opt stack 0
   735                           
   736                           ; 2 bytes @ 0x2D
   737  00002E                     	ds	2
   738  000030                     affmotdec@unit:
   739                           	opt stack 0
   740  000030                     Affich_D_Vent@vent1:
   741                           	opt stack 0
   742  000030                     VitVentkmh@Vit:
   743                           	opt stack 0
   744  000030                     VitVentms@Vit:
   745                           	opt stack 0
   746                           
   747                           ; 4 bytes @ 0x2F
   748  000030                     	ds	1
   749  000031                     affmotdec@diz:
   750                           	opt stack 0
   751  000031                     Affich_D_Vent@vent:
   752                           	opt stack 0
   753                           
   754                           ; 1 bytes @ 0x30
   755  000031                     	ds	1
   756  000032                     affmotdec@cent:
   757                           	opt stack 0
   758                           
   759                           ; 1 bytes @ 0x31
   760  000032                     	ds	1
   761  000033                     affmotdec@mille:
   762                           	opt stack 0
   763                           
   764                           ; 1 bytes @ 0x32
   765  000033                     	ds	1
   766  000034                     affmotdec@dixmille:
   767                           	opt stack 0
   768                           
   769                           ; 1 bytes @ 0x33
   770  000034                     	ds	1
   771  000035                     affmotdec@temp:
   772                           	opt stack 0
   773                           
   774                           ; 4 bytes @ 0x34
   775  000035                     	ds	4
   776  000039                     AffichTemp@temp1:
   777                           	opt stack 0
   778                           
   779                           ; 1 bytes @ 0x38
   780  000039                     	ds	1
   781  00003A                     tblptru	equ	0xFF8
   782                           postinc0	equ	0xFEE
   783                           wreg	equ	0xFE8
   784                           
   785                           ; 0 bytes @ 0x39
   786 ;;
   787 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   788 ;;
   789 ;; *************** function _main *****************
   790 ;; Defined at:
   791 ;;		line 68 in file "tst_mplabx.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;		None
   794 ;; Auto vars:     Size  Location     Type
   795 ;;  temp            1   16[BANK0 ] unsigned char 
   796 ;;  TL              1   15[BANK0 ] unsigned char 
   797 ;;  TH              1   14[BANK0 ] unsigned char 
   798 ;; Return value:  Size  Location     Type
   799 ;;		None               void
   800 ;; Registers used:
   801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   808 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   810 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   811 ;;Total ram usage:        3 bytes
   812 ;; Hardware stack levels required when called:    9
   813 ;; This function calls:
   814 ;;		_AffichTemp
   815 ;;		_Affich_D_Vent
   816 ;;		_Affich_V_Vent_kmh
   817 ;;		_Affich_V_Vent_ms
   818 ;;		_DS1621_init
   819 ;;		_DS1621_lire2octets
   820 ;;		_DetectVent
   821 ;;		_Init
   822 ;;		_InitLCD
   823 ;;		_InitRS232
   824 ;;		_afftext
   825 ;;		_i2c_init
   826 ;;		_rafraich
   827 ;;		_tempo_Xms
   828 ;;		_valinstr
   829 ;; This function is called by:
   830 ;;		Startup code after reset
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           	psect	text0
   835  0004D8                     __ptext0:
   836                           	opt stack 0
   837  0004D8                     _main:
   838                           	opt stack 22
   839                           
   840                           ;tst_mplabx.c: 70: char temp;
   841                           ;tst_mplabx.c: 71: char TH=26;
   842                           
   843                           ;incstack = 0
   844  0004D8  0E1A               	movlw	26
   845  0004DA  0100               	movlb	0	; () banked
   846  0004DC  6FA5               	movwf	main@TH& (0+255),b
   847                           
   848                           ;tst_mplabx.c: 72: char TL=24;
   849  0004DE  0E18               	movlw	24
   850  0004E0  0100               	movlb	0	; () banked
   851  0004E2  6FA6               	movwf	main@TL& (0+255),b
   852                           
   853                           ; BSR set to: 0
   854                           ;tst_mplabx.c: 75: Init();
   855  0004E4  EC59  F007         	call	_Init	;wreg free
   856                           
   857                           ;tst_mplabx.c: 76: i2c_init();
   858  0004E8  EC0A  F008         	call	_i2c_init	;wreg free
   859                           
   860                           ;tst_mplabx.c: 77: InitLCD();
   861  0004EC  EC07  F005         	call	_InitLCD	;wreg free
   862                           
   863                           ;tst_mplabx.c: 78: DS1621_init(0x0A,TH,TL);
   864  0004F0  C0A5  F01B         	movff	main@TH,DS1621_init@TH
   865  0004F4  C0A6  F01C         	movff	main@TL,DS1621_init@TL
   866  0004F8  0E0A               	movlw	10
   867  0004FA  ECB1  F006         	call	_DS1621_init
   868                           
   869                           ;tst_mplabx.c: 79: InitRS232();
   870  0004FE  ECE5  F007         	call	_InitRS232	;wreg free
   871                           
   872                           ;tst_mplabx.c: 81: temp=DS1621_lire2octets(0xAA);
   873  000502  0EAA               	movlw	170
   874  000504  EC1A  F007         	call	_DS1621_lire2octets
   875  000508  0100               	movlb	0	; () banked
   876  00050A  6FA7               	movwf	main@temp& (0+255),b
   877                           
   878                           ; BSR set to: 0
   879                           ;tst_mplabx.c: 82: DetectVent(tab);
   880  00050C  0100               	movlb	0	; () banked
   881  00050E  0E00               	movlw	high _tab
   882  000510  6E1B               	movwf	DetectVent@tab+1,c
   883  000512  0100               	movlb	0	; () banked
   884  000514  0E65               	movlw	low _tab
   885  000516  6E1A               	movwf	DetectVent@tab,c
   886  000518  EC89  F006         	call	_DetectVent	;wreg free
   887  00051C                     l3774:
   888                           
   889                           ;tst_mplabx.c: 87: inter=0;
   890  00051C  0E00               	movlw	0
   891  00051E  0100               	movlb	0	; () banked
   892  000520  6F64               	movwf	_inter& (0+255),b
   893                           
   894                           ;tst_mplabx.c: 88: switch (bouton){
   895  000522  D05A               	goto	l3794
   896  000524                     l3776:
   897  000524  C060  F097         	movff	_curs,AffichTemp@curs
   898  000528  C061  F098         	movff	_curs+1,AffichTemp@curs+1
   899  00052C  C062  F099         	movff	_curs+2,AffichTemp@curs+2
   900  000530  C063  F09A         	movff	_curs+3,AffichTemp@curs+3
   901  000534  C0A7  F09B         	movff	main@temp,AffichTemp@temp
   902  000538  EC92  F005         	call	_AffichTemp	;wreg free
   903                           
   904                           ;tst_mplabx.c: 92: break;
   905  00053C  D05D               	goto	l532
   906  00053E                     l3778:
   907  00053E  C060  F097         	movff	_curs,Affich_V_Vent_kmh@curs
   908  000542  C061  F098         	movff	_curs+1,Affich_V_Vent_kmh@curs+1
   909  000546  C062  F099         	movff	_curs+2,Affich_V_Vent_kmh@curs+2
   910  00054A  C063  F09A         	movff	_curs+3,Affich_V_Vent_kmh@curs+3
   911  00054E  0100               	movlb	0	; () banked
   912  000550  0E00               	movlw	high _tab
   913  000552  0100               	movlb	0	; () banked
   914  000554  6F9C               	movwf	(Affich_V_Vent_kmh@tab+1)& (0+255),b
   915  000556  0100               	movlb	0	; () banked
   916  000558  0E65               	movlw	low _tab
   917  00055A  0100               	movlb	0	; () banked
   918  00055C  6F9B               	movwf	Affich_V_Vent_kmh@tab& (0+255),b
   919  00055E  EC9A  F004         	call	_Affich_V_Vent_kmh	;wreg free
   920                           
   921                           ;tst_mplabx.c: 94: break;
   922  000562  D04A               	goto	l532
   923  000564                     l3780:
   924  000564  C060  F097         	movff	_curs,Affich_V_Vent_ms@curs
   925  000568  C061  F098         	movff	_curs+1,Affich_V_Vent_ms@curs+1
   926  00056C  C062  F099         	movff	_curs+2,Affich_V_Vent_ms@curs+2
   927  000570  C063  F09A         	movff	_curs+3,Affich_V_Vent_ms@curs+3
   928  000574  0100               	movlb	0	; () banked
   929  000576  0E00               	movlw	high _tab
   930  000578  0100               	movlb	0	; () banked
   931  00057A  6F9C               	movwf	(Affich_V_Vent_ms@tab+1)& (0+255),b
   932  00057C  0100               	movlb	0	; () banked
   933  00057E  0E65               	movlw	low _tab
   934  000580  0100               	movlb	0	; () banked
   935  000582  6F9B               	movwf	Affich_V_Vent_ms@tab& (0+255),b
   936  000584  EC2D  F004         	call	_Affich_V_Vent_ms	;wreg free
   937                           
   938                           ;tst_mplabx.c: 96: break;
   939  000588  D037               	goto	l532
   940  00058A                     l3782:
   941  00058A  C060  F02A         	movff	_curs,Affich_D_Vent@curs
   942  00058E  C061  F02B         	movff	_curs+1,Affich_D_Vent@curs+1
   943  000592  C062  F02C         	movff	_curs+2,Affich_D_Vent@curs+2
   944  000596  C063  F02D         	movff	_curs+3,Affich_D_Vent@curs+3
   945  00059A  0100               	movlb	0	; () banked
   946  00059C  0E00               	movlw	high _tab
   947  00059E  6E2F               	movwf	Affich_D_Vent@tab+1,c
   948  0005A0  0100               	movlb	0	; () banked
   949  0005A2  0E65               	movlw	low _tab
   950  0005A4  6E2E               	movwf	Affich_D_Vent@tab,c
   951  0005A6  EC8A  F001         	call	_Affich_D_Vent	;wreg free
   952                           
   953                           ;tst_mplabx.c: 98: break;
   954  0005AA  D026               	goto	l532
   955  0005AC                     l3784:
   956  0005AC  0E01               	movlw	1
   957  0005AE  ECA7  F007         	call	_valinstr
   958  0005B2  0E02               	movlw	2
   959  0005B4  6E1A               	movwf	tempo_Xms@time,c
   960  0005B6  0E00               	movlw	0
   961  0005B8  6E1B               	movwf	tempo_Xms@time+1,c
   962  0005BA  0E00               	movlw	0
   963  0005BC  6E1C               	movwf	tempo_Xms@time+2,c
   964  0005BE  0E00               	movlw	0
   965  0005C0  6E1D               	movwf	tempo_Xms@time+3,c
   966  0005C2  ECD8  F006         	call	_tempo_Xms	;wreg free
   967                           
   968                           ;tst_mplabx.c: 100: afftext("Retour Debut");
   969  0005C6  0EFF               	movlw	high STR_31
   970  0005C8  6E1F               	movwf	afftext@ptext+1,c
   971  0005CA  0EAE               	movlw	low STR_31
   972  0005CC  6E1E               	movwf	afftext@ptext,c
   973  0005CE  EC8F  F007         	call	_afftext	;wreg free
   974                           
   975                           ;tst_mplabx.c: 101: bouton=0;
   976  0005D2  0E00               	movlw	0
   977  0005D4  6E44               	movwf	_bouton,c
   978                           
   979                           ;tst_mplabx.c: 102: break;
   980  0005D6  D010               	goto	l532
   981  0005D8                     l3794:
   982  0005D8  5044               	movf	_bouton,w,c
   983                           
   984                           ; Switch size 1, requested type "space"
   985                           ; Number of cases is 5, Range of values is 1 to 5
   986                           ; switch strategies available:
   987                           ; Name         Instructions Cycles
   988                           ; simple_byte           16     9 (average)
   989                           ;	Chosen strategy is simple_byte
   990  0005DA  0A01               	xorlw	1	; case 1
   991  0005DC  B4D8               	btfsc	status,2,c
   992  0005DE  D7A2               	goto	l3776
   993  0005E0  0A03               	xorlw	3	; case 2
   994  0005E2  B4D8               	btfsc	status,2,c
   995  0005E4  D7AC               	goto	l3778
   996  0005E6  0A01               	xorlw	1	; case 3
   997  0005E8  B4D8               	btfsc	status,2,c
   998  0005EA  D7BC               	goto	l3780
   999  0005EC  0A07               	xorlw	7	; case 4
  1000  0005EE  B4D8               	btfsc	status,2,c
  1001  0005F0  D7CC               	goto	l3782
  1002  0005F2  0A01               	xorlw	1	; case 5
  1003  0005F4  B4D8               	btfsc	status,2,c
  1004  0005F6  D7DA               	goto	l3784
  1005  0005F8                     l532:
  1006                           
  1007                           ;tst_mplabx.c: 105: if(inter==0)
  1008  0005F8  0100               	movlb	0	; () banked
  1009  0005FA  6764               	tstfsz	_inter& (0+255),b
  1010  0005FC  D00A               	goto	l3798
  1011                           
  1012                           ; BSR set to: 0
  1013                           ;tst_mplabx.c: 106: curs++;
  1014  0005FE  0E01               	movlw	1
  1015  000600  0100               	movlb	0	; () banked
  1016  000602  2760               	addwf	_curs& (0+255),f,b
  1017  000604  0E00               	movlw	0
  1018  000606  0100               	movlb	0	; () banked
  1019  000608  2361               	addwfc	(_curs+1)& (0+255),f,b
  1020  00060A  0100               	movlb	0	; () banked
  1021  00060C  2362               	addwfc	(_curs+2)& (0+255),f,b
  1022  00060E  0100               	movlb	0	; () banked
  1023  000610  2363               	addwfc	(_curs+3)& (0+255),f,b
  1024  000612                     l3798:
  1025                           
  1026                           ; BSR set to: 0
  1027                           ;tst_mplabx.c: 112: temp=rafraich();
  1028  000612  EC76  F007         	call	_rafraich	;wreg free
  1029  000616  0100               	movlb	0	; () banked
  1030  000618  6FA7               	movwf	main@temp& (0+255),b
  1031  00061A  D780               	goto	l3774
  1032  00061C                     __end_of_main:
  1033                           	opt stack 0
  1034                           tblptru	equ	0xFF8
  1035                           postinc0	equ	0xFEE
  1036                           wreg	equ	0xFE8
  1037                           status	equ	0xFD8
  1038                           
  1039 ;; *************** function _rafraich *****************
  1040 ;; Defined at:
  1041 ;;		line 160 in file "tst_mplabx.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;		None
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  temp            1   31[COMRAM] unsigned char 
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      unsigned char 
  1048 ;; Registers used:
  1049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1056 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1058 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1059 ;;Total ram usage:        1 bytes
  1060 ;; Hardware stack levels used:    1
  1061 ;; Hardware stack levels required when called:    6
  1062 ;; This function calls:
  1063 ;;		_DS1621_lire2octets
  1064 ;;		_DetectVent
  1065 ;; This function is called by:
  1066 ;;		_main
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           	psect	text1
  1071  000EEC                     __ptext1:
  1072                           	opt stack 0
  1073  000EEC                     _rafraich:
  1074                           	opt stack 24
  1075                           
  1076                           ;tst_mplabx.c: 162: char temp;
  1077                           ;tst_mplabx.c: 163: if((bouton==2)||(bouton==3))
  1078                           
  1079                           ; BSR set to: 0
  1080                           ;incstack = 0
  1081  000EEC  5044               	movf	_bouton,w,c
  1082  000EEE  0A02               	xorlw	2
  1083  000EF0  B4D8               	btfsc	status,2,c
  1084  000EF2  D004               	goto	l3534
  1085  000EF4  5044               	movf	_bouton,w,c
  1086  000EF6  0A03               	xorlw	3
  1087  000EF8  A4D8               	btfss	status,2,c
  1088  000EFA  D008               	goto	l3536
  1089  000EFC                     l3534:
  1090                           
  1091                           ;tst_mplabx.c: 164: {DetectVent(tab);
  1092  000EFC  0100               	movlb	0	; () banked
  1093  000EFE  0E00               	movlw	high _tab
  1094  000F00  6E1B               	movwf	DetectVent@tab+1,c
  1095  000F02  0100               	movlb	0	; () banked
  1096  000F04  0E65               	movlw	low _tab
  1097  000F06  6E1A               	movwf	DetectVent@tab,c
  1098  000F08  EC89  F006         	call	_DetectVent	;wreg free
  1099  000F0C                     l3536:
  1100                           
  1101                           ;tst_mplabx.c: 165: }
  1102                           ;tst_mplabx.c: 167: if(bouton==1)
  1103  000F0C  0444               	decf	_bouton,w,c
  1104  000F0E  A4D8               	btfss	status,2,c
  1105  000F10  D004               	goto	l3540
  1106                           
  1107                           ;tst_mplabx.c: 168: {temp=DS1621_lire2octets(0xAA);
  1108  000F12  0EAA               	movlw	170
  1109  000F14  EC1A  F007         	call	_DS1621_lire2octets
  1110  000F18  6E20               	movwf	rafraich@temp,c
  1111  000F1A                     l3540:
  1112                           
  1113                           ;tst_mplabx.c: 170: }
  1114                           ;tst_mplabx.c: 172: return(temp);
  1115  000F1A  5020               	movf	rafraich@temp,w,c
  1116  000F1C  0012               	return	
  1117  000F1E                     __end_of_rafraich:
  1118                           	opt stack 0
  1119                           tblptru	equ	0xFF8
  1120                           postinc0	equ	0xFEE
  1121                           wreg	equ	0xFE8
  1122                           status	equ	0xFD8
  1123                           
  1124 ;; *************** function _DetectVent *****************
  1125 ;; Defined at:
  1126 ;;		line 37 in file "TX20.h"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;  tab             2   25[COMRAM] PTR unsigned char 
  1129 ;;		 -> tab(50), 
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;  i               2   27[COMRAM] int 
  1132 ;; Return value:  Size  Location     Type
  1133 ;;		None               void
  1134 ;; Registers used:
  1135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1141 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1142 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1144 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1145 ;;Total ram usage:        4 bytes
  1146 ;; Hardware stack levels used:    1
  1147 ;; Hardware stack levels required when called:    5
  1148 ;; This function calls:
  1149 ;;		_tempo_1ms200us
  1150 ;;		_tempo_200us
  1151 ;; This function is called by:
  1152 ;;		_main
  1153 ;;		_rafraich
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           	psect	text2
  1158  000D12                     __ptext2:
  1159                           	opt stack 0
  1160  000D12                     _DetectVent:
  1161                           	opt stack 24
  1162                           
  1163                           ;TX20.h: 39: int i;
  1164                           ;TX20.h: 41: PORTBbits.RB4=0;
  1165                           
  1166                           ;incstack = 0
  1167  000D12  9881               	bcf	3969,4,c	;volatile
  1168  000D14                     l472:
  1169  000D14  AA81               	btfss	3969,5,c	;volatile
  1170  000D16  D7FE               	goto	l472
  1171                           
  1172                           ;TX20.h: 43: tempo_200us();
  1173  000D18  EC3F  F008         	call	_tempo_200us	;wreg free
  1174                           
  1175                           ;TX20.h: 44: tempo_200us();
  1176  000D1C  EC3F  F008         	call	_tempo_200us	;wreg free
  1177                           
  1178                           ;TX20.h: 45: tempo_200us();
  1179  000D20  EC3F  F008         	call	_tempo_200us	;wreg free
  1180                           
  1181                           ;TX20.h: 47: for(i=0;i<42;i++)
  1182  000D24  0E00               	movlw	0
  1183  000D26  6E1D               	movwf	DetectVent@i+1,c
  1184  000D28  0E00               	movlw	0
  1185  000D2A  6E1C               	movwf	DetectVent@i,c
  1186  000D2C  501D               	movf	DetectVent@i+1,w,c
  1187  000D2E  0A80               	xorlw	128
  1188  000D30  0F80               	addlw	-128
  1189  000D32  0E2A               	movlw	42
  1190  000D34  B4D8               	btfsc	status,2,c
  1191  000D36  5C1C               	subwf	DetectVent@i,w,c
  1192  000D38  B0D8               	btfsc	status,0,c
  1193  000D3A  D011               	goto	l476
  1194                           
  1195                           ;TX20.h: 48: {
  1196                           ;TX20.h: 50: tab[i]=PORTBbits.RB5;
  1197  000D3C  501C               	movf	DetectVent@i,w,c
  1198  000D3E  241A               	addwf	DetectVent@tab,w,c
  1199  000D40  6ED9               	movwf	fsr2l,c
  1200  000D42  501D               	movf	DetectVent@i+1,w,c
  1201  000D44  201B               	addwfc	DetectVent@tab+1,w,c
  1202  000D46  6EDA               	movwf	fsr2h,c
  1203  000D48  AA81               	btfss	3969,5,c	;volatile
  1204  000D4A  D002               	goto	u2820
  1205  000D4C  0E01               	movlw	1
  1206  000D4E  D001               	goto	u2826
  1207  000D50                     u2820:
  1208  000D50  0E00               	movlw	0
  1209  000D52                     u2826:
  1210  000D52  6EDF               	movwf	indf2,c
  1211                           
  1212                           ;TX20.h: 52: tempo_1ms200us();
  1213  000D54  EC37  F008         	call	_tempo_1ms200us	;wreg free
  1214  000D58  4A1C               	infsnz	DetectVent@i,f,c
  1215  000D5A  2A1D               	incf	DetectVent@i+1,f,c
  1216  000D5C  D7E7               	goto	L1
  1217  000D5E                     l476:
  1218                           
  1219                           ;TX20.h: 53: }
  1220                           ;TX20.h: 54: PORTBbits.RB4=1;
  1221  000D5E  8881               	bsf	3969,4,c	;volatile
  1222  000D60  0012               	return	
  1223  000D62                     __end_of_DetectVent:
  1224                           	opt stack 0
  1225                           tblptru	equ	0xFF8
  1226                           postinc0	equ	0xFEE
  1227                           wreg	equ	0xFE8
  1228                           indf2	equ	0xFDF
  1229                           fsr2h	equ	0xFDA
  1230                           fsr2l	equ	0xFD9
  1231                           status	equ	0xFD8
  1232                           
  1233 ;; *************** function _tempo_200us *****************
  1234 ;; Defined at:
  1235 ;;		line 203 in file "tst_mplabx.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;		None
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;		None
  1240 ;; Return value:  Size  Location     Type
  1241 ;;		None               void
  1242 ;; Registers used:
  1243 ;;		wreg, status,2
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1253 ;;Total ram usage:        0 bytes
  1254 ;; Hardware stack levels used:    1
  1255 ;; Hardware stack levels required when called:    3
  1256 ;; This function calls:
  1257 ;;		Nothing
  1258 ;; This function is called by:
  1259 ;;		_DetectVent
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           	psect	text3
  1264  00107E                     __ptext3:
  1265                           	opt stack 0
  1266  00107E                     _tempo_200us:
  1267                           	opt stack 25
  1268                           
  1269                           ;tst_mplabx.c: 207: TMR0IF=0;
  1270                           
  1271                           ;incstack = 0
  1272  00107E  94F2               	bcf	intcon,2,c	;volatile
  1273                           
  1274                           ;tst_mplabx.c: 208: TMR0L=231;
  1275  001080  0EE7               	movlw	231
  1276  001082  6ED6               	movwf	4054,c	;volatile
  1277  001084                     l571:
  1278  001084  B4F2               	btfsc	intcon,2,c	;volatile
  1279  001086  0012               	return	
  1280  001088  D7FD               	goto	l571
  1281  00108A                     __end_of_tempo_200us:
  1282                           	opt stack 0
  1283                           tblptru	equ	0xFF8
  1284                           intcon	equ	0xFF2
  1285                           postinc0	equ	0xFEE
  1286                           wreg	equ	0xFE8
  1287                           indf2	equ	0xFDF
  1288                           fsr2h	equ	0xFDA
  1289                           fsr2l	equ	0xFD9
  1290                           status	equ	0xFD8
  1291                           
  1292 ;; *************** function _tempo_1ms200us *****************
  1293 ;; Defined at:
  1294 ;;		line 193 in file "tst_mplabx.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;		None
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;		None
  1299 ;; Return value:  Size  Location     Type
  1300 ;;		None               void
  1301 ;; Registers used:
  1302 ;;		wreg, status,2, cstack
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1312 ;;Total ram usage:        0 bytes
  1313 ;; Hardware stack levels used:    1
  1314 ;; Hardware stack levels required when called:    4
  1315 ;; This function calls:
  1316 ;;		_tempo_1ms
  1317 ;; This function is called by:
  1318 ;;		_DetectVent
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           	psect	text4
  1323  00106E                     __ptext4:
  1324                           	opt stack 0
  1325  00106E                     _tempo_1ms200us:
  1326                           	opt stack 24
  1327                           
  1328                           ;tst_mplabx.c: 196: tempo_1ms();
  1329                           
  1330                           ;incstack = 0
  1331  00106E  EC45  F008         	call	_tempo_1ms	;wreg free
  1332                           
  1333                           ;tst_mplabx.c: 198: TMR0IF=0;
  1334  001072  94F2               	bcf	intcon,2,c	;volatile
  1335                           
  1336                           ;tst_mplabx.c: 199: TMR0L=231;
  1337  001074  0EE7               	movlw	231
  1338  001076  6ED6               	movwf	4054,c	;volatile
  1339  001078                     l565:
  1340  001078  B4F2               	btfsc	intcon,2,c	;volatile
  1341  00107A  0012               	return	
  1342  00107C  D7FD               	goto	l565
  1343  00107E                     __end_of_tempo_1ms200us:
  1344                           	opt stack 0
  1345                           tblptru	equ	0xFF8
  1346                           intcon	equ	0xFF2
  1347                           postinc0	equ	0xFEE
  1348                           wreg	equ	0xFE8
  1349                           indf2	equ	0xFDF
  1350                           fsr2h	equ	0xFDA
  1351                           fsr2l	equ	0xFD9
  1352                           status	equ	0xFD8
  1353                           
  1354 ;; *************** function _DS1621_lire2octets *****************
  1355 ;; Defined at:
  1356 ;;		line 52 in file "DS1621_Commands.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;  adresse         1    wreg     unsigned char 
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;  adresse         1   29[COMRAM] unsigned char 
  1361 ;;  tempH           1   30[COMRAM] unsigned char 
  1362 ;;  tempL           1   28[COMRAM] unsigned char 
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      unsigned char 
  1365 ;; Registers used:
  1366 ;;		wreg, status,2, status,0, cstack
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;Total ram usage:        3 bytes
  1377 ;; Hardware stack levels used:    1
  1378 ;; Hardware stack levels required when called:    4
  1379 ;; This function calls:
  1380 ;;		_i2c_ecrire
  1381 ;;		_i2c_lire
  1382 ;;		_i2c_restart
  1383 ;;		_i2c_start
  1384 ;;		_i2c_stop
  1385 ;; This function is called by:
  1386 ;;		_main
  1387 ;;		_rafraich
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           	psect	text5
  1392  000E34                     __ptext5:
  1393                           	opt stack 0
  1394  000E34                     _DS1621_lire2octets:
  1395                           	opt stack 25
  1396                           
  1397                           ;incstack = 0
  1398                           ;DS1621_lire2octets@adresse stored from wreg
  1399  000E34  6E1E               	movwf	DS1621_lire2octets@adresse,c
  1400                           
  1401                           ;DS1621_Commands.c: 54: char tempH,tempL;
  1402                           ;DS1621_Commands.c: 55: i2c_start();
  1403  000E36  EC59  F008         	call	_i2c_start	;wreg free
  1404                           
  1405                           ;DS1621_Commands.c: 56: i2c_ecrire(0x98);
  1406  000E3A  0E98               	movlw	152
  1407  000E3C  EC2D  F008         	call	_i2c_ecrire
  1408                           
  1409                           ;DS1621_Commands.c: 57: i2c_ecrire(adresse);
  1410  000E40  501E               	movf	DS1621_lire2octets@adresse,w,c
  1411  000E42  EC2D  F008         	call	_i2c_ecrire
  1412                           
  1413                           ;DS1621_Commands.c: 58: i2c_restart();
  1414  000E46  EC51  F008         	call	_i2c_restart	;wreg free
  1415                           
  1416                           ;DS1621_Commands.c: 59: i2c_ecrire(0x99);
  1417  000E4A  0E99               	movlw	153
  1418  000E4C  EC2D  F008         	call	_i2c_ecrire
  1419                           
  1420                           ;DS1621_Commands.c: 61: tempH=i2c_lire(0);
  1421  000E50  0E00               	movlw	0
  1422  000E52  6E1B               	movwf	i2c_lire@ack+1,c
  1423  000E54  0E00               	movlw	0
  1424  000E56  6E1A               	movwf	i2c_lire@ack,c
  1425  000E58  ECD1  F007         	call	_i2c_lire	;wreg free
  1426  000E5C  6E1F               	movwf	DS1621_lire2octets@tempH,c
  1427                           
  1428                           ;DS1621_Commands.c: 63: tempL=i2c_lire(1);
  1429  000E5E  0E00               	movlw	0
  1430  000E60  6E1B               	movwf	i2c_lire@ack+1,c
  1431  000E62  0E01               	movlw	1
  1432  000E64  6E1A               	movwf	i2c_lire@ack,c
  1433  000E66  ECD1  F007         	call	_i2c_lire	;wreg free
  1434  000E6A  6E1D               	movwf	DS1621_lire2octets@tempL,c
  1435                           
  1436                           ;DS1621_Commands.c: 64: i2c_stop();
  1437  000E6C  EC55  F008         	call	_i2c_stop	;wreg free
  1438                           
  1439                           ;DS1621_Commands.c: 65: return(tempH);
  1440  000E70  501F               	movf	DS1621_lire2octets@tempH,w,c
  1441  000E72  0012               	return	
  1442  000E74                     __end_of_DS1621_lire2octets:
  1443                           	opt stack 0
  1444                           tblptru	equ	0xFF8
  1445                           intcon	equ	0xFF2
  1446                           postinc0	equ	0xFEE
  1447                           wreg	equ	0xFE8
  1448                           indf2	equ	0xFDF
  1449                           fsr2h	equ	0xFDA
  1450                           fsr2l	equ	0xFD9
  1451                           status	equ	0xFD8
  1452                           
  1453 ;; *************** function _i2c_lire *****************
  1454 ;; Defined at:
  1455 ;;		line 105 in file "I2C.h"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;  ack             2   25[COMRAM] int 
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;  octetlu         1   27[COMRAM] unsigned char 
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  1    wreg      unsigned char 
  1462 ;; Registers used:
  1463 ;;		wreg, status,2, status,0
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1470 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1472 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1473 ;;Total ram usage:        3 bytes
  1474 ;; Hardware stack levels used:    1
  1475 ;; Hardware stack levels required when called:    3
  1476 ;; This function calls:
  1477 ;;		Nothing
  1478 ;; This function is called by:
  1479 ;;		_DS1621_lire2octets
  1480 ;;		_DS1621_lire1octets
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484                           	psect	text6
  1485  000FA2                     __ptext6:
  1486                           	opt stack 0
  1487  000FA2                     _i2c_lire:
  1488                           	opt stack 25
  1489                           
  1490                           ;I2C.h: 107: char octetlu;
  1491                           ;I2C.h: 109: SSP1CON2bits.RCEN=1;
  1492                           
  1493                           ;incstack = 0
  1494  000FA2  86C5               	bsf	4037,3,c	;volatile
  1495                           
  1496                           ;I2C.h: 110: SSP1IF=0;
  1497  000FA4  969E               	bcf	3998,3,c	;volatile
  1498  000FA6                     l163:
  1499  000FA6  A69E               	btfss	3998,3,c	;volatile
  1500  000FA8  D7FE               	goto	l163
  1501  000FAA                     l166:
  1502  000FAA  B6C5               	btfsc	4037,3,c	;volatile
  1503  000FAC  D7FE               	goto	l166
  1504                           
  1505                           ;I2C.h: 115: if (ack==0)
  1506  000FAE  501B               	movf	i2c_lire@ack+1,w,c
  1507  000FB0  101A               	iorwf	i2c_lire@ack,w,c
  1508  000FB2  A4D8               	btfss	status,2,c
  1509  000FB4  D002               	goto	l169
  1510                           
  1511                           ;I2C.h: 116: SSP1CON2bits.ACKDT=0;
  1512  000FB6  9AC5               	bcf	4037,5,c	;volatile
  1513  000FB8  D001               	goto	l170
  1514  000FBA                     l169:
  1515                           
  1516                           ;I2C.h: 117: else
  1517                           ;I2C.h: 118: SSP1CON2bits.ACKDT=1;
  1518  000FBA  8AC5               	bsf	4037,5,c	;volatile
  1519  000FBC                     l170:
  1520                           
  1521                           ;I2C.h: 119: octetlu=SSPBUF;
  1522  000FBC  CFC9 F01C          	movff	4041,i2c_lire@octetlu	;volatile
  1523                           
  1524                           ;I2C.h: 120: SSP1CON2bits.ACKEN=1;
  1525  000FC0  88C5               	bsf	4037,4,c	;volatile
  1526  000FC2                     l171:
  1527  000FC2  B8C5               	btfsc	4037,4,c	;volatile
  1528  000FC4  D7FE               	goto	l171
  1529                           
  1530                           ;I2C.h: 126: return(octetlu);
  1531  000FC6  501C               	movf	i2c_lire@octetlu,w,c
  1532  000FC8  0012               	return	
  1533  000FCA                     __end_of_i2c_lire:
  1534                           	opt stack 0
  1535                           tblptru	equ	0xFF8
  1536                           intcon	equ	0xFF2
  1537                           postinc0	equ	0xFEE
  1538                           wreg	equ	0xFE8
  1539                           indf2	equ	0xFDF
  1540                           fsr2h	equ	0xFDA
  1541                           fsr2l	equ	0xFD9
  1542                           status	equ	0xFD8
  1543                           
  1544 ;; *************** function _i2c_init *****************
  1545 ;; Defined at:
  1546 ;;		line 44 in file "I2C.h"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;		None
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;		None
  1551 ;; Return value:  Size  Location     Type
  1552 ;;		None               void
  1553 ;; Registers used:
  1554 ;;		wreg, status,2
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1564 ;;Total ram usage:        0 bytes
  1565 ;; Hardware stack levels used:    1
  1566 ;; Hardware stack levels required when called:    3
  1567 ;; This function calls:
  1568 ;;		Nothing
  1569 ;; This function is called by:
  1570 ;;		_main
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           	psect	text7
  1575  001014                     __ptext7:
  1576                           	opt stack 0
  1577  001014                     _i2c_init:
  1578                           	opt stack 27
  1579                           
  1580                           ;I2C.h: 46: SSP1STAT=0b10000000;
  1581                           
  1582                           ;incstack = 0
  1583  001014  0E80               	movlw	128
  1584  001016  6EC7               	movwf	4039,c	;volatile
  1585                           
  1586                           ;I2C.h: 48: SSP1CON1=0b00101000;
  1587  001018  0E28               	movlw	40
  1588  00101A  6EC6               	movwf	4038,c	;volatile
  1589                           
  1590                           ;I2C.h: 49: SSP1CON2=0b00000000;
  1591  00101C  0E00               	movlw	0
  1592  00101E  6EC5               	movwf	4037,c	;volatile
  1593                           
  1594                           ;I2C.h: 50: SSP1CON3=0b00001000;
  1595  001020  0E08               	movlw	8
  1596  001022  6ECB               	movwf	4043,c	;volatile
  1597                           
  1598                           ;I2C.h: 51: SSP1ADD=0x27;
  1599  001024  0E27               	movlw	39
  1600  001026  6EC8               	movwf	4040,c	;volatile
  1601                           
  1602                           ;I2C.h: 53: SSP1IF=0;
  1603  001028  969E               	bcf	3998,3,c	;volatile
  1604  00102A  0012               	return	
  1605  00102C                     __end_of_i2c_init:
  1606                           	opt stack 0
  1607                           tblptru	equ	0xFF8
  1608                           intcon	equ	0xFF2
  1609                           postinc0	equ	0xFEE
  1610                           wreg	equ	0xFE8
  1611                           indf2	equ	0xFDF
  1612                           fsr2h	equ	0xFDA
  1613                           fsr2l	equ	0xFD9
  1614                           status	equ	0xFD8
  1615                           
  1616 ;; *************** function _InitRS232 *****************
  1617 ;; Defined at:
  1618 ;;		line 57 in file "RS232.h"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;		None
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;		None
  1623 ;; Return value:  Size  Location     Type
  1624 ;;		None               void
  1625 ;; Registers used:
  1626 ;;		wreg, status,2
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1636 ;;Total ram usage:        0 bytes
  1637 ;; Hardware stack levels used:    1
  1638 ;; Hardware stack levels required when called:    3
  1639 ;; This function calls:
  1640 ;;		Nothing
  1641 ;; This function is called by:
  1642 ;;		_main
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text8
  1647  000FCA                     __ptext8:
  1648                           	opt stack 0
  1649  000FCA                     _InitRS232:
  1650                           	opt stack 27
  1651                           
  1652                           ;RS232.h: 63: TXSTA2=0b00000100;
  1653                           
  1654                           ;incstack = 0
  1655  000FCA  0E04               	movlw	4
  1656  000FCC  6E72               	movwf	3954,c	;volatile
  1657                           
  1658                           ;RS232.h: 64: RCSTA2=0b10010000;
  1659  000FCE  0E90               	movlw	144
  1660  000FD0  6E71               	movwf	3953,c	;volatile
  1661                           
  1662                           ;RS232.h: 65: BAUDCON2=0b01010000;
  1663  000FD2  0E50               	movlw	80
  1664  000FD4  6E70               	movwf	3952,c	;volatile
  1665                           
  1666                           ;RS232.h: 67: SPBRGH2=0;
  1667  000FD6  0E00               	movlw	0
  1668  000FD8  6E76               	movwf	3958,c	;volatile
  1669                           
  1670                           ;RS232.h: 68: SPBRG2=25;
  1671  000FDA  0E19               	movlw	25
  1672  000FDC  6E75               	movwf	3957,c	;volatile
  1673                           
  1674                           ;RS232.h: 69: TXSTA2bits.BRGH=1;
  1675  000FDE  8472               	bsf	3954,2,c	;volatile
  1676                           
  1677                           ;RS232.h: 70: BAUDCON2bits.BRG16=0;
  1678  000FE0  9670               	bcf	3952,3,c	;volatile
  1679                           
  1680                           ;RS232.h: 71: TXSTA2bits.SYNC=0;
  1681  000FE2  9872               	bcf	3954,4,c	;volatile
  1682                           
  1683                           ;RS232.h: 76: TXSTA2bits.TXEN=0;
  1684  000FE4  9A72               	bcf	3954,5,c	;volatile
  1685                           
  1686                           ;RS232.h: 77: RCSTA2bits.CREN=1;
  1687  000FE6  8871               	bsf	3953,4,c	;volatile
  1688                           
  1689                           ;RS232.h: 78: RCSTA2bits.SPEN=1;
  1690  000FE8  8E71               	bsf	3953,7,c	;volatile
  1691                           
  1692                           ;RS232.h: 79: RC2IF=0;
  1693  000FEA  9AA4               	bcf	4004,5,c	;volatile
  1694                           
  1695                           ;RS232.h: 80: RC2IE=1;
  1696  000FEC  8AA3               	bsf	4003,5,c	;volatile
  1697                           
  1698                           ;RS232.h: 81: PEIE=1;
  1699  000FEE  8CF2               	bsf	intcon,6,c	;volatile
  1700  000FF0  0012               	return	
  1701  000FF2                     __end_of_InitRS232:
  1702                           	opt stack 0
  1703                           tblptru	equ	0xFF8
  1704                           intcon	equ	0xFF2
  1705                           postinc0	equ	0xFEE
  1706                           wreg	equ	0xFE8
  1707                           indf2	equ	0xFDF
  1708                           fsr2h	equ	0xFDA
  1709                           fsr2l	equ	0xFD9
  1710                           status	equ	0xFD8
  1711                           
  1712 ;; *************** function _InitLCD *****************
  1713 ;; Defined at:
  1714 ;;		line 62 in file "Fonctions_Affich.h"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;		None
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;		None               void
  1721 ;; Registers used:
  1722 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;Total ram usage:        0 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; Hardware stack levels required when called:    8
  1735 ;; This function calls:
  1736 ;;		_MessageAccueil
  1737 ;;		_tempo_Xms
  1738 ;;		_valinstr
  1739 ;; This function is called by:
  1740 ;;		_main
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text9
  1745  000A0E                     __ptext9:
  1746                           	opt stack 0
  1747  000A0E                     _InitLCD:
  1748                           	opt stack 22
  1749                           
  1750                           ;Fonctions_Affich.h: 65: valinstr(0x38);tempo_Xms(5);
  1751                           
  1752                           ;incstack = 0
  1753  000A0E  0E38               	movlw	56
  1754  000A10  ECA7  F007         	call	_valinstr
  1755  000A14  0E05               	movlw	5
  1756  000A16  6E1A               	movwf	tempo_Xms@time,c
  1757  000A18  0E00               	movlw	0
  1758  000A1A  6E1B               	movwf	tempo_Xms@time+1,c
  1759  000A1C  0E00               	movlw	0
  1760  000A1E  6E1C               	movwf	tempo_Xms@time+2,c
  1761  000A20  0E00               	movlw	0
  1762  000A22  6E1D               	movwf	tempo_Xms@time+3,c
  1763  000A24  ECD8  F006         	call	_tempo_Xms	;wreg free
  1764                           
  1765                           ;Fonctions_Affich.h: 66: valinstr(0x38);tempo_Xms(5);
  1766  000A28  0E38               	movlw	56
  1767  000A2A  ECA7  F007         	call	_valinstr
  1768  000A2E  0E05               	movlw	5
  1769  000A30  6E1A               	movwf	tempo_Xms@time,c
  1770  000A32  0E00               	movlw	0
  1771  000A34  6E1B               	movwf	tempo_Xms@time+1,c
  1772  000A36  0E00               	movlw	0
  1773  000A38  6E1C               	movwf	tempo_Xms@time+2,c
  1774  000A3A  0E00               	movlw	0
  1775  000A3C  6E1D               	movwf	tempo_Xms@time+3,c
  1776  000A3E  ECD8  F006         	call	_tempo_Xms	;wreg free
  1777                           
  1778                           ;Fonctions_Affich.h: 67: valinstr(0x38);tempo_Xms(5);
  1779  000A42  0E38               	movlw	56
  1780  000A44  ECA7  F007         	call	_valinstr
  1781  000A48  0E05               	movlw	5
  1782  000A4A  6E1A               	movwf	tempo_Xms@time,c
  1783  000A4C  0E00               	movlw	0
  1784  000A4E  6E1B               	movwf	tempo_Xms@time+1,c
  1785  000A50  0E00               	movlw	0
  1786  000A52  6E1C               	movwf	tempo_Xms@time+2,c
  1787  000A54  0E00               	movlw	0
  1788  000A56  6E1D               	movwf	tempo_Xms@time+3,c
  1789  000A58  ECD8  F006         	call	_tempo_Xms	;wreg free
  1790                           
  1791                           ;Fonctions_Affich.h: 68: valinstr(0x38);tempo_Xms(5);
  1792  000A5C  0E38               	movlw	56
  1793  000A5E  ECA7  F007         	call	_valinstr
  1794  000A62  0E05               	movlw	5
  1795  000A64  6E1A               	movwf	tempo_Xms@time,c
  1796  000A66  0E00               	movlw	0
  1797  000A68  6E1B               	movwf	tempo_Xms@time+1,c
  1798  000A6A  0E00               	movlw	0
  1799  000A6C  6E1C               	movwf	tempo_Xms@time+2,c
  1800  000A6E  0E00               	movlw	0
  1801  000A70  6E1D               	movwf	tempo_Xms@time+3,c
  1802  000A72  ECD8  F006         	call	_tempo_Xms	;wreg free
  1803                           
  1804                           ;Fonctions_Affich.h: 69: valinstr(0x0F);
  1805  000A76  0E0F               	movlw	15
  1806  000A78  ECA7  F007         	call	_valinstr
  1807                           
  1808                           ;Fonctions_Affich.h: 70: valinstr(0x06);
  1809  000A7C  0E06               	movlw	6
  1810  000A7E  ECA7  F007         	call	_valinstr
  1811                           
  1812                           ;Fonctions_Affich.h: 71: valinstr(0x01);tempo_Xms(2);
  1813  000A82  0E01               	movlw	1
  1814  000A84  ECA7  F007         	call	_valinstr
  1815  000A88  0E02               	movlw	2
  1816  000A8A  6E1A               	movwf	tempo_Xms@time,c
  1817  000A8C  0E00               	movlw	0
  1818  000A8E  6E1B               	movwf	tempo_Xms@time+1,c
  1819  000A90  0E00               	movlw	0
  1820  000A92  6E1C               	movwf	tempo_Xms@time+2,c
  1821  000A94  0E00               	movlw	0
  1822  000A96  6E1D               	movwf	tempo_Xms@time+3,c
  1823  000A98  ECD8  F006         	call	_tempo_Xms	;wreg free
  1824                           
  1825                           ;Fonctions_Affich.h: 72: MessageAccueil();
  1826  000A9C  EC00  F006         	call	_MessageAccueil	;wreg free
  1827  000AA0  0012               	return	
  1828  000AA2                     __end_of_InitLCD:
  1829                           	opt stack 0
  1830                           tblptru	equ	0xFF8
  1831                           intcon	equ	0xFF2
  1832                           postinc0	equ	0xFEE
  1833                           wreg	equ	0xFE8
  1834                           indf2	equ	0xFDF
  1835                           fsr2h	equ	0xFDA
  1836                           fsr2l	equ	0xFD9
  1837                           status	equ	0xFD8
  1838                           
  1839 ;; *************** function _MessageAccueil *****************
  1840 ;; Defined at:
  1841 ;;		line 136 in file "Mode_Affich.h"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;		None
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;		None               void
  1848 ;; Registers used:
  1849 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;Total ram usage:        0 bytes
  1860 ;; Hardware stack levels used:    1
  1861 ;; Hardware stack levels required when called:    7
  1862 ;; This function calls:
  1863 ;;		_afftext
  1864 ;;		_tempo_Xms
  1865 ;;		_valinstr
  1866 ;; This function is called by:
  1867 ;;		_InitLCD
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           	psect	text10
  1872  000C00                     __ptext10:
  1873                           	opt stack 0
  1874  000C00                     _MessageAccueil:
  1875                           	opt stack 22
  1876                           
  1877                           ;Mode_Affich.h: 138: afftext("Bonjour,");
  1878                           
  1879                           ;incstack = 0
  1880  000C00  0EFF               	movlw	high STR_27
  1881  000C02  6E1F               	movwf	afftext@ptext+1,c
  1882  000C04  0ED3               	movlw	low STR_27
  1883  000C06  6E1E               	movwf	afftext@ptext,c
  1884  000C08  EC8F  F007         	call	_afftext	;wreg free
  1885                           
  1886                           ;Mode_Affich.h: 139: valinstr(0xC0);
  1887  000C0C  0EC0               	movlw	192
  1888  000C0E  ECA7  F007         	call	_valinstr
  1889                           
  1890                           ;Mode_Affich.h: 140: afftext("Welcome");
  1891  000C12  0EFF               	movlw	high STR_28
  1892  000C14  6E1F               	movwf	afftext@ptext+1,c
  1893  000C16  0EDC               	movlw	low STR_28
  1894  000C18  6E1E               	movwf	afftext@ptext,c
  1895  000C1A  EC8F  F007         	call	_afftext	;wreg free
  1896                           
  1897                           ;Mode_Affich.h: 141: tempo_Xms(2000);
  1898  000C1E  0ED0               	movlw	208
  1899  000C20  6E1A               	movwf	tempo_Xms@time,c
  1900  000C22  0E07               	movlw	7
  1901  000C24  6E1B               	movwf	tempo_Xms@time+1,c
  1902  000C26  0E00               	movlw	0
  1903  000C28  6E1C               	movwf	tempo_Xms@time+2,c
  1904  000C2A  0E00               	movlw	0
  1905  000C2C  6E1D               	movwf	tempo_Xms@time+3,c
  1906  000C2E  ECD8  F006         	call	_tempo_Xms	;wreg free
  1907                           
  1908                           ;Mode_Affich.h: 142: valinstr(0x02);
  1909  000C32  0E02               	movlw	2
  1910  000C34  ECA7  F007         	call	_valinstr
  1911                           
  1912                           ;Mode_Affich.h: 143: afftext("VINYU Meteo a");
  1913  000C38  0EFF               	movlw	high STR_29
  1914  000C3A  6E1F               	movwf	afftext@ptext+1,c
  1915  000C3C  0E77               	movlw	low STR_29
  1916  000C3E  6E1E               	movwf	afftext@ptext,c
  1917  000C40  EC8F  F007         	call	_afftext	;wreg free
  1918                           
  1919                           ;Mode_Affich.h: 144: valinstr(0xC0);
  1920  000C44  0EC0               	movlw	192
  1921  000C46  ECA7  F007         	call	_valinstr
  1922                           
  1923                           ;Mode_Affich.h: 145: afftext("votre service !! :)");
  1924  000C4A  0EFF               	movlw	high STR_30
  1925  000C4C  6E1F               	movwf	afftext@ptext+1,c
  1926  000C4E  0E01               	movlw	low STR_30
  1927  000C50  6E1E               	movwf	afftext@ptext,c
  1928  000C52  EC8F  F007         	call	_afftext	;wreg free
  1929                           
  1930                           ;Mode_Affich.h: 146: valinstr(0x02);
  1931  000C56  0E02               	movlw	2
  1932  000C58  ECA7  F007         	call	_valinstr
  1933  000C5C  0012               	return	
  1934  000C5E                     __end_of_MessageAccueil:
  1935                           	opt stack 0
  1936                           tblptru	equ	0xFF8
  1937                           intcon	equ	0xFF2
  1938                           postinc0	equ	0xFEE
  1939                           wreg	equ	0xFE8
  1940                           indf2	equ	0xFDF
  1941                           fsr2h	equ	0xFDA
  1942                           fsr2l	equ	0xFD9
  1943                           status	equ	0xFD8
  1944                           
  1945 ;; *************** function _Init *****************
  1946 ;; Defined at:
  1947 ;;		line 125 in file "tst_mplabx.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;		None
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;		None
  1952 ;; Return value:  Size  Location     Type
  1953 ;;		None               void
  1954 ;; Registers used:
  1955 ;;		wreg, status,2
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1965 ;;Total ram usage:        0 bytes
  1966 ;; Hardware stack levels used:    1
  1967 ;; Hardware stack levels required when called:    3
  1968 ;; This function calls:
  1969 ;;		Nothing
  1970 ;; This function is called by:
  1971 ;;		_main
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           	psect	text11
  1976  000EB2                     __ptext11:
  1977                           	opt stack 0
  1978  000EB2                     _Init:
  1979                           	opt stack 27
  1980                           
  1981                           ;tst_mplabx.c: 128: ANSELA=0;
  1982                           
  1983                           ;incstack = 0
  1984  000EB2  0E00               	movlw	0
  1985  000EB4  010F               	movlb	15	; () banked
  1986  000EB6  6F38               	movwf	56,b	;volatile
  1987                           
  1988                           ;tst_mplabx.c: 129: ANSELB=0;
  1989  000EB8  0E00               	movlw	0
  1990  000EBA  010F               	movlb	15	; () banked
  1991  000EBC  6F39               	movwf	57,b	;volatile
  1992                           
  1993                           ;tst_mplabx.c: 130: ANSELC=0;
  1994  000EBE  0E00               	movlw	0
  1995  000EC0  010F               	movlb	15	; () banked
  1996  000EC2  6F3A               	movwf	58,b	;volatile
  1997                           
  1998                           ;tst_mplabx.c: 131: TRISA=0x00;
  1999  000EC4  0E00               	movlw	0
  2000  000EC6  6E92               	movwf	3986,c	;volatile
  2001                           
  2002                           ;tst_mplabx.c: 132: TRISB=0xA3;
  2003  000EC8  0EA3               	movlw	163
  2004  000ECA  6E93               	movwf	3987,c	;volatile
  2005                           
  2006                           ;tst_mplabx.c: 133: PORTC=0x18;
  2007  000ECC  0E18               	movlw	24
  2008  000ECE  6E82               	movwf	3970,c	;volatile
  2009                           
  2010                           ;tst_mplabx.c: 134: TRISC=0x98;
  2011  000ED0  0E98               	movlw	152
  2012  000ED2  6E94               	movwf	3988,c	;volatile
  2013                           
  2014                           ; BSR set to: 15
  2015                           ;tst_mplabx.c: 138: PORTCbits.RX1=1;
  2016  000ED4  8E82               	bsf	3970,7,c	;volatile
  2017                           
  2018                           ; BSR set to: 15
  2019                           ;tst_mplabx.c: 139: PORTCbits.TX1=1;
  2020  000ED6  8C82               	bsf	3970,6,c	;volatile
  2021                           
  2022                           ; BSR set to: 15
  2023                           ;tst_mplabx.c: 140: PORTBbits.RX2=1;
  2024  000ED8  8E81               	bsf	3969,7,c	;volatile
  2025                           
  2026                           ; BSR set to: 15
  2027                           ;tst_mplabx.c: 141: PORTBbits.TX2=1;
  2028  000EDA  8C81               	bsf	3969,6,c	;volatile
  2029                           
  2030                           ; BSR set to: 15
  2031                           ;tst_mplabx.c: 143: PORTBbits.RB4=1;
  2032  000EDC  8881               	bsf	3969,4,c	;volatile
  2033                           
  2034                           ; BSR set to: 15
  2035                           ;tst_mplabx.c: 146: GIE=1;
  2036  000EDE  8EF2               	bsf	intcon,7,c	;volatile
  2037                           
  2038                           ; BSR set to: 15
  2039                           ;tst_mplabx.c: 147: INT0IE=1;
  2040  000EE0  88F2               	bsf	intcon,4,c	;volatile
  2041                           
  2042                           ;tst_mplabx.c: 151: OSCCON = 0b01110000;
  2043  000EE2  0E70               	movlw	112
  2044  000EE4  6ED3               	movwf	4051,c	;volatile
  2045                           
  2046                           ;tst_mplabx.c: 152: T0CON = 0b11000100;
  2047  000EE6  0EC4               	movlw	196
  2048  000EE8  6ED5               	movwf	4053,c	;volatile
  2049                           
  2050                           ; BSR set to: 15
  2051  000EEA  0012               	return	
  2052  000EEC                     __end_of_Init:
  2053                           	opt stack 0
  2054                           tblptru	equ	0xFF8
  2055                           intcon	equ	0xFF2
  2056                           postinc0	equ	0xFEE
  2057                           wreg	equ	0xFE8
  2058                           indf2	equ	0xFDF
  2059                           fsr2h	equ	0xFDA
  2060                           fsr2l	equ	0xFD9
  2061                           status	equ	0xFD8
  2062                           
  2063 ;; *************** function _DS1621_init *****************
  2064 ;; Defined at:
  2065 ;;		line 9 in file "DS1621_Commands.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;  data            1    wreg     unsigned char 
  2068 ;;  TH              1   26[COMRAM] unsigned char 
  2069 ;;  TL              1   27[COMRAM] unsigned char 
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;  data            1   28[COMRAM] unsigned char 
  2072 ;; Return value:  Size  Location     Type
  2073 ;;		None               void
  2074 ;; Registers used:
  2075 ;;		wreg, status,2, cstack
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2081 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2084 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2085 ;;Total ram usage:        3 bytes
  2086 ;; Hardware stack levels used:    1
  2087 ;; Hardware stack levels required when called:    5
  2088 ;; This function calls:
  2089 ;;		_DS1621_conv
  2090 ;;		_i2c_ecrire
  2091 ;;		_i2c_restart
  2092 ;;		_i2c_start
  2093 ;;		_i2c_stop
  2094 ;; This function is called by:
  2095 ;;		_main
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text12
  2100  000D62                     __ptext12:
  2101                           	opt stack 0
  2102  000D62                     _DS1621_init:
  2103                           	opt stack 25
  2104                           
  2105                           ; BSR set to: 15
  2106                           ;incstack = 0
  2107                           ;DS1621_init@data stored from wreg
  2108  000D62  6E1D               	movwf	DS1621_init@data,c
  2109                           
  2110                           ;DS1621_Commands.c: 12: i2c_start();
  2111  000D64  EC59  F008         	call	_i2c_start	;wreg free
  2112                           
  2113                           ;DS1621_Commands.c: 13: i2c_ecrire(0x98);
  2114  000D68  0E98               	movlw	152
  2115  000D6A  EC2D  F008         	call	_i2c_ecrire
  2116                           
  2117                           ;DS1621_Commands.c: 14: i2c_ecrire(0xAC);
  2118  000D6E  0EAC               	movlw	172
  2119  000D70  EC2D  F008         	call	_i2c_ecrire
  2120                           
  2121                           ;DS1621_Commands.c: 15: i2c_ecrire(data);
  2122  000D74  501D               	movf	DS1621_init@data,w,c
  2123  000D76  EC2D  F008         	call	_i2c_ecrire
  2124                           
  2125                           ;DS1621_Commands.c: 17: i2c_restart();
  2126  000D7A  EC51  F008         	call	_i2c_restart	;wreg free
  2127                           
  2128                           ;DS1621_Commands.c: 18: i2c_ecrire(0x98);
  2129  000D7E  0E98               	movlw	152
  2130  000D80  EC2D  F008         	call	_i2c_ecrire
  2131                           
  2132                           ;DS1621_Commands.c: 19: i2c_ecrire(0xA1);
  2133  000D84  0EA1               	movlw	161
  2134  000D86  EC2D  F008         	call	_i2c_ecrire
  2135                           
  2136                           ;DS1621_Commands.c: 20: i2c_ecrire(TH);
  2137  000D8A  501B               	movf	DS1621_init@TH,w,c
  2138  000D8C  EC2D  F008         	call	_i2c_ecrire
  2139                           
  2140                           ;DS1621_Commands.c: 22: i2c_restart();
  2141  000D90  EC51  F008         	call	_i2c_restart	;wreg free
  2142                           
  2143                           ;DS1621_Commands.c: 23: i2c_ecrire(0x98);
  2144  000D94  0E98               	movlw	152
  2145  000D96  EC2D  F008         	call	_i2c_ecrire
  2146                           
  2147                           ;DS1621_Commands.c: 24: i2c_ecrire(0xA2);
  2148  000D9A  0EA2               	movlw	162
  2149  000D9C  EC2D  F008         	call	_i2c_ecrire
  2150                           
  2151                           ;DS1621_Commands.c: 25: i2c_ecrire(TL);
  2152  000DA0  501C               	movf	DS1621_init@TL,w,c
  2153  000DA2  EC2D  F008         	call	_i2c_ecrire
  2154                           
  2155                           ;DS1621_Commands.c: 27: i2c_stop();
  2156  000DA6  EC55  F008         	call	_i2c_stop	;wreg free
  2157                           
  2158                           ;DS1621_Commands.c: 29: DS1621_conv();
  2159  000DAA  EC22  F008         	call	_DS1621_conv	;wreg free
  2160  000DAE  0012               	return	
  2161  000DB0                     __end_of_DS1621_init:
  2162                           	opt stack 0
  2163                           tblptru	equ	0xFF8
  2164                           intcon	equ	0xFF2
  2165                           postinc0	equ	0xFEE
  2166                           wreg	equ	0xFE8
  2167                           indf2	equ	0xFDF
  2168                           fsr2h	equ	0xFDA
  2169                           fsr2l	equ	0xFD9
  2170                           status	equ	0xFD8
  2171                           
  2172 ;; *************** function _i2c_restart *****************
  2173 ;; Defined at:
  2174 ;;		line 64 in file "I2C.h"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;		None
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;		None
  2179 ;; Return value:  Size  Location     Type
  2180 ;;		None               void
  2181 ;; Registers used:
  2182 ;;		None
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2192 ;;Total ram usage:        0 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; Hardware stack levels required when called:    3
  2195 ;; This function calls:
  2196 ;;		Nothing
  2197 ;; This function is called by:
  2198 ;;		_DS1621_init
  2199 ;;		_DS1621_lire2octets
  2200 ;;		_DS1621_lire1octets
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text13
  2205  0010A2                     __ptext13:
  2206                           	opt stack 0
  2207  0010A2                     _i2c_restart:
  2208                           	opt stack 25
  2209                           
  2210                           ;I2C.h: 66: SSP1CON2bits.RSEN=1;
  2211                           
  2212                           ;incstack = 0
  2213  0010A2  82C5               	bsf	4037,1,c	;volatile
  2214  0010A4                     l135:
  2215  0010A4  A2C5               	btfss	4037,1,c	;volatile
  2216  0010A6  0012               	return	
  2217  0010A8  D7FD               	goto	l135
  2218  0010AA                     __end_of_i2c_restart:
  2219                           	opt stack 0
  2220                           tblptru	equ	0xFF8
  2221                           intcon	equ	0xFF2
  2222                           postinc0	equ	0xFEE
  2223                           wreg	equ	0xFE8
  2224                           indf2	equ	0xFDF
  2225                           fsr2h	equ	0xFDA
  2226                           fsr2l	equ	0xFD9
  2227                           status	equ	0xFD8
  2228                           
  2229 ;; *************** function _DS1621_conv *****************
  2230 ;; Defined at:
  2231 ;;		line 44 in file "DS1621_Commands.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;		None
  2234 ;; Auto vars:     Size  Location     Type
  2235 ;;		None
  2236 ;; Return value:  Size  Location     Type
  2237 ;;		None               void
  2238 ;; Registers used:
  2239 ;;		wreg, cstack
  2240 ;; Tracked objects:
  2241 ;;		On entry : 0/0
  2242 ;;		On exit  : 0/0
  2243 ;;		Unchanged: 0/0
  2244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2249 ;;Total ram usage:        0 bytes
  2250 ;; Hardware stack levels used:    1
  2251 ;; Hardware stack levels required when called:    4
  2252 ;; This function calls:
  2253 ;;		_i2c_ecrire
  2254 ;;		_i2c_start
  2255 ;;		_i2c_stop
  2256 ;; This function is called by:
  2257 ;;		_DS1621_init
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           	psect	text14
  2262  001044                     __ptext14:
  2263                           	opt stack 0
  2264  001044                     _DS1621_conv:
  2265                           	opt stack 25
  2266                           
  2267                           ;DS1621_Commands.c: 46: i2c_start();
  2268                           
  2269                           ;incstack = 0
  2270  001044  EC59  F008         	call	_i2c_start	;wreg free
  2271                           
  2272                           ;DS1621_Commands.c: 47: i2c_ecrire(0x98);
  2273  001048  0E98               	movlw	152
  2274  00104A  EC2D  F008         	call	_i2c_ecrire
  2275                           
  2276                           ;DS1621_Commands.c: 48: i2c_ecrire(0xEE);
  2277  00104E  0EEE               	movlw	238
  2278  001050  EC2D  F008         	call	_i2c_ecrire
  2279                           
  2280                           ;DS1621_Commands.c: 49: i2c_stop();
  2281  001054  EC55  F008         	call	_i2c_stop	;wreg free
  2282  001058  0012               	return	
  2283  00105A                     __end_of_DS1621_conv:
  2284                           	opt stack 0
  2285                           tblptru	equ	0xFF8
  2286                           intcon	equ	0xFF2
  2287                           postinc0	equ	0xFEE
  2288                           wreg	equ	0xFE8
  2289                           indf2	equ	0xFDF
  2290                           fsr2h	equ	0xFDA
  2291                           fsr2l	equ	0xFD9
  2292                           status	equ	0xFD8
  2293                           
  2294 ;; *************** function _Affich_V_Vent_ms *****************
  2295 ;; Defined at:
  2296 ;;		line 58 in file "Mode_Affich.h"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;  curs            4    0[BANK0 ] unsigned long 
  2299 ;;  tab             2    4[BANK0 ] PTR unsigned char 
  2300 ;;		 -> tab(50), 
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;  vent            4   10[BANK0 ] unsigned long 
  2303 ;;  vent1           4    6[BANK0 ] unsigned long 
  2304 ;; Return value:  Size  Location     Type
  2305 ;;		None               void
  2306 ;; Registers used:
  2307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2313 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2314 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2316 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2317 ;;Total ram usage:       14 bytes
  2318 ;; Hardware stack levels used:    1
  2319 ;; Hardware stack levels required when called:    7
  2320 ;; This function calls:
  2321 ;;		_VitVentms
  2322 ;;		_affmotdec
  2323 ;;		_afftext
  2324 ;;		_tempo_Xms
  2325 ;;		_valinstr
  2326 ;; This function is called by:
  2327 ;;		_main
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           	psect	text15
  2332  00085A                     __ptext15:
  2333                           	opt stack 0
  2334  00085A                     _Affich_V_Vent_ms:
  2335                           	opt stack 23
  2336                           
  2337                           ;Mode_Affich.h: 60: unsigned long vent, vent1;
  2338                           ;Mode_Affich.h: 61: if(curs==1)
  2339                           
  2340                           ;incstack = 0
  2341  00085A  0100               	movlb	0	; () banked
  2342  00085C  0597               	decf	Affich_V_Vent_ms@curs& (0+255),w,b
  2343  00085E  1198               	iorwf	(Affich_V_Vent_ms@curs+1)& (0+255),w,b
  2344  000860  1199               	iorwf	(Affich_V_Vent_ms@curs+2)& (0+255),w,b
  2345  000862  119A               	iorwf	(Affich_V_Vent_ms@curs+3)& (0+255),w,b
  2346  000864  A4D8               	btfss	status,2,c
  2347  000866  D013               	goto	l3432
  2348                           
  2349                           ; BSR set to: 0
  2350                           ;Mode_Affich.h: 62: {
  2351                           ;Mode_Affich.h: 63: valinstr(0x01);tempo_Xms(2);
  2352  000868  0E01               	movlw	1
  2353  00086A  ECA7  F007         	call	_valinstr
  2354  00086E  0E02               	movlw	2
  2355  000870  6E1A               	movwf	tempo_Xms@time,c
  2356  000872  0E00               	movlw	0
  2357  000874  6E1B               	movwf	tempo_Xms@time+1,c
  2358  000876  0E00               	movlw	0
  2359  000878  6E1C               	movwf	tempo_Xms@time+2,c
  2360  00087A  0E00               	movlw	0
  2361  00087C  6E1D               	movwf	tempo_Xms@time+3,c
  2362  00087E  ECD8  F006         	call	_tempo_Xms	;wreg free
  2363                           
  2364                           ;Mode_Affich.h: 64: afftext("Vitesse du vent :");
  2365  000882  0EFF               	movlw	high STR_2
  2366  000884  6E1F               	movwf	afftext@ptext+1,c
  2367  000886  0E15               	movlw	low STR_2
  2368  000888  6E1E               	movwf	afftext@ptext,c
  2369  00088A  EC8F  F007         	call	_afftext	;wreg free
  2370  00088E                     l3432:
  2371                           
  2372                           ;Mode_Affich.h: 65: }
  2373                           ;Mode_Affich.h: 66: vent = VitVentms(tab);
  2374  00088E  0100               	movlb	0	; () banked
  2375  000890  C09C  F029         	movff	Affich_V_Vent_ms@tab+1,VitVentms@tab+1
  2376  000894  0100               	movlb	0	; () banked
  2377  000896  C09B  F028         	movff	Affich_V_Vent_ms@tab,VitVentms@tab
  2378  00089A  ECAB  F003         	call	_VitVentms	;wreg free
  2379  00089E  C028  F0A1         	movff	?_VitVentms,Affich_V_Vent_ms@vent
  2380  0008A2  C029  F0A2         	movff	?_VitVentms+1,Affich_V_Vent_ms@vent+1
  2381  0008A6  C02A  F0A3         	movff	?_VitVentms+2,Affich_V_Vent_ms@vent+2
  2382  0008AA  C02B  F0A4         	movff	?_VitVentms+3,Affich_V_Vent_ms@vent+3
  2383                           
  2384                           ;Mode_Affich.h: 67: if((vent!=vent1)||(curs==1))
  2385  0008AE  0100               	movlb	0	; () banked
  2386  0008B0  51A0               	movf	(Affich_V_Vent_ms@vent1+3)& (0+255),w,b
  2387  0008B2  0100               	movlb	0	; () banked
  2388  0008B4  19A4               	xorwf	(Affich_V_Vent_ms@vent+3)& (0+255),w,b
  2389  0008B6  E10E               	bnz	u2915
  2390  0008B8  0100               	movlb	0	; () banked
  2391  0008BA  519F               	movf	(Affich_V_Vent_ms@vent1+2)& (0+255),w,b
  2392  0008BC  0100               	movlb	0	; () banked
  2393  0008BE  19A3               	xorwf	(Affich_V_Vent_ms@vent+2)& (0+255),w,b
  2394  0008C0  E109               	bnz	u2915
  2395  0008C2  0100               	movlb	0	; () banked
  2396  0008C4  519E               	movf	(Affich_V_Vent_ms@vent1+1)& (0+255),w,b
  2397  0008C6  0100               	movlb	0	; () banked
  2398  0008C8  19A2               	xorwf	(Affich_V_Vent_ms@vent+1)& (0+255),w,b
  2399  0008CA  E104               	bnz	u2915
  2400  0008CC  0100               	movlb	0	; () banked
  2401  0008CE  519D               	movf	Affich_V_Vent_ms@vent1& (0+255),w,b
  2402  0008D0  0100               	movlb	0	; () banked
  2403  0008D2  19A1               	xorwf	Affich_V_Vent_ms@vent& (0+255),w,b
  2404  0008D4                     u2915:
  2405  0008D4  A4D8               	btfss	status,2,c
  2406  0008D6  D007               	goto	l3438
  2407                           
  2408                           ; BSR set to: 0
  2409  0008D8  0100               	movlb	0	; () banked
  2410  0008DA  0597               	decf	Affich_V_Vent_ms@curs& (0+255),w,b
  2411  0008DC  1198               	iorwf	(Affich_V_Vent_ms@curs+1)& (0+255),w,b
  2412  0008DE  1199               	iorwf	(Affich_V_Vent_ms@curs+2)& (0+255),w,b
  2413  0008E0  119A               	iorwf	(Affich_V_Vent_ms@curs+3)& (0+255),w,b
  2414  0008E2  A4D8               	btfss	status,2,c
  2415  0008E4  D01E               	goto	l3448
  2416  0008E6                     l3438:
  2417                           
  2418                           ; BSR set to: 0
  2419                           ;Mode_Affich.h: 68: {
  2420                           ;Mode_Affich.h: 69: valinstr(0xC0); afftext("                                       ");
  2421  0008E6  0EC0               	movlw	192
  2422  0008E8  ECA7  F007         	call	_valinstr
  2423  0008EC  0EFE               	movlw	high STR_3
  2424  0008EE  6E1F               	movwf	afftext@ptext+1,c
  2425  0008F0  0ED9               	movlw	low STR_3
  2426  0008F2  6E1E               	movwf	afftext@ptext,c
  2427  0008F4  EC8F  F007         	call	_afftext	;wreg free
  2428                           
  2429                           ;Mode_Affich.h: 70: valinstr(0xC0);
  2430  0008F8  0EC0               	movlw	192
  2431  0008FA  ECA7  F007         	call	_valinstr
  2432                           
  2433                           ;Mode_Affich.h: 71: affmotdec(vent,1);
  2434  0008FE  C0A1  F027         	movff	Affich_V_Vent_ms@vent,affmotdec@data
  2435  000902  C0A2  F028         	movff	Affich_V_Vent_ms@vent+1,affmotdec@data+1
  2436  000906  C0A3  F029         	movff	Affich_V_Vent_ms@vent+2,affmotdec@data+2
  2437  00090A  C0A4  F02A         	movff	Affich_V_Vent_ms@vent+3,affmotdec@data+3
  2438  00090E  0E01               	movlw	1
  2439  000910  6E2B               	movwf	affmotdec@coma,c
  2440  000912  EC5D  F000         	call	_affmotdec	;wreg free
  2441                           
  2442                           ;Mode_Affich.h: 72: afftext(" m/s");
  2443  000916  0EFF               	movlw	high STR_7
  2444  000918  6E1F               	movwf	afftext@ptext+1,c
  2445  00091A  0EF5               	movlw	low STR_7
  2446  00091C  6E1E               	movwf	afftext@ptext,c
  2447  00091E  EC8F  F007         	call	_afftext	;wreg free
  2448  000922                     l3448:
  2449                           
  2450                           ;Mode_Affich.h: 74: }
  2451                           ;Mode_Affich.h: 75: vent1=vent;
  2452  000922  C0A1  F09D         	movff	Affich_V_Vent_ms@vent,Affich_V_Vent_ms@vent1
  2453  000926  C0A2  F09E         	movff	Affich_V_Vent_ms@vent+1,Affich_V_Vent_ms@vent1+1
  2454  00092A  C0A3  F09F         	movff	Affich_V_Vent_ms@vent+2,Affich_V_Vent_ms@vent1+2
  2455  00092E  C0A4  F0A0         	movff	Affich_V_Vent_ms@vent+3,Affich_V_Vent_ms@vent1+3
  2456  000932  0012               	return	
  2457  000934                     __end_of_Affich_V_Vent_ms:
  2458                           	opt stack 0
  2459                           tblptru	equ	0xFF8
  2460                           intcon	equ	0xFF2
  2461                           postinc0	equ	0xFEE
  2462                           wreg	equ	0xFE8
  2463                           indf2	equ	0xFDF
  2464                           fsr2h	equ	0xFDA
  2465                           fsr2l	equ	0xFD9
  2466                           status	equ	0xFD8
  2467                           
  2468 ;; *************** function _VitVentms *****************
  2469 ;; Defined at:
  2470 ;;		line 103 in file "TX20.h"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;  tab             2   39[COMRAM] PTR unsigned char 
  2473 ;;		 -> tab(50), 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  Vit             4   47[COMRAM] unsigned long 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  4   39[COMRAM] unsigned long 
  2478 ;; Registers used:
  2479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2485 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2486 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2487 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2488 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2489 ;;Total ram usage:       12 bytes
  2490 ;; Hardware stack levels used:    1
  2491 ;; Hardware stack levels required when called:    4
  2492 ;; This function calls:
  2493 ;;		_traitementVent
  2494 ;; This function is called by:
  2495 ;;		_Affich_V_Vent_ms
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           	psect	text16
  2500  000756                     __ptext16:
  2501                           	opt stack 0
  2502  000756                     _VitVentms:
  2503                           	opt stack 25
  2504                           
  2505                           ;TX20.h: 105: unsigned long Vit;
  2506                           ;TX20.h: 106: V1=traitementVent(8,12,tab,1);
  2507                           
  2508                           ;incstack = 0
  2509  000756  0E0C               	movlw	12
  2510  000758  6E1A               	movwf	traitementVent@y,c
  2511  00075A  C029  F01C         	movff	VitVentms@tab+1,traitementVent@tab+1
  2512  00075E  C028  F01B         	movff	VitVentms@tab,traitementVent@tab
  2513  000762  0E01               	movlw	1
  2514  000764  6E1D               	movwf	traitementVent@Inv,c
  2515  000766  0E08               	movlw	8
  2516  000768  EC2F  F006         	call	_traitementVent
  2517  00076C  6E3E               	movwf	_V1,c
  2518                           
  2519                           ;TX20.h: 107: V2=traitementVent(12,16,tab,1);
  2520  00076E  0E10               	movlw	16
  2521  000770  6E1A               	movwf	traitementVent@y,c
  2522  000772  C029  F01C         	movff	VitVentms@tab+1,traitementVent@tab+1
  2523  000776  C028  F01B         	movff	VitVentms@tab,traitementVent@tab
  2524  00077A  0E01               	movlw	1
  2525  00077C  6E1D               	movwf	traitementVent@Inv,c
  2526  00077E  0E0C               	movlw	12
  2527  000780  EC2F  F006         	call	_traitementVent
  2528  000784  6E40               	movwf	_V2,c
  2529                           
  2530                           ;TX20.h: 108: V3=traitementVent(16,20,tab,1);
  2531  000786  0E14               	movlw	20
  2532  000788  6E1A               	movwf	traitementVent@y,c
  2533  00078A  C029  F01C         	movff	VitVentms@tab+1,traitementVent@tab+1
  2534  00078E  C028  F01B         	movff	VitVentms@tab,traitementVent@tab
  2535  000792  0E01               	movlw	1
  2536  000794  6E1D               	movwf	traitementVent@Inv,c
  2537  000796  0E10               	movlw	16
  2538  000798  EC2F  F006         	call	_traitementVent
  2539  00079C  6E42               	movwf	_V3,c
  2540                           
  2541                           ;TX20.h: 109: V11=traitementVent(28,32,tab,0);
  2542  00079E  0E20               	movlw	32
  2543  0007A0  6E1A               	movwf	traitementVent@y,c
  2544  0007A2  C029  F01C         	movff	VitVentms@tab+1,traitementVent@tab+1
  2545  0007A6  C028  F01B         	movff	VitVentms@tab,traitementVent@tab
  2546  0007AA  0E00               	movlw	0
  2547  0007AC  6E1D               	movwf	traitementVent@Inv,c
  2548  0007AE  0E1C               	movlw	28
  2549  0007B0  EC2F  F006         	call	_traitementVent
  2550  0007B4  6E3F               	movwf	_V11,c
  2551                           
  2552                           ;TX20.h: 110: V22=traitementVent(32,36,tab,0);
  2553  0007B6  0E24               	movlw	36
  2554  0007B8  6E1A               	movwf	traitementVent@y,c
  2555  0007BA  C029  F01C         	movff	VitVentms@tab+1,traitementVent@tab+1
  2556  0007BE  C028  F01B         	movff	VitVentms@tab,traitementVent@tab
  2557  0007C2  0E00               	movlw	0
  2558  0007C4  6E1D               	movwf	traitementVent@Inv,c
  2559  0007C6  0E20               	movlw	32
  2560  0007C8  EC2F  F006         	call	_traitementVent
  2561  0007CC  6E41               	movwf	_V22,c
  2562                           
  2563                           ;TX20.h: 111: V33=traitementVent(36,40,tab,0);
  2564  0007CE  0E28               	movlw	40
  2565  0007D0  6E1A               	movwf	traitementVent@y,c
  2566  0007D2  C029  F01C         	movff	VitVentms@tab+1,traitementVent@tab+1
  2567  0007D6  C028  F01B         	movff	VitVentms@tab,traitementVent@tab
  2568  0007DA  0E00               	movlw	0
  2569  0007DC  6E1D               	movwf	traitementVent@Inv,c
  2570  0007DE  0E24               	movlw	36
  2571  0007E0  EC2F  F006         	call	_traitementVent
  2572  0007E4  6E43               	movwf	_V33,c
  2573                           
  2574                           ;TX20.h: 112: if((V1==V11)&(V2==V22)&(V3==V33))
  2575  0007E6  503F               	movf	_V11,w,c
  2576  0007E8  623E               	cpfseq	_V1,c
  2577  0007EA  D026               	goto	l3294
  2578  0007EC  5041               	movf	_V22,w,c
  2579  0007EE  6240               	cpfseq	_V2,c
  2580  0007F0  D023               	goto	l3294
  2581  0007F2  5043               	movf	_V33,w,c
  2582  0007F4  6242               	cpfseq	_V3,c
  2583  0007F6  D020               	goto	l3294
  2584                           
  2585                           ;TX20.h: 113: Vit=(V3<<8)+(V2<<4)+(V1);
  2586  0007F8  5040               	movf	_V2,w,c
  2587  0007FA  6E2C               	movwf	??_VitVentms& (0+255),c
  2588  0007FC  6A2D               	clrf	(??_VitVentms+1)& (0+255),c
  2589  0007FE  3A2C               	swapf	??_VitVentms,f,c
  2590  000800  3A2D               	swapf	??_VitVentms+1,f,c
  2591  000802  0EF0               	movlw	240
  2592  000804  162D               	andwf	??_VitVentms+1,f,c
  2593  000806  502C               	movf	??_VitVentms,w,c
  2594  000808  0B0F               	andlw	15
  2595  00080A  122D               	iorwf	??_VitVentms+1,f,c
  2596  00080C  0EF0               	movlw	240
  2597  00080E  162C               	andwf	??_VitVentms,f,c
  2598  000810  5042               	movf	_V3,w,c
  2599  000812  6E2F               	movwf	(??_VitVentms+3)& (0+255),c
  2600  000814  6A2E               	clrf	(??_VitVentms+2)& (0+255),c
  2601  000816  502C               	movf	??_VitVentms,w,c
  2602  000818  262E               	addwf	??_VitVentms+2,f,c
  2603  00081A  502D               	movf	??_VitVentms+1,w,c
  2604  00081C  222F               	addwfc	??_VitVentms+3,f,c
  2605  00081E  503E               	movf	_V1,w,c
  2606  000820  262E               	addwf	??_VitVentms+2,f,c
  2607  000822  0E00               	movlw	0
  2608  000824  222F               	addwfc	??_VitVentms+3,f,c
  2609  000826  C02E  F030         	movff	??_VitVentms+2,VitVentms@Vit
  2610  00082A  C02F  F031         	movff	??_VitVentms+3,VitVentms@Vit+1
  2611  00082E  0E00               	movlw	0
  2612  000830  BE31               	btfsc	VitVentms@Vit+1,7,c
  2613  000832  0EFF               	movlw	-1
  2614  000834  6E32               	movwf	VitVentms@Vit+2,c
  2615  000836  D007               	goto	L2
  2616  000838                     l3294:
  2617                           
  2618                           ;TX20.h: 114: else
  2619                           ;TX20.h: 115: Vit=666;
  2620  000838  0E9A               	movlw	154
  2621  00083A  6E30               	movwf	VitVentms@Vit,c
  2622  00083C  0E02               	movlw	2
  2623  00083E  6E31               	movwf	VitVentms@Vit+1,c
  2624  000840  0E00               	movlw	0
  2625  000842  6E32               	movwf	VitVentms@Vit+2,c
  2626  000844  0E00               	movlw	0
  2627  000846                     L2:
  2628  000846  6E33               	movwf	VitVentms@Vit+3,c
  2629                           
  2630                           ;TX20.h: 116: return(Vit);
  2631  000848  C030  F028         	movff	VitVentms@Vit,?_VitVentms
  2632  00084C  C031  F029         	movff	VitVentms@Vit+1,?_VitVentms+1
  2633  000850  C032  F02A         	movff	VitVentms@Vit+2,?_VitVentms+2
  2634  000854  C033  F02B         	movff	VitVentms@Vit+3,?_VitVentms+3
  2635  000858  0012               	return	
  2636  00085A                     __end_of_VitVentms:
  2637                           	opt stack 0
  2638                           tblptru	equ	0xFF8
  2639                           intcon	equ	0xFF2
  2640                           postinc0	equ	0xFEE
  2641                           wreg	equ	0xFE8
  2642                           indf2	equ	0xFDF
  2643                           fsr2h	equ	0xFDA
  2644                           fsr2l	equ	0xFD9
  2645                           status	equ	0xFD8
  2646                           
  2647 ;; *************** function _Affich_V_Vent_kmh *****************
  2648 ;; Defined at:
  2649 ;;		line 39 in file "Mode_Affich.h"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;  curs            4    0[BANK0 ] unsigned long 
  2652 ;;  tab             2    4[BANK0 ] PTR unsigned char 
  2653 ;;		 -> tab(50), 
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;  vent            4   10[BANK0 ] unsigned long 
  2656 ;;  vent1           4    6[BANK0 ] unsigned long 
  2657 ;; Return value:  Size  Location     Type
  2658 ;;		None               void
  2659 ;; Registers used:
  2660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2666 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2667 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2669 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2670 ;;Total ram usage:       14 bytes
  2671 ;; Hardware stack levels used:    1
  2672 ;; Hardware stack levels required when called:    7
  2673 ;; This function calls:
  2674 ;;		_VitVentkmh
  2675 ;;		_affmotdec
  2676 ;;		_afftext
  2677 ;;		_tempo_Xms
  2678 ;;		_valinstr
  2679 ;; This function is called by:
  2680 ;;		_main
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           	psect	text17
  2685  000934                     __ptext17:
  2686                           	opt stack 0
  2687  000934                     _Affich_V_Vent_kmh:
  2688                           	opt stack 23
  2689                           
  2690                           ;Mode_Affich.h: 41: unsigned long vent, vent1;
  2691                           ;Mode_Affich.h: 42: if(curs==1)
  2692                           
  2693                           ;incstack = 0
  2694  000934  0100               	movlb	0	; () banked
  2695  000936  0597               	decf	Affich_V_Vent_kmh@curs& (0+255),w,b
  2696  000938  1198               	iorwf	(Affich_V_Vent_kmh@curs+1)& (0+255),w,b
  2697  00093A  1199               	iorwf	(Affich_V_Vent_kmh@curs+2)& (0+255),w,b
  2698  00093C  119A               	iorwf	(Affich_V_Vent_kmh@curs+3)& (0+255),w,b
  2699  00093E  A4D8               	btfss	status,2,c
  2700  000940  D013               	goto	l3406
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;Mode_Affich.h: 43: {
  2704                           ;Mode_Affich.h: 44: valinstr(0x01);tempo_Xms(2);
  2705  000942  0E01               	movlw	1
  2706  000944  ECA7  F007         	call	_valinstr
  2707  000948  0E02               	movlw	2
  2708  00094A  6E1A               	movwf	tempo_Xms@time,c
  2709  00094C  0E00               	movlw	0
  2710  00094E  6E1B               	movwf	tempo_Xms@time+1,c
  2711  000950  0E00               	movlw	0
  2712  000952  6E1C               	movwf	tempo_Xms@time+2,c
  2713  000954  0E00               	movlw	0
  2714  000956  6E1D               	movwf	tempo_Xms@time+3,c
  2715  000958  ECD8  F006         	call	_tempo_Xms	;wreg free
  2716                           
  2717                           ;Mode_Affich.h: 45: afftext("Vitesse du vent :");
  2718  00095C  0EFF               	movlw	high STR_2
  2719  00095E  6E1F               	movwf	afftext@ptext+1,c
  2720  000960  0E15               	movlw	low STR_2
  2721  000962  6E1E               	movwf	afftext@ptext,c
  2722  000964  EC8F  F007         	call	_afftext	;wreg free
  2723  000968                     l3406:
  2724                           
  2725                           ;Mode_Affich.h: 46: }
  2726                           ;Mode_Affich.h: 47: vent = VitVentkmh(tab);
  2727  000968  0100               	movlb	0	; () banked
  2728  00096A  C09C  F029         	movff	Affich_V_Vent_kmh@tab+1,VitVentkmh@tab+1
  2729  00096E  0100               	movlb	0	; () banked
  2730  000970  C09B  F028         	movff	Affich_V_Vent_kmh@tab,VitVentkmh@tab
  2731  000974  EC0E  F003         	call	_VitVentkmh	;wreg free
  2732  000978  C028  F0A1         	movff	?_VitVentkmh,Affich_V_Vent_kmh@vent
  2733  00097C  C029  F0A2         	movff	?_VitVentkmh+1,Affich_V_Vent_kmh@vent+1
  2734  000980  C02A  F0A3         	movff	?_VitVentkmh+2,Affich_V_Vent_kmh@vent+2
  2735  000984  C02B  F0A4         	movff	?_VitVentkmh+3,Affich_V_Vent_kmh@vent+3
  2736                           
  2737                           ;Mode_Affich.h: 48: if((vent!=vent1)||(curs==1))
  2738  000988  0100               	movlb	0	; () banked
  2739  00098A  51A0               	movf	(Affich_V_Vent_kmh@vent1+3)& (0+255),w,b
  2740  00098C  0100               	movlb	0	; () banked
  2741  00098E  19A4               	xorwf	(Affich_V_Vent_kmh@vent+3)& (0+255),w,b
  2742  000990  E10E               	bnz	u2885
  2743  000992  0100               	movlb	0	; () banked
  2744  000994  519F               	movf	(Affich_V_Vent_kmh@vent1+2)& (0+255),w,b
  2745  000996  0100               	movlb	0	; () banked
  2746  000998  19A3               	xorwf	(Affich_V_Vent_kmh@vent+2)& (0+255),w,b
  2747  00099A  E109               	bnz	u2885
  2748  00099C  0100               	movlb	0	; () banked
  2749  00099E  519E               	movf	(Affich_V_Vent_kmh@vent1+1)& (0+255),w,b
  2750  0009A0  0100               	movlb	0	; () banked
  2751  0009A2  19A2               	xorwf	(Affich_V_Vent_kmh@vent+1)& (0+255),w,b
  2752  0009A4  E104               	bnz	u2885
  2753  0009A6  0100               	movlb	0	; () banked
  2754  0009A8  519D               	movf	Affich_V_Vent_kmh@vent1& (0+255),w,b
  2755  0009AA  0100               	movlb	0	; () banked
  2756  0009AC  19A1               	xorwf	Affich_V_Vent_kmh@vent& (0+255),w,b
  2757  0009AE                     u2885:
  2758  0009AE  A4D8               	btfss	status,2,c
  2759  0009B0  D007               	goto	l3412
  2760                           
  2761                           ; BSR set to: 0
  2762  0009B2  0100               	movlb	0	; () banked
  2763  0009B4  0597               	decf	Affich_V_Vent_kmh@curs& (0+255),w,b
  2764  0009B6  1198               	iorwf	(Affich_V_Vent_kmh@curs+1)& (0+255),w,b
  2765  0009B8  1199               	iorwf	(Affich_V_Vent_kmh@curs+2)& (0+255),w,b
  2766  0009BA  119A               	iorwf	(Affich_V_Vent_kmh@curs+3)& (0+255),w,b
  2767  0009BC  A4D8               	btfss	status,2,c
  2768  0009BE  D01E               	goto	l3422
  2769  0009C0                     l3412:
  2770                           
  2771                           ; BSR set to: 0
  2772                           ;Mode_Affich.h: 49: {
  2773                           ;Mode_Affich.h: 50: valinstr(0xC0); afftext("                                       ");
  2774  0009C0  0EC0               	movlw	192
  2775  0009C2  ECA7  F007         	call	_valinstr
  2776  0009C6  0EFE               	movlw	high STR_3
  2777  0009C8  6E1F               	movwf	afftext@ptext+1,c
  2778  0009CA  0ED9               	movlw	low STR_3
  2779  0009CC  6E1E               	movwf	afftext@ptext,c
  2780  0009CE  EC8F  F007         	call	_afftext	;wreg free
  2781                           
  2782                           ;Mode_Affich.h: 51: valinstr(0xC0);
  2783  0009D2  0EC0               	movlw	192
  2784  0009D4  ECA7  F007         	call	_valinstr
  2785                           
  2786                           ;Mode_Affich.h: 52: affmotdec(vent,2);
  2787  0009D8  C0A1  F027         	movff	Affich_V_Vent_kmh@vent,affmotdec@data
  2788  0009DC  C0A2  F028         	movff	Affich_V_Vent_kmh@vent+1,affmotdec@data+1
  2789  0009E0  C0A3  F029         	movff	Affich_V_Vent_kmh@vent+2,affmotdec@data+2
  2790  0009E4  C0A4  F02A         	movff	Affich_V_Vent_kmh@vent+3,affmotdec@data+3
  2791  0009E8  0E02               	movlw	2
  2792  0009EA  6E2B               	movwf	affmotdec@coma,c
  2793  0009EC  EC5D  F000         	call	_affmotdec	;wreg free
  2794                           
  2795                           ;Mode_Affich.h: 53: afftext(" Km/H");
  2796  0009F0  0EFF               	movlw	high STR_4
  2797  0009F2  6E1F               	movwf	afftext@ptext+1,c
  2798  0009F4  0EE4               	movlw	low STR_4
  2799  0009F6  6E1E               	movwf	afftext@ptext,c
  2800  0009F8  EC8F  F007         	call	_afftext	;wreg free
  2801  0009FC                     l3422:
  2802                           
  2803                           ;Mode_Affich.h: 55: }
  2804                           ;Mode_Affich.h: 56: vent1=vent;
  2805  0009FC  C0A1  F09D         	movff	Affich_V_Vent_kmh@vent,Affich_V_Vent_kmh@vent1
  2806  000A00  C0A2  F09E         	movff	Affich_V_Vent_kmh@vent+1,Affich_V_Vent_kmh@vent1+1
  2807  000A04  C0A3  F09F         	movff	Affich_V_Vent_kmh@vent+2,Affich_V_Vent_kmh@vent1+2
  2808  000A08  C0A4  F0A0         	movff	Affich_V_Vent_kmh@vent+3,Affich_V_Vent_kmh@vent1+3
  2809  000A0C  0012               	return	
  2810  000A0E                     __end_of_Affich_V_Vent_kmh:
  2811                           	opt stack 0
  2812                           tblptru	equ	0xFF8
  2813                           intcon	equ	0xFF2
  2814                           postinc0	equ	0xFEE
  2815                           wreg	equ	0xFE8
  2816                           indf2	equ	0xFDF
  2817                           fsr2h	equ	0xFDA
  2818                           fsr2l	equ	0xFD9
  2819                           status	equ	0xFD8
  2820                           
  2821 ;; *************** function _VitVentkmh *****************
  2822 ;; Defined at:
  2823 ;;		line 86 in file "TX20.h"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;  tab             2   39[COMRAM] PTR unsigned char 
  2826 ;;		 -> tab(50), 
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;  Vit             4   47[COMRAM] unsigned long 
  2829 ;; Return value:  Size  Location     Type
  2830 ;;                  4   39[COMRAM] unsigned long 
  2831 ;; Registers used:
  2832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2833 ;; Tracked objects:
  2834 ;;		On entry : 0/0
  2835 ;;		On exit  : 0/0
  2836 ;;		Unchanged: 0/0
  2837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2838 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2839 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2840 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2841 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2842 ;;Total ram usage:       12 bytes
  2843 ;; Hardware stack levels used:    1
  2844 ;; Hardware stack levels required when called:    4
  2845 ;; This function calls:
  2846 ;;		___lmul
  2847 ;;		_traitementVent
  2848 ;; This function is called by:
  2849 ;;		_Affich_V_Vent_kmh
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853                           	psect	text18
  2854  00061C                     __ptext18:
  2855                           	opt stack 0
  2856  00061C                     _VitVentkmh:
  2857                           	opt stack 25
  2858                           
  2859                           ;TX20.h: 88: unsigned long Vit;
  2860                           ;TX20.h: 89: V1=traitementVent(8,12,tab,1);
  2861                           
  2862                           ;incstack = 0
  2863  00061C  0E0C               	movlw	12
  2864  00061E  6E1A               	movwf	traitementVent@y,c
  2865  000620  C029  F01C         	movff	VitVentkmh@tab+1,traitementVent@tab+1
  2866  000624  C028  F01B         	movff	VitVentkmh@tab,traitementVent@tab
  2867  000628  0E01               	movlw	1
  2868  00062A  6E1D               	movwf	traitementVent@Inv,c
  2869  00062C  0E08               	movlw	8
  2870  00062E  EC2F  F006         	call	_traitementVent
  2871  000632  6E3E               	movwf	_V1,c
  2872                           
  2873                           ;TX20.h: 90: V2=traitementVent(12,16,tab,1);
  2874  000634  0E10               	movlw	16
  2875  000636  6E1A               	movwf	traitementVent@y,c
  2876  000638  C029  F01C         	movff	VitVentkmh@tab+1,traitementVent@tab+1
  2877  00063C  C028  F01B         	movff	VitVentkmh@tab,traitementVent@tab
  2878  000640  0E01               	movlw	1
  2879  000642  6E1D               	movwf	traitementVent@Inv,c
  2880  000644  0E0C               	movlw	12
  2881  000646  EC2F  F006         	call	_traitementVent
  2882  00064A  6E40               	movwf	_V2,c
  2883                           
  2884                           ;TX20.h: 91: V3=traitementVent(16,20,tab,1);
  2885  00064C  0E14               	movlw	20
  2886  00064E  6E1A               	movwf	traitementVent@y,c
  2887  000650  C029  F01C         	movff	VitVentkmh@tab+1,traitementVent@tab+1
  2888  000654  C028  F01B         	movff	VitVentkmh@tab,traitementVent@tab
  2889  000658  0E01               	movlw	1
  2890  00065A  6E1D               	movwf	traitementVent@Inv,c
  2891  00065C  0E10               	movlw	16
  2892  00065E  EC2F  F006         	call	_traitementVent
  2893  000662  6E42               	movwf	_V3,c
  2894                           
  2895                           ;TX20.h: 92: V11=traitementVent(28,32,tab,0);
  2896  000664  0E20               	movlw	32
  2897  000666  6E1A               	movwf	traitementVent@y,c
  2898  000668  C029  F01C         	movff	VitVentkmh@tab+1,traitementVent@tab+1
  2899  00066C  C028  F01B         	movff	VitVentkmh@tab,traitementVent@tab
  2900  000670  0E00               	movlw	0
  2901  000672  6E1D               	movwf	traitementVent@Inv,c
  2902  000674  0E1C               	movlw	28
  2903  000676  EC2F  F006         	call	_traitementVent
  2904  00067A  6E3F               	movwf	_V11,c
  2905                           
  2906                           ;TX20.h: 93: V22=traitementVent(32,36,tab,0);
  2907  00067C  0E24               	movlw	36
  2908  00067E  6E1A               	movwf	traitementVent@y,c
  2909  000680  C029  F01C         	movff	VitVentkmh@tab+1,traitementVent@tab+1
  2910  000684  C028  F01B         	movff	VitVentkmh@tab,traitementVent@tab
  2911  000688  0E00               	movlw	0
  2912  00068A  6E1D               	movwf	traitementVent@Inv,c
  2913  00068C  0E20               	movlw	32
  2914  00068E  EC2F  F006         	call	_traitementVent
  2915  000692  6E41               	movwf	_V22,c
  2916                           
  2917                           ;TX20.h: 94: V33=traitementVent(36,40,tab,0);
  2918  000694  0E28               	movlw	40
  2919  000696  6E1A               	movwf	traitementVent@y,c
  2920  000698  C029  F01C         	movff	VitVentkmh@tab+1,traitementVent@tab+1
  2921  00069C  C028  F01B         	movff	VitVentkmh@tab,traitementVent@tab
  2922  0006A0  0E00               	movlw	0
  2923  0006A2  6E1D               	movwf	traitementVent@Inv,c
  2924  0006A4  0E24               	movlw	36
  2925  0006A6  EC2F  F006         	call	_traitementVent
  2926  0006AA  6E43               	movwf	_V33,c
  2927                           
  2928                           ;TX20.h: 95: if((V1==V11)&(V2==V22)&(V3==V33))
  2929  0006AC  503F               	movf	_V11,w,c
  2930  0006AE  623E               	cpfseq	_V1,c
  2931  0006B0  D041               	goto	l3278
  2932  0006B2  5041               	movf	_V22,w,c
  2933  0006B4  6240               	cpfseq	_V2,c
  2934  0006B6  D03E               	goto	l3278
  2935  0006B8  5043               	movf	_V33,w,c
  2936  0006BA  6242               	cpfseq	_V3,c
  2937  0006BC  D03B               	goto	l3278
  2938                           
  2939                           ;TX20.h: 96: { Vit=(V3<<8)+(V2<<4)+(V1);
  2940  0006BE  5040               	movf	_V2,w,c
  2941  0006C0  6E2C               	movwf	??_VitVentkmh& (0+255),c
  2942  0006C2  6A2D               	clrf	(??_VitVentkmh+1)& (0+255),c
  2943  0006C4  3A2C               	swapf	??_VitVentkmh,f,c
  2944  0006C6  3A2D               	swapf	??_VitVentkmh+1,f,c
  2945  0006C8  0EF0               	movlw	240
  2946  0006CA  162D               	andwf	??_VitVentkmh+1,f,c
  2947  0006CC  502C               	movf	??_VitVentkmh,w,c
  2948  0006CE  0B0F               	andlw	15
  2949  0006D0  122D               	iorwf	??_VitVentkmh+1,f,c
  2950  0006D2  0EF0               	movlw	240
  2951  0006D4  162C               	andwf	??_VitVentkmh,f,c
  2952  0006D6  5042               	movf	_V3,w,c
  2953  0006D8  6E2F               	movwf	(??_VitVentkmh+3)& (0+255),c
  2954  0006DA  6A2E               	clrf	(??_VitVentkmh+2)& (0+255),c
  2955  0006DC  502C               	movf	??_VitVentkmh,w,c
  2956  0006DE  262E               	addwf	??_VitVentkmh+2,f,c
  2957  0006E0  502D               	movf	??_VitVentkmh+1,w,c
  2958  0006E2  222F               	addwfc	??_VitVentkmh+3,f,c
  2959  0006E4  503E               	movf	_V1,w,c
  2960  0006E6  262E               	addwf	??_VitVentkmh+2,f,c
  2961  0006E8  0E00               	movlw	0
  2962  0006EA  222F               	addwfc	??_VitVentkmh+3,f,c
  2963  0006EC  C02E  F030         	movff	??_VitVentkmh+2,VitVentkmh@Vit
  2964  0006F0  C02F  F031         	movff	??_VitVentkmh+3,VitVentkmh@Vit+1
  2965  0006F4  0E00               	movlw	0
  2966  0006F6  BE31               	btfsc	VitVentkmh@Vit+1,7,c
  2967  0006F8  0EFF               	movlw	-1
  2968  0006FA  6E32               	movwf	VitVentkmh@Vit+2,c
  2969  0006FC  6E33               	movwf	VitVentkmh@Vit+3,c
  2970                           
  2971                           ;TX20.h: 97: Vit=(Vit)*36;
  2972  0006FE  C030  F01A         	movff	VitVentkmh@Vit,___lmul@multiplier
  2973  000702  C031  F01B         	movff	VitVentkmh@Vit+1,___lmul@multiplier+1
  2974  000706  C032  F01C         	movff	VitVentkmh@Vit+2,___lmul@multiplier+2
  2975  00070A  C033  F01D         	movff	VitVentkmh@Vit+3,___lmul@multiplier+3
  2976  00070E  0E24               	movlw	36
  2977  000710  6E1E               	movwf	___lmul@multiplicand,c
  2978  000712  0E00               	movlw	0
  2979  000714  6E1F               	movwf	___lmul@multiplicand+1,c
  2980  000716  0E00               	movlw	0
  2981  000718  6E20               	movwf	___lmul@multiplicand+2,c
  2982  00071A  0E00               	movlw	0
  2983  00071C  6E21               	movwf	___lmul@multiplicand+3,c
  2984  00071E  EC5E  F006         	call	___lmul	;wreg free
  2985  000722  C01A  F030         	movff	?___lmul,VitVentkmh@Vit
  2986  000726  C01B  F031         	movff	?___lmul+1,VitVentkmh@Vit+1
  2987  00072A  C01C  F032         	movff	?___lmul+2,VitVentkmh@Vit+2
  2988  00072E  C01D  F033         	movff	?___lmul+3,VitVentkmh@Vit+3
  2989                           
  2990                           ;TX20.h: 98: }
  2991  000732  D008               	goto	l3280
  2992  000734                     l3278:
  2993                           
  2994                           ;TX20.h: 99: else
  2995                           ;TX20.h: 100: Vit=666;
  2996  000734  0E9A               	movlw	154
  2997  000736  6E30               	movwf	VitVentkmh@Vit,c
  2998  000738  0E02               	movlw	2
  2999  00073A  6E31               	movwf	VitVentkmh@Vit+1,c
  3000  00073C  0E00               	movlw	0
  3001  00073E  6E32               	movwf	VitVentkmh@Vit+2,c
  3002  000740  0E00               	movlw	0
  3003  000742  6E33               	movwf	VitVentkmh@Vit+3,c
  3004  000744                     l3280:
  3005                           
  3006                           ;TX20.h: 101: return(Vit);
  3007  000744  C030  F028         	movff	VitVentkmh@Vit,?_VitVentkmh
  3008  000748  C031  F029         	movff	VitVentkmh@Vit+1,?_VitVentkmh+1
  3009  00074C  C032  F02A         	movff	VitVentkmh@Vit+2,?_VitVentkmh+2
  3010  000750  C033  F02B         	movff	VitVentkmh@Vit+3,?_VitVentkmh+3
  3011  000754  0012               	return	
  3012  000756                     __end_of_VitVentkmh:
  3013                           	opt stack 0
  3014                           tblptru	equ	0xFF8
  3015                           intcon	equ	0xFF2
  3016                           postinc0	equ	0xFEE
  3017                           wreg	equ	0xFE8
  3018                           indf2	equ	0xFDF
  3019                           fsr2h	equ	0xFDA
  3020                           fsr2l	equ	0xFD9
  3021                           status	equ	0xFD8
  3022                           
  3023 ;; *************** function ___lmul *****************
  3024 ;; Defined at:
  3025 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul32.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;  multiplier      4   25[COMRAM] unsigned long 
  3028 ;;  multiplicand    4   29[COMRAM] unsigned long 
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;  product         4   33[COMRAM] unsigned long 
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  4   25[COMRAM] unsigned long 
  3033 ;; Registers used:
  3034 ;;		wreg, status,2, status,0
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3040 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3041 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3043 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3044 ;;Total ram usage:       12 bytes
  3045 ;; Hardware stack levels used:    1
  3046 ;; Hardware stack levels required when called:    3
  3047 ;; This function calls:
  3048 ;;		Nothing
  3049 ;; This function is called by:
  3050 ;;		_VitVentkmh
  3051 ;;		_ValeurBufferDec
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055                           	psect	text19
  3056  000CBC                     __ptext19:
  3057                           	opt stack 0
  3058  000CBC                     ___lmul:
  3059                           	opt stack 25
  3060                           
  3061                           ;incstack = 0
  3062  000CBC  0E00               	movlw	0
  3063  000CBE  6E22               	movwf	___lmul@product,c
  3064  000CC0  0E00               	movlw	0
  3065  000CC2  6E23               	movwf	___lmul@product+1,c
  3066  000CC4  0E00               	movlw	0
  3067  000CC6  6E24               	movwf	___lmul@product+2,c
  3068  000CC8  0E00               	movlw	0
  3069  000CCA  6E25               	movwf	___lmul@product+3,c
  3070  000CCC                     l3152:
  3071  000CCC  A01A               	btfss	___lmul@multiplier,0,c
  3072  000CCE  D008               	goto	l3156
  3073  000CD0  501E               	movf	___lmul@multiplicand,w,c
  3074  000CD2  2622               	addwf	___lmul@product,f,c
  3075  000CD4  501F               	movf	___lmul@multiplicand+1,w,c
  3076  000CD6  2223               	addwfc	___lmul@product+1,f,c
  3077  000CD8  5020               	movf	___lmul@multiplicand+2,w,c
  3078  000CDA  2224               	addwfc	___lmul@product+2,f,c
  3079  000CDC  5021               	movf	___lmul@multiplicand+3,w,c
  3080  000CDE  2225               	addwfc	___lmul@product+3,f,c
  3081  000CE0                     l3156:
  3082  000CE0  90D8               	bcf	status,0,c
  3083  000CE2  361E               	rlcf	___lmul@multiplicand,f,c
  3084  000CE4  361F               	rlcf	___lmul@multiplicand+1,f,c
  3085  000CE6  3620               	rlcf	___lmul@multiplicand+2,f,c
  3086  000CE8  3621               	rlcf	___lmul@multiplicand+3,f,c
  3087  000CEA  90D8               	bcf	status,0,c
  3088  000CEC  321D               	rrcf	___lmul@multiplier+3,f,c
  3089  000CEE  321C               	rrcf	___lmul@multiplier+2,f,c
  3090  000CF0  321B               	rrcf	___lmul@multiplier+1,f,c
  3091  000CF2  321A               	rrcf	___lmul@multiplier,f,c
  3092  000CF4  501D               	movf	___lmul@multiplier+3,w,c
  3093  000CF6  101A               	iorwf	___lmul@multiplier,w,c
  3094  000CF8  101B               	iorwf	___lmul@multiplier+1,w,c
  3095  000CFA  101C               	iorwf	___lmul@multiplier+2,w,c
  3096  000CFC  A4D8               	btfss	status,2,c
  3097  000CFE  D7E6               	goto	l3152
  3098  000D00  C022  F01A         	movff	___lmul@product,?___lmul
  3099  000D04  C023  F01B         	movff	___lmul@product+1,?___lmul+1
  3100  000D08  C024  F01C         	movff	___lmul@product+2,?___lmul+2
  3101  000D0C  C025  F01D         	movff	___lmul@product+3,?___lmul+3
  3102  000D10  0012               	return	
  3103  000D12                     __end_of___lmul:
  3104                           	opt stack 0
  3105                           tblptru	equ	0xFF8
  3106                           intcon	equ	0xFF2
  3107                           postinc0	equ	0xFEE
  3108                           wreg	equ	0xFE8
  3109                           indf2	equ	0xFDF
  3110                           fsr2h	equ	0xFDA
  3111                           fsr2l	equ	0xFD9
  3112                           status	equ	0xFD8
  3113                           
  3114 ;; *************** function _Affich_D_Vent *****************
  3115 ;; Defined at:
  3116 ;;		line 79 in file "Mode_Affich.h"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;  curs            4   41[COMRAM] unsigned long 
  3119 ;;  tab             2   45[COMRAM] PTR unsigned char 
  3120 ;;		 -> tab(50), 
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;  vent            1   48[COMRAM] unsigned char 
  3123 ;;  vent1           1   47[COMRAM] unsigned char 
  3124 ;; Return value:  Size  Location     Type
  3125 ;;		None               void
  3126 ;; Registers used:
  3127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3133 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3136 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3137 ;;Total ram usage:        8 bytes
  3138 ;; Hardware stack levels used:    1
  3139 ;; Hardware stack levels required when called:    7
  3140 ;; This function calls:
  3141 ;;		_DirVent
  3142 ;;		_afftext
  3143 ;;		_tempo_Xms
  3144 ;;		_valinstr
  3145 ;; This function is called by:
  3146 ;;		_main
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           	psect	text20
  3151  000314                     __ptext20:
  3152                           	opt stack 0
  3153  000314                     _Affich_D_Vent:
  3154                           	opt stack 23
  3155                           
  3156                           ;Mode_Affich.h: 81: char vent, vent1;
  3157                           ;Mode_Affich.h: 82: if(curs==1)
  3158                           
  3159                           ;incstack = 0
  3160  000314  042A               	decf	Affich_D_Vent@curs,w,c
  3161  000316  102B               	iorwf	Affich_D_Vent@curs+1,w,c
  3162  000318  102C               	iorwf	Affich_D_Vent@curs+2,w,c
  3163  00031A  102D               	iorwf	Affich_D_Vent@curs+3,w,c
  3164  00031C  A4D8               	btfss	status,2,c
  3165  00031E  D013               	goto	l3458
  3166                           
  3167                           ;Mode_Affich.h: 83: {
  3168                           ;Mode_Affich.h: 84: valinstr(0x01);tempo_Xms(2);
  3169  000320  0E01               	movlw	1
  3170  000322  ECA7  F007         	call	_valinstr
  3171  000326  0E02               	movlw	2
  3172  000328  6E1A               	movwf	tempo_Xms@time,c
  3173  00032A  0E00               	movlw	0
  3174  00032C  6E1B               	movwf	tempo_Xms@time+1,c
  3175  00032E  0E00               	movlw	0
  3176  000330  6E1C               	movwf	tempo_Xms@time+2,c
  3177  000332  0E00               	movlw	0
  3178  000334  6E1D               	movwf	tempo_Xms@time+3,c
  3179  000336  ECD8  F006         	call	_tempo_Xms	;wreg free
  3180                           
  3181                           ;Mode_Affich.h: 85: afftext("Direction vent: ");
  3182  00033A  0EFF               	movlw	high STR_8
  3183  00033C  6E1F               	movwf	afftext@ptext+1,c
  3184  00033E  0E27               	movlw	low STR_8
  3185  000340  6E1E               	movwf	afftext@ptext,c
  3186  000342  EC8F  F007         	call	_afftext	;wreg free
  3187  000346                     l3458:
  3188                           
  3189                           ;Mode_Affich.h: 86: }
  3190                           ;Mode_Affich.h: 87: vent = DirVent(tab);
  3191  000346  C02F  F029         	movff	Affich_D_Vent@tab+1,DirVent@tab+1
  3192  00034A  C02E  F028         	movff	Affich_D_Vent@tab,DirVent@tab
  3193  00034E  EC3A  F007         	call	_DirVent	;wreg free
  3194  000352  6E31               	movwf	Affich_D_Vent@vent,c
  3195                           
  3196                           ;Mode_Affich.h: 88: if((vent!=vent1)||(curs==1))
  3197  000354  5030               	movf	Affich_D_Vent@vent1,w,c
  3198  000356  6231               	cpfseq	Affich_D_Vent@vent,c
  3199  000358  D006               	goto	l3464
  3200  00035A  042A               	decf	Affich_D_Vent@curs,w,c
  3201  00035C  102B               	iorwf	Affich_D_Vent@curs+1,w,c
  3202  00035E  102C               	iorwf	Affich_D_Vent@curs+2,w,c
  3203  000360  102D               	iorwf	Affich_D_Vent@curs+3,w,c
  3204  000362  A4D8               	btfss	status,2,c
  3205  000364  D0B6               	goto	l284
  3206  000366                     l3464:
  3207                           
  3208                           ;Mode_Affich.h: 89: {
  3209                           ;Mode_Affich.h: 90: valinstr(0xC0); afftext("                                       ");
  3210  000366  0EC0               	movlw	192
  3211  000368  ECA7  F007         	call	_valinstr
  3212  00036C  0EFE               	movlw	high STR_3
  3213  00036E  6E1F               	movwf	afftext@ptext+1,c
  3214  000370  0ED9               	movlw	low STR_3
  3215  000372  6E1E               	movwf	afftext@ptext,c
  3216  000374  EC8F  F007         	call	_afftext	;wreg free
  3217                           
  3218                           ;Mode_Affich.h: 91: valinstr(0xC0);
  3219  000378  0EC0               	movlw	192
  3220  00037A  ECA7  F007         	call	_valinstr
  3221                           
  3222                           ;Mode_Affich.h: 92: switch (vent)
  3223  00037E  D077               	goto	l3504
  3224  000380                     l3470:
  3225  000380  0EFF               	movlw	high STR_10
  3226  000382  6E1F               	movwf	afftext@ptext+1,c
  3227  000384  0EF0               	movlw	low STR_10
  3228  000386  6E1E               	movwf	afftext@ptext,c
  3229  000388  EC8F  F007         	call	_afftext	;wreg free
  3230                           
  3231                           ;Mode_Affich.h: 95: break;
  3232  00038C  D0A2               	goto	l284
  3233  00038E                     l3472:
  3234  00038E  0EFF               	movlw	high STR_11
  3235  000390  6E1F               	movwf	afftext@ptext+1,c
  3236  000392  0E85               	movlw	low STR_11
  3237  000394  6E1E               	movwf	afftext@ptext,c
  3238  000396  EC8F  F007         	call	_afftext	;wreg free
  3239                           
  3240                           ;Mode_Affich.h: 97: break;
  3241  00039A  D09B               	goto	l284
  3242  00039C                     l3474:
  3243  00039C  0EFF               	movlw	high (STR_11+5)
  3244  00039E  6E1F               	movwf	afftext@ptext+1,c
  3245  0003A0  0E8A               	movlw	low (STR_11+5)
  3246  0003A2  6E1E               	movwf	afftext@ptext,c
  3247  0003A4  EC8F  F007         	call	_afftext	;wreg free
  3248                           
  3249                           ;Mode_Affich.h: 99: break;
  3250  0003A8  D094               	goto	l284
  3251  0003AA                     l3476:
  3252  0003AA  0EFF               	movlw	high STR_13
  3253  0003AC  6E1F               	movwf	afftext@ptext+1,c
  3254  0003AE  0EA1               	movlw	low STR_13
  3255  0003B0  6E1E               	movwf	afftext@ptext,c
  3256  0003B2  EC8F  F007         	call	_afftext	;wreg free
  3257                           
  3258                           ;Mode_Affich.h: 101: break;
  3259  0003B6  D08D               	goto	l284
  3260  0003B8                     l3478:
  3261  0003B8  0EFF               	movlw	high (STR_11+10)
  3262  0003BA  6E1F               	movwf	afftext@ptext+1,c
  3263  0003BC  0E8F               	movlw	low (STR_11+10)
  3264  0003BE  6E1E               	movwf	afftext@ptext,c
  3265  0003C0  EC8F  F007         	call	_afftext	;wreg free
  3266                           
  3267                           ;Mode_Affich.h: 103: break;
  3268  0003C4  D086               	goto	l284
  3269  0003C6                     l3480:
  3270  0003C6  0EFF               	movlw	high STR_15
  3271  0003C8  6E1F               	movwf	afftext@ptext+1,c
  3272  0003CA  0EC7               	movlw	low STR_15
  3273  0003CC  6E1E               	movwf	afftext@ptext,c
  3274  0003CE  EC8F  F007         	call	_afftext	;wreg free
  3275                           
  3276                           ;Mode_Affich.h: 105: break;
  3277  0003D2  D07F               	goto	l284
  3278  0003D4                     l3482:
  3279  0003D4  0EFF               	movlw	high (STR_17+4)
  3280  0003D6  6E1F               	movwf	afftext@ptext+1,c
  3281  0003D8  0EBF               	movlw	low (STR_17+4)
  3282  0003DA  6E1E               	movwf	afftext@ptext,c
  3283  0003DC  EC8F  F007         	call	_afftext	;wreg free
  3284                           
  3285                           ;Mode_Affich.h: 107: break;
  3286  0003E0  D078               	goto	l284
  3287  0003E2                     l3484:
  3288  0003E2  0EFF               	movlw	high STR_17
  3289  0003E4  6E1F               	movwf	afftext@ptext+1,c
  3290  0003E6  0EBB               	movlw	low STR_17
  3291  0003E8  6E1E               	movwf	afftext@ptext,c
  3292  0003EA  EC8F  F007         	call	_afftext	;wreg free
  3293                           
  3294                           ;Mode_Affich.h: 109: break;
  3295  0003EE  D071               	goto	l284
  3296  0003F0                     l3486:
  3297  0003F0  0EFF               	movlw	high STR_18
  3298  0003F2  6E1F               	movwf	afftext@ptext+1,c
  3299  0003F4  0EFA               	movlw	low STR_18
  3300  0003F6  6E1E               	movwf	afftext@ptext,c
  3301  0003F8  EC8F  F007         	call	_afftext	;wreg free
  3302                           
  3303                           ;Mode_Affich.h: 111: break;
  3304  0003FC  D06A               	goto	l284
  3305  0003FE                     l3488:
  3306  0003FE  0EFF               	movlw	high STR_19
  3307  000400  6E1F               	movwf	afftext@ptext+1,c
  3308  000402  0E93               	movlw	low STR_19
  3309  000404  6E1E               	movwf	afftext@ptext,c
  3310  000406  EC8F  F007         	call	_afftext	;wreg free
  3311                           
  3312                           ;Mode_Affich.h: 113: break;
  3313  00040A  D063               	goto	l284
  3314  00040C                     l3490:
  3315  00040C  0EFF               	movlw	high (STR_19+4)
  3316  00040E  6E1F               	movwf	afftext@ptext+1,c
  3317  000410  0E97               	movlw	low (STR_19+4)
  3318  000412  6E1E               	movwf	afftext@ptext,c
  3319  000414  EC8F  F007         	call	_afftext	;wreg free
  3320                           
  3321                           ;Mode_Affich.h: 115: break;
  3322  000418  D05C               	goto	l284
  3323  00041A                     l3492:
  3324  00041A  0EFF               	movlw	high STR_21
  3325  00041C  6E1F               	movwf	afftext@ptext+1,c
  3326  00041E  0E59               	movlw	low STR_21
  3327  000420  6E1E               	movwf	afftext@ptext,c
  3328  000422  EC8F  F007         	call	_afftext	;wreg free
  3329                           
  3330                           ;Mode_Affich.h: 117: break;
  3331  000426  D055               	goto	l284
  3332  000428                     l3494:
  3333  000428  0EFF               	movlw	high (STR_25+10)
  3334  00042A  6E1F               	movwf	afftext@ptext+1,c
  3335  00042C  0E53               	movlw	low (STR_25+10)
  3336  00042E  6E1E               	movwf	afftext@ptext,c
  3337  000430  EC8F  F007         	call	_afftext	;wreg free
  3338                           
  3339                           ;Mode_Affich.h: 119: break;
  3340  000434  D04E               	goto	l284
  3341  000436                     l3496:
  3342  000436  0EFF               	movlw	high STR_23
  3343  000438  6E1F               	movwf	afftext@ptext+1,c
  3344  00043A  0E38               	movlw	low STR_23
  3345  00043C  6E1E               	movwf	afftext@ptext,c
  3346  00043E  EC8F  F007         	call	_afftext	;wreg free
  3347                           
  3348                           ;Mode_Affich.h: 121: break;
  3349  000442  D047               	goto	l284
  3350  000444                     l3498:
  3351  000444  0EFF               	movlw	high (STR_25+5)
  3352  000446  6E1F               	movwf	afftext@ptext+1,c
  3353  000448  0E4E               	movlw	low (STR_25+5)
  3354  00044A  6E1E               	movwf	afftext@ptext,c
  3355  00044C  EC8F  F007         	call	_afftext	;wreg free
  3356                           
  3357                           ;Mode_Affich.h: 123: break;
  3358  000450  D040               	goto	l284
  3359  000452                     l3500:
  3360  000452  0EFF               	movlw	high STR_25
  3361  000454  6E1F               	movwf	afftext@ptext+1,c
  3362  000456  0E49               	movlw	low STR_25
  3363  000458  6E1E               	movwf	afftext@ptext,c
  3364  00045A  EC8F  F007         	call	_afftext	;wreg free
  3365                           
  3366                           ;Mode_Affich.h: 125: break;
  3367  00045E  D039               	goto	l284
  3368  000460                     l3502:
  3369  000460  0EFF               	movlw	high STR_26
  3370  000462  6E1F               	movwf	afftext@ptext+1,c
  3371  000464  0EEA               	movlw	low STR_26
  3372  000466  6E1E               	movwf	afftext@ptext,c
  3373  000468  EC8F  F007         	call	_afftext	;wreg free
  3374                           
  3375                           ;Mode_Affich.h: 127: }
  3376  00046C  D032               	goto	l284
  3377  00046E                     l3504:
  3378  00046E  5031               	movf	Affich_D_Vent@vent,w,c
  3379                           
  3380                           ; Switch size 1, requested type "space"
  3381                           ; Number of cases is 16, Range of values is 0 to 15
  3382                           ; switch strategies available:
  3383                           ; Name         Instructions Cycles
  3384                           ; simple_byte           49    25 (average)
  3385                           ;	Chosen strategy is simple_byte
  3386  000470  0A00               	xorlw	0	; case 0
  3387  000472  B4D8               	btfsc	status,2,c
  3388  000474  D785               	goto	l3470
  3389  000476  0A01               	xorlw	1	; case 1
  3390  000478  B4D8               	btfsc	status,2,c
  3391  00047A  D789               	goto	l3472
  3392  00047C  0A03               	xorlw	3	; case 2
  3393  00047E  B4D8               	btfsc	status,2,c
  3394  000480  D78D               	goto	l3474
  3395  000482  0A01               	xorlw	1	; case 3
  3396  000484  B4D8               	btfsc	status,2,c
  3397  000486  D791               	goto	l3476
  3398  000488  0A07               	xorlw	7	; case 4
  3399  00048A  B4D8               	btfsc	status,2,c
  3400  00048C  D795               	goto	l3478
  3401  00048E  0A01               	xorlw	1	; case 5
  3402  000490  B4D8               	btfsc	status,2,c
  3403  000492  D799               	goto	l3480
  3404  000494  0A03               	xorlw	3	; case 6
  3405  000496  B4D8               	btfsc	status,2,c
  3406  000498  D79D               	goto	l3482
  3407  00049A  0A01               	xorlw	1	; case 7
  3408  00049C  B4D8               	btfsc	status,2,c
  3409  00049E  D7A1               	goto	l3484
  3410  0004A0  0A0F               	xorlw	15	; case 8
  3411  0004A2  B4D8               	btfsc	status,2,c
  3412  0004A4  D7A5               	goto	l3486
  3413  0004A6  0A01               	xorlw	1	; case 9
  3414  0004A8  B4D8               	btfsc	status,2,c
  3415  0004AA  D7A9               	goto	l3488
  3416  0004AC  0A03               	xorlw	3	; case 10
  3417  0004AE  B4D8               	btfsc	status,2,c
  3418  0004B0  D7AD               	goto	l3490
  3419  0004B2  0A01               	xorlw	1	; case 11
  3420  0004B4  B4D8               	btfsc	status,2,c
  3421  0004B6  D7B1               	goto	l3492
  3422  0004B8  0A07               	xorlw	7	; case 12
  3423  0004BA  B4D8               	btfsc	status,2,c
  3424  0004BC  D7B5               	goto	l3494
  3425  0004BE  0A01               	xorlw	1	; case 13
  3426  0004C0  B4D8               	btfsc	status,2,c
  3427  0004C2  D7B9               	goto	l3496
  3428  0004C4  0A03               	xorlw	3	; case 14
  3429  0004C6  B4D8               	btfsc	status,2,c
  3430  0004C8  D7BD               	goto	l3498
  3431  0004CA  0A01               	xorlw	1	; case 15
  3432  0004CC  B4D8               	btfsc	status,2,c
  3433  0004CE  D7C1               	goto	l3500
  3434  0004D0  D7C7               	goto	l3502
  3435  0004D2                     l284:
  3436                           
  3437                           ;Mode_Affich.h: 128: }
  3438                           ;Mode_Affich.h: 129: vent1=vent;
  3439  0004D2  C031  F030         	movff	Affich_D_Vent@vent,Affich_D_Vent@vent1
  3440  0004D6  0012               	return	
  3441  0004D8                     __end_of_Affich_D_Vent:
  3442                           	opt stack 0
  3443                           tblptru	equ	0xFF8
  3444                           intcon	equ	0xFF2
  3445                           postinc0	equ	0xFEE
  3446                           wreg	equ	0xFE8
  3447                           indf2	equ	0xFDF
  3448                           fsr2h	equ	0xFDA
  3449                           fsr2l	equ	0xFD9
  3450                           status	equ	0xFD8
  3451                           
  3452 ;; *************** function _DirVent *****************
  3453 ;; Defined at:
  3454 ;;		line 77 in file "TX20.h"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;  tab             2   39[COMRAM] PTR unsigned char 
  3457 ;;		 -> tab(50), 
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;		None
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  1    wreg      unsigned char 
  3462 ;; Registers used:
  3463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3472 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3473 ;;Total ram usage:        2 bytes
  3474 ;; Hardware stack levels used:    1
  3475 ;; Hardware stack levels required when called:    4
  3476 ;; This function calls:
  3477 ;;		_traitementVent
  3478 ;; This function is called by:
  3479 ;;		_Affich_D_Vent
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           	psect	text21
  3484  000E74                     __ptext21:
  3485                           	opt stack 0
  3486  000E74                     _DirVent:
  3487                           	opt stack 25
  3488                           
  3489                           ;TX20.h: 79: Dir=traitementVent(4,8,tab,1);
  3490                           
  3491                           ;incstack = 0
  3492  000E74  0E08               	movlw	8
  3493  000E76  6E1A               	movwf	traitementVent@y,c
  3494  000E78  C029  F01C         	movff	DirVent@tab+1,traitementVent@tab+1
  3495  000E7C  C028  F01B         	movff	DirVent@tab,traitementVent@tab
  3496  000E80  0E01               	movlw	1
  3497  000E82  6E1D               	movwf	traitementVent@Inv,c
  3498  000E84  0E04               	movlw	4
  3499  000E86  EC2F  F006         	call	_traitementVent
  3500  000E8A  6E3B               	movwf	_Dir,c
  3501                           
  3502                           ;TX20.h: 80: Dirverif=traitementVent(24,28,tab,0);
  3503  000E8C  0E1C               	movlw	28
  3504  000E8E  6E1A               	movwf	traitementVent@y,c
  3505  000E90  C029  F01C         	movff	DirVent@tab+1,traitementVent@tab+1
  3506  000E94  C028  F01B         	movff	DirVent@tab,traitementVent@tab
  3507  000E98  0E00               	movlw	0
  3508  000E9A  6E1D               	movwf	traitementVent@Inv,c
  3509  000E9C  0E18               	movlw	24
  3510  000E9E  EC2F  F006         	call	_traitementVent
  3511  000EA2  6E3C               	movwf	_Dirverif,c
  3512                           
  3513                           ;TX20.h: 81: if(Dir==Dirverif)
  3514  000EA4  503C               	movf	_Dirverif,w,c
  3515  000EA6  623B               	cpfseq	_Dir,c
  3516  000EA8  D002               	goto	l3310
  3517                           
  3518                           ;TX20.h: 82: return(Dir);
  3519  000EAA  503B               	movf	_Dir,w,c
  3520  000EAC  0012               	return	
  3521  000EAE                     l3310:
  3522                           
  3523                           ;TX20.h: 83: else
  3524                           ;TX20.h: 84: return(200);
  3525  000EAE  0EC8               	movlw	200
  3526  000EB0  0012               	return	
  3527  000EB2                     __end_of_DirVent:
  3528                           	opt stack 0
  3529                           tblptru	equ	0xFF8
  3530                           intcon	equ	0xFF2
  3531                           postinc0	equ	0xFEE
  3532                           wreg	equ	0xFE8
  3533                           indf2	equ	0xFDF
  3534                           fsr2h	equ	0xFDA
  3535                           fsr2l	equ	0xFD9
  3536                           status	equ	0xFD8
  3537                           
  3538 ;; *************** function _traitementVent *****************
  3539 ;; Defined at:
  3540 ;;		line 60 in file "TX20.h"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;  x               1    wreg     unsigned char 
  3543 ;;  y               1   25[COMRAM] unsigned char 
  3544 ;;  tab             2   26[COMRAM] PTR unsigned char 
  3545 ;;		 -> tab(50), 
  3546 ;;  Inv             1   28[COMRAM] unsigned char 
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;  x               1   33[COMRAM] unsigned char 
  3549 ;;  i               4   34[COMRAM] unsigned long 
  3550 ;;  data            1   38[COMRAM] unsigned char 
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  1    wreg      unsigned char 
  3553 ;; Registers used:
  3554 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3560 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3561 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3562 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3563 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;Total ram usage:       14 bytes
  3565 ;; Hardware stack levels used:    1
  3566 ;; Hardware stack levels required when called:    3
  3567 ;; This function calls:
  3568 ;;		Nothing
  3569 ;; This function is called by:
  3570 ;;		_DirVent
  3571 ;;		_VitVentkmh
  3572 ;;		_VitVentms
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576                           	psect	text22
  3577  000C5E                     __ptext22:
  3578                           	opt stack 0
  3579  000C5E                     _traitementVent:
  3580                           	opt stack 25
  3581                           
  3582                           ;incstack = 0
  3583                           ;traitementVent@x stored from wreg
  3584  000C5E  6E22               	movwf	traitementVent@x,c
  3585                           
  3586                           ;TX20.h: 62: unsigned long i;
  3587                           ;TX20.h: 63: char data;
  3588                           ;TX20.h: 64: for(i=y;i>x;i--)
  3589  000C60  501A               	movf	traitementVent@y,w,c
  3590  000C62  6E23               	movwf	traitementVent@i,c
  3591  000C64  6A24               	clrf	traitementVent@i+1,c
  3592  000C66  6A25               	clrf	traitementVent@i+2,c
  3593  000C68  6A26               	clrf	traitementVent@i+3,c
  3594  000C6A  D011               	goto	l3138
  3595  000C6C                     l3132:
  3596                           
  3597                           ;TX20.h: 65: {
  3598                           ;TX20.h: 66: data=data<<1;
  3599  000C6C  5027               	movf	traitementVent@data,w,c
  3600  000C6E  2427               	addwf	traitementVent@data,w,c
  3601  000C70  6E27               	movwf	traitementVent@data,c
  3602                           
  3603                           ;TX20.h: 67: data=data|tab[i];
  3604  000C72  5023               	movf	traitementVent@i,w,c
  3605  000C74  241B               	addwf	traitementVent@tab,w,c
  3606  000C76  6ED9               	movwf	fsr2l,c
  3607  000C78  5024               	movf	traitementVent@i+1,w,c
  3608  000C7A  201C               	addwfc	traitementVent@tab+1,w,c
  3609  000C7C  6EDA               	movwf	fsr2h,c
  3610  000C7E  50DF               	movf	indf2,w,c
  3611  000C80  1027               	iorwf	traitementVent@data,w,c
  3612  000C82  6E27               	movwf	traitementVent@data,c
  3613  000C84  0623               	decf	traitementVent@i,f,c
  3614  000C86  0E00               	movlw	0
  3615  000C88  5A24               	subwfb	traitementVent@i+1,f,c
  3616  000C8A  5A25               	subwfb	traitementVent@i+2,f,c
  3617  000C8C  5A26               	subwfb	traitementVent@i+3,f,c
  3618  000C8E                     l3138:
  3619  000C8E  C022  F01E         	movff	traitementVent@x,??_traitementVent
  3620  000C92  6A1F               	clrf	(??_traitementVent+1)& (0+255),c
  3621  000C94  6A20               	clrf	(??_traitementVent+2)& (0+255),c
  3622  000C96  6A21               	clrf	(??_traitementVent+3)& (0+255),c
  3623  000C98  5023               	movf	traitementVent@i,w,c
  3624  000C9A  5C1E               	subwf	??_traitementVent,w,c
  3625  000C9C  5024               	movf	traitementVent@i+1,w,c
  3626  000C9E  581F               	subwfb	??_traitementVent+1,w,c
  3627  000CA0  5025               	movf	traitementVent@i+2,w,c
  3628  000CA2  5820               	subwfb	??_traitementVent+2,w,c
  3629  000CA4  5026               	movf	traitementVent@i+3,w,c
  3630  000CA6  5821               	subwfb	??_traitementVent+3,w,c
  3631  000CA8  A0D8               	btfss	status,0,c
  3632  000CAA  D7E0               	goto	l3132
  3633                           
  3634                           ;TX20.h: 68: }
  3635                           ;TX20.h: 70: if(Inv==1)
  3636  000CAC  041D               	decf	traitementVent@Inv,w,c
  3637  000CAE  B4D8               	btfsc	status,2,c
  3638                           
  3639                           ;TX20.h: 71: data=~data;
  3640  000CB0  1E27               	comf	traitementVent@data,f,c
  3641                           
  3642                           ;TX20.h: 73: data=data&0x0F;
  3643  000CB2  5027               	movf	traitementVent@data,w,c
  3644  000CB4  0B0F               	andlw	15
  3645  000CB6  6E27               	movwf	traitementVent@data,c
  3646                           
  3647                           ;TX20.h: 74: return(data);
  3648  000CB8  5027               	movf	traitementVent@data,w,c
  3649  000CBA  0012               	return	
  3650  000CBC                     __end_of_traitementVent:
  3651                           	opt stack 0
  3652                           tblptru	equ	0xFF8
  3653                           intcon	equ	0xFF2
  3654                           postinc0	equ	0xFEE
  3655                           wreg	equ	0xFE8
  3656                           indf2	equ	0xFDF
  3657                           fsr2h	equ	0xFDA
  3658                           fsr2l	equ	0xFD9
  3659                           status	equ	0xFD8
  3660                           
  3661 ;; *************** function _AffichTemp *****************
  3662 ;; Defined at:
  3663 ;;		line 20 in file "Mode_Affich.h"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  curs            4    0[BANK0 ] unsigned long 
  3666 ;;  temp            1    4[BANK0 ] unsigned char 
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;  temp1           1   56[COMRAM] unsigned char 
  3669 ;; Return value:  Size  Location     Type
  3670 ;;		None               void
  3671 ;; Registers used:
  3672 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3678 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3679 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3681 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3682 ;;Total ram usage:        6 bytes
  3683 ;; Hardware stack levels used:    1
  3684 ;; Hardware stack levels required when called:    7
  3685 ;; This function calls:
  3686 ;;		_affmotdec
  3687 ;;		_afftext
  3688 ;;		_tempo_Xms
  3689 ;;		_valcaract
  3690 ;;		_valinstr
  3691 ;; This function is called by:
  3692 ;;		_main
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696                           	psect	text23
  3697  000B24                     __ptext23:
  3698                           	opt stack 0
  3699  000B24                     _AffichTemp:
  3700                           	opt stack 23
  3701                           
  3702                           ;Mode_Affich.h: 22: char temp1;
  3703                           ;Mode_Affich.h: 23: if(curs==1)
  3704                           
  3705                           ;incstack = 0
  3706  000B24  0100               	movlb	0	; () banked
  3707  000B26  0597               	decf	AffichTemp@curs& (0+255),w,b
  3708  000B28  1198               	iorwf	(AffichTemp@curs+1)& (0+255),w,b
  3709  000B2A  1199               	iorwf	(AffichTemp@curs+2)& (0+255),w,b
  3710  000B2C  119A               	iorwf	(AffichTemp@curs+3)& (0+255),w,b
  3711  000B2E  A4D8               	btfss	status,2,c
  3712  000B30  D016               	goto	l3386
  3713                           
  3714                           ; BSR set to: 0
  3715                           ;Mode_Affich.h: 24: {
  3716                           ;Mode_Affich.h: 25: valinstr(0x01);tempo_Xms(2);
  3717  000B32  0E01               	movlw	1
  3718  000B34  ECA7  F007         	call	_valinstr
  3719  000B38  0E02               	movlw	2
  3720  000B3A  6E1A               	movwf	tempo_Xms@time,c
  3721  000B3C  0E00               	movlw	0
  3722  000B3E  6E1B               	movwf	tempo_Xms@time+1,c
  3723  000B40  0E00               	movlw	0
  3724  000B42  6E1C               	movwf	tempo_Xms@time+2,c
  3725  000B44  0E00               	movlw	0
  3726  000B46  6E1D               	movwf	tempo_Xms@time+3,c
  3727  000B48  ECD8  F006         	call	_tempo_Xms	;wreg free
  3728                           
  3729                           ;Mode_Affich.h: 26: valinstr(0x02);
  3730  000B4C  0E02               	movlw	2
  3731  000B4E  ECA7  F007         	call	_valinstr
  3732                           
  3733                           ;Mode_Affich.h: 27: afftext("Temperature :");
  3734  000B52  0EFF               	movlw	high STR_1
  3735  000B54  6E1F               	movwf	afftext@ptext+1,c
  3736  000B56  0E69               	movlw	low STR_1
  3737  000B58  6E1E               	movwf	afftext@ptext,c
  3738  000B5A  EC8F  F007         	call	_afftext	;wreg free
  3739  000B5E                     l3386:
  3740                           
  3741                           ;Mode_Affich.h: 29: }
  3742                           ;Mode_Affich.h: 30: if ((temp!=temp1)||(curs==1))
  3743  000B5E  5039               	movf	AffichTemp@temp1,w,c
  3744  000B60  0100               	movlb	0	; () banked
  3745  000B62  639B               	cpfseq	AffichTemp@temp& (0+255),b
  3746  000B64  D007               	goto	l3390
  3747                           
  3748                           ; BSR set to: 0
  3749  000B66  0100               	movlb	0	; () banked
  3750  000B68  0597               	decf	AffichTemp@curs& (0+255),w,b
  3751  000B6A  1198               	iorwf	(AffichTemp@curs+1)& (0+255),w,b
  3752  000B6C  1199               	iorwf	(AffichTemp@curs+2)& (0+255),w,b
  3753  000B6E  119A               	iorwf	(AffichTemp@curs+3)& (0+255),w,b
  3754  000B70  A4D8               	btfss	status,2,c
  3755  000B72  D010               	goto	l3396
  3756  000B74                     l3390:
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;Mode_Affich.h: 31: {
  3760                           ;Mode_Affich.h: 32: valinstr(0xC0);
  3761  000B74  0EC0               	movlw	192
  3762  000B76  ECA7  F007         	call	_valinstr
  3763                           
  3764                           ;Mode_Affich.h: 33: affmotdec(temp,0);
  3765  000B7A  0100               	movlb	0	; () banked
  3766  000B7C  519B               	movf	AffichTemp@temp& (0+255),w,b
  3767  000B7E  6E27               	movwf	affmotdec@data,c
  3768  000B80  6A28               	clrf	affmotdec@data+1,c
  3769  000B82  6A29               	clrf	affmotdec@data+2,c
  3770  000B84  6A2A               	clrf	affmotdec@data+3,c
  3771  000B86  0E00               	movlw	0
  3772  000B88  6E2B               	movwf	affmotdec@coma,c
  3773  000B8A  EC5D  F000         	call	_affmotdec	;wreg free
  3774                           
  3775                           ;Mode_Affich.h: 34: valcaract(0xDF);
  3776  000B8E  0EDF               	movlw	223
  3777  000B90  ECBC  F007         	call	_valcaract
  3778  000B94                     l3396:
  3779                           
  3780                           ;Mode_Affich.h: 35: }
  3781                           ;Mode_Affich.h: 36: temp1=temp;
  3782  000B94  C09B  F039         	movff	AffichTemp@temp,AffichTemp@temp1
  3783  000B98  0012               	return	
  3784  000B9A                     __end_of_AffichTemp:
  3785                           	opt stack 0
  3786                           tblptru	equ	0xFF8
  3787                           intcon	equ	0xFF2
  3788                           postinc0	equ	0xFEE
  3789                           wreg	equ	0xFE8
  3790                           indf2	equ	0xFDF
  3791                           fsr2h	equ	0xFDA
  3792                           fsr2l	equ	0xFD9
  3793                           status	equ	0xFD8
  3794                           
  3795 ;; *************** function _valinstr *****************
  3796 ;; Defined at:
  3797 ;;		line 77 in file "Fonctions_Affich.h"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;  data            1    wreg     unsigned char 
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;  data            1   28[COMRAM] unsigned char 
  3802 ;; Return value:  Size  Location     Type
  3803 ;;		None               void
  3804 ;; Registers used:
  3805 ;;		wreg, status,2, cstack
  3806 ;; Tracked objects:
  3807 ;;		On entry : 0/0
  3808 ;;		On exit  : 0/0
  3809 ;;		Unchanged: 0/0
  3810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3812 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3814 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3815 ;;Total ram usage:        1 bytes
  3816 ;; Hardware stack levels used:    1
  3817 ;; Hardware stack levels required when called:    5
  3818 ;; This function calls:
  3819 ;;		_i2c_1trame
  3820 ;;		_tempo_1ms
  3821 ;; This function is called by:
  3822 ;;		_InitLCD
  3823 ;;		_AffichTemp
  3824 ;;		_Affich_V_Vent_kmh
  3825 ;;		_Affich_V_Vent_ms
  3826 ;;		_Affich_D_Vent
  3827 ;;		_MessageAccueil
  3828 ;;		_main
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832                           	psect	text24
  3833  000F4E                     __ptext24:
  3834                           	opt stack 0
  3835  000F4E                     _valinstr:
  3836                           	opt stack 25
  3837                           
  3838                           ;incstack = 0
  3839                           ;valinstr@data stored from wreg
  3840  000F4E  6E1D               	movwf	valinstr@data,c
  3841                           
  3842                           ;Fonctions_Affich.h: 79: LATC0=0;
  3843  000F50  908B               	bcf	3979,0,c	;volatile
  3844                           
  3845                           ;Fonctions_Affich.h: 80: LATC2=0;
  3846  000F52  948B               	bcf	3979,2,c	;volatile
  3847                           
  3848                           ;Fonctions_Affich.h: 81: __nop(); __nop(); __nop(); __nop();
  3849  000F54  F000               	nop	
  3850  000F56  F000               	nop	
  3851  000F58  F000               	nop	
  3852  000F5A  F000               	nop	
  3853                           
  3854                           ;Fonctions_Affich.h: 82: i2c_1trame(0x7C,data);
  3855  000F5C  C01D  F01B         	movff	valinstr@data,i2c_1trame@i2c_octet
  3856  000F60  0E7C               	movlw	124
  3857  000F62  EC16  F008         	call	_i2c_1trame
  3858                           
  3859                           ;Fonctions_Affich.h: 83: __nop(); __nop(); __nop(); __nop();
  3860  000F66  F000               	nop	
  3861  000F68  F000               	nop	
  3862  000F6A  F000               	nop	
  3863  000F6C  F000               	nop	
  3864                           
  3865                           ;Fonctions_Affich.h: 84: LATC0=1;
  3866  000F6E  808B               	bsf	3979,0,c	;volatile
  3867                           
  3868                           ;Fonctions_Affich.h: 85: tempo_1ms();
  3869  000F70  EC45  F008         	call	_tempo_1ms	;wreg free
  3870                           
  3871                           ;Fonctions_Affich.h: 86: LATC0=0;
  3872  000F74  908B               	bcf	3979,0,c	;volatile
  3873  000F76  0012               	return	
  3874  000F78                     __end_of_valinstr:
  3875                           	opt stack 0
  3876                           tblptru	equ	0xFF8
  3877                           intcon	equ	0xFF2
  3878                           postinc0	equ	0xFEE
  3879                           wreg	equ	0xFE8
  3880                           indf2	equ	0xFDF
  3881                           fsr2h	equ	0xFDA
  3882                           fsr2l	equ	0xFD9
  3883                           status	equ	0xFD8
  3884                           
  3885 ;; *************** function _tempo_Xms *****************
  3886 ;; Defined at:
  3887 ;;		line 178 in file "tst_mplabx.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;  time            4   25[COMRAM] long 
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;  i               2   34[COMRAM] int 
  3892 ;; Return value:  Size  Location     Type
  3893 ;;		None               void
  3894 ;; Registers used:
  3895 ;;		wreg, status,2, status,0, cstack
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3901 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3902 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3904 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;Total ram usage:       11 bytes
  3906 ;; Hardware stack levels used:    1
  3907 ;; Hardware stack levels required when called:    4
  3908 ;; This function calls:
  3909 ;;		_tempo_1ms
  3910 ;; This function is called by:
  3911 ;;		_InitLCD
  3912 ;;		_AffichTemp
  3913 ;;		_Affich_V_Vent_kmh
  3914 ;;		_Affich_V_Vent_ms
  3915 ;;		_Affich_D_Vent
  3916 ;;		_MessageAccueil
  3917 ;;		_main
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text25
  3922  000DB0                     __ptext25:
  3923                           	opt stack 0
  3924  000DB0                     _tempo_Xms:
  3925                           	opt stack 26
  3926                           
  3927                           ;tst_mplabx.c: 180: int i;
  3928                           ;tst_mplabx.c: 181: for(i=0;i<time;i++){
  3929                           
  3930                           ;incstack = 0
  3931  000DB0  0E00               	movlw	0
  3932  000DB2  6E24               	movwf	tempo_Xms@i+1,c
  3933  000DB4  0E00               	movlw	0
  3934  000DB6  6E23               	movwf	tempo_Xms@i,c
  3935  000DB8  D004               	goto	l3116
  3936  000DBA                     l3112:
  3937                           
  3938                           ;tst_mplabx.c: 182: tempo_1ms();
  3939  000DBA  EC45  F008         	call	_tempo_1ms	;wreg free
  3940  000DBE  4A23               	infsnz	tempo_Xms@i,f,c
  3941  000DC0  2A24               	incf	tempo_Xms@i+1,f,c
  3942  000DC2                     l3116:
  3943  000DC2  C023  F01E         	movff	tempo_Xms@i,??_tempo_Xms
  3944  000DC6  C024  F01F         	movff	tempo_Xms@i+1,??_tempo_Xms+1
  3945  000DCA  0E00               	movlw	0
  3946  000DCC  BE1F               	btfsc	(??_tempo_Xms+1)& (0+255),7,c
  3947  000DCE  0EFF               	movlw	255
  3948  000DD0  6E20               	movwf	(??_tempo_Xms+2)& (0+255),c
  3949  000DD2  6E21               	movwf	(??_tempo_Xms+3)& (0+255),c
  3950  000DD4  5021               	movf	??_tempo_Xms+3,w,c
  3951  000DD6  0A80               	xorlw	128
  3952  000DD8  6E22               	movwf	(??_tempo_Xms+4)& (0+255),c
  3953  000DDA  501A               	movf	tempo_Xms@time,w,c
  3954  000DDC  5C1E               	subwf	??_tempo_Xms,w,c
  3955  000DDE  501B               	movf	tempo_Xms@time+1,w,c
  3956  000DE0  581F               	subwfb	??_tempo_Xms+1,w,c
  3957  000DE2  501C               	movf	tempo_Xms@time+2,w,c
  3958  000DE4  5820               	subwfb	??_tempo_Xms+2,w,c
  3959  000DE6  501D               	movf	tempo_Xms@time+3,w,c
  3960  000DE8  0A80               	xorlw	128
  3961  000DEA  5822               	subwfb	(??_tempo_Xms+4)& (0+255),w,c
  3962  000DEC  B0D8               	btfsc	status,0,c
  3963  000DEE  0012               	return	
  3964  000DF0  D7E4               	goto	l3112
  3965  000DF2                     __end_of_tempo_Xms:
  3966                           	opt stack 0
  3967                           tblptru	equ	0xFF8
  3968                           intcon	equ	0xFF2
  3969                           postinc0	equ	0xFEE
  3970                           wreg	equ	0xFE8
  3971                           indf2	equ	0xFDF
  3972                           fsr2h	equ	0xFDA
  3973                           fsr2l	equ	0xFD9
  3974                           status	equ	0xFD8
  3975                           
  3976 ;; *************** function _afftext *****************
  3977 ;; Defined at:
  3978 ;;		line 139 in file "Fonctions_Affich.h"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;  ptext           2   29[COMRAM] PTR const unsigned char 
  3981 ;;		 -> STR_31(13), STR_30(20), STR_29(14), STR_28(8), 
  3982 ;;		 -> STR_27(9), STR_26(6), STR_25(16), STR_24(11), 
  3983 ;;		 -> STR_23(17), STR_22(6), STR_21(16), STR_20(10), 
  3984 ;;		 -> STR_19(14), STR_18(4), STR_17(12), STR_16(8), 
  3985 ;;		 -> STR_15(12), STR_14(4), STR_13(13), STR_12(9), 
  3986 ;;		 -> STR_11(14), STR_10(5), STR_9(40), STR_8(17), 
  3987 ;;		 -> STR_7(5), STR_6(40), STR_5(18), STR_4(6), 
  3988 ;;		 -> STR_3(40), STR_2(18), STR_1(14), 
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;		None
  3991 ;; Return value:  Size  Location     Type
  3992 ;;		None               void
  3993 ;; Registers used:
  3994 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3995 ;; Tracked objects:
  3996 ;;		On entry : 0/0
  3997 ;;		On exit  : 0/0
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4000 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4003 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4004 ;;Total ram usage:        2 bytes
  4005 ;; Hardware stack levels used:    1
  4006 ;; Hardware stack levels required when called:    6
  4007 ;; This function calls:
  4008 ;;		_valcaract
  4009 ;; This function is called by:
  4010 ;;		_AffichTemp
  4011 ;;		_Affich_V_Vent_kmh
  4012 ;;		_Affich_V_Vent_ms
  4013 ;;		_Affich_D_Vent
  4014 ;;		_MessageAccueil
  4015 ;;		_main
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           	psect	text26
  4020  000F1E                     __ptext26:
  4021                           	opt stack 0
  4022  000F1E                     _afftext:
  4023                           	opt stack 24
  4024  000F1E                     l194:
  4025                           
  4026                           ;Fonctions_Affich.h: 144: {
  4027                           ;Fonctions_Affich.h: 145: valcaract(*ptext);
  4028  000F1E  C01E  FFF6         	movff	afftext@ptext,tblptrl
  4029  000F22  C01F  FFF7         	movff	afftext@ptext+1,tblptrh
  4030  000F26                     	if	0	;tblptru may be non-zero
  4031  000F26                     	endif
  4032  000F26                     	if	0	;tblptru may be non-zero
  4033  000F26                     	endif
  4034  000F26  0008               	tblrd		*
  4035  000F28  50F5               	movf	tablat,w,c
  4036  000F2A  ECBC  F007         	call	_valcaract
  4037                           
  4038                           ;Fonctions_Affich.h: 146: ptext=ptext+1;
  4039  000F2E  0E01               	movlw	1
  4040  000F30  241E               	addwf	afftext@ptext,w,c
  4041  000F32  6E1E               	movwf	afftext@ptext,c
  4042  000F34  0E00               	movlw	0
  4043  000F36  201F               	addwfc	afftext@ptext+1,w,c
  4044  000F38  6E1F               	movwf	afftext@ptext+1,c
  4045                           
  4046                           ;Fonctions_Affich.h: 148: }while (*ptext!=0);
  4047  000F3A  C01E  FFF6         	movff	afftext@ptext,tblptrl
  4048  000F3E  C01F  FFF7         	movff	afftext@ptext+1,tblptrh
  4049  000F42                     	if	0	;tblptru may be non-zero
  4050  000F42                     	endif
  4051  000F42                     	if	0	;tblptru may be non-zero
  4052  000F42                     	endif
  4053  000F42  0008               	tblrd		*
  4054  000F44  50F5               	movf	tablat,w,c
  4055  000F46  0900               	iorlw	0
  4056  000F48  B4D8               	btfsc	status,2,c
  4057  000F4A  0012               	return	
  4058  000F4C  D7E8               	goto	l194
  4059  000F4E                     __end_of_afftext:
  4060                           	opt stack 0
  4061                           tblptru	equ	0xFF8
  4062                           tblptrh	equ	0xFF7
  4063                           tblptrl	equ	0xFF6
  4064                           tablat	equ	0xFF5
  4065                           intcon	equ	0xFF2
  4066                           postinc0	equ	0xFEE
  4067                           wreg	equ	0xFE8
  4068                           indf2	equ	0xFDF
  4069                           fsr2h	equ	0xFDA
  4070                           fsr2l	equ	0xFD9
  4071                           status	equ	0xFD8
  4072                           
  4073 ;; *************** function _affmotdec *****************
  4074 ;; Defined at:
  4075 ;;		line 214 in file "Fonctions_Affich.h"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;  data            4   38[COMRAM] unsigned long 
  4078 ;;  coma            1   42[COMRAM] unsigned char 
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;  temp            4   52[COMRAM] unsigned long 
  4081 ;;  dixmille        1   51[COMRAM] unsigned char 
  4082 ;;  mille           1   50[COMRAM] unsigned char 
  4083 ;;  cent            1   49[COMRAM] unsigned char 
  4084 ;;  diz             1   48[COMRAM] unsigned char 
  4085 ;;  unit            1   47[COMRAM] unsigned char 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;		None               void
  4088 ;; Registers used:
  4089 ;;		wreg, status,2, status,0, cstack
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4095 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4096 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4097 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4098 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4099 ;;Total ram usage:       18 bytes
  4100 ;; Hardware stack levels used:    1
  4101 ;; Hardware stack levels required when called:    6
  4102 ;; This function calls:
  4103 ;;		___lldiv
  4104 ;;		___llmod
  4105 ;;		_valcaract
  4106 ;; This function is called by:
  4107 ;;		_AffichTemp
  4108 ;;		_Affich_V_Vent_kmh
  4109 ;;		_Affich_V_Vent_ms
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           	psect	text27
  4114  0000BA                     __ptext27:
  4115                           	opt stack 0
  4116  0000BA                     _affmotdec:
  4117                           	opt stack 23
  4118                           
  4119                           ;Fonctions_Affich.h: 216: char dixmille, mille, cent, diz, unit;
  4120                           ;Fonctions_Affich.h: 217: unsigned long temp;
  4121                           ;Fonctions_Affich.h: 218: dixmille=data/10000;
  4122                           
  4123                           ;incstack = 0
  4124  0000BA  C027  F01A         	movff	affmotdec@data,___lldiv@dividend
  4125  0000BE  C028  F01B         	movff	affmotdec@data+1,___lldiv@dividend+1
  4126  0000C2  C029  F01C         	movff	affmotdec@data+2,___lldiv@dividend+2
  4127  0000C6  C02A  F01D         	movff	affmotdec@data+3,___lldiv@dividend+3
  4128  0000CA  0E10               	movlw	16
  4129  0000CC  6E1E               	movwf	___lldiv@divisor,c
  4130  0000CE  0E27               	movlw	39
  4131  0000D0  6E1F               	movwf	___lldiv@divisor+1,c
  4132  0000D2  0E00               	movlw	0
  4133  0000D4  6E20               	movwf	___lldiv@divisor+2,c
  4134  0000D6  0E00               	movlw	0
  4135  0000D8  6E21               	movwf	___lldiv@divisor+3,c
  4136  0000DA  EC51  F005         	call	___lldiv	;wreg free
  4137  0000DE  C01A  F02C         	movff	?___lldiv,??_affmotdec
  4138  0000E2  C01B  F02D         	movff	?___lldiv+1,??_affmotdec+1
  4139  0000E6  C01C  F02E         	movff	?___lldiv+2,??_affmotdec+2
  4140  0000EA  C01D  F02F         	movff	?___lldiv+3,??_affmotdec+3
  4141  0000EE  502C               	movf	??_affmotdec,w,c
  4142  0000F0  6E34               	movwf	affmotdec@dixmille,c
  4143                           
  4144                           ;Fonctions_Affich.h: 219: temp=data%10000;
  4145  0000F2  C027  F01A         	movff	affmotdec@data,___llmod@dividend
  4146  0000F6  C028  F01B         	movff	affmotdec@data+1,___llmod@dividend+1
  4147  0000FA  C029  F01C         	movff	affmotdec@data+2,___llmod@dividend+2
  4148  0000FE  C02A  F01D         	movff	affmotdec@data+3,___llmod@dividend+3
  4149  000102  0E10               	movlw	16
  4150  000104  6E1E               	movwf	___llmod@divisor,c
  4151  000106  0E27               	movlw	39
  4152  000108  6E1F               	movwf	___llmod@divisor+1,c
  4153  00010A  0E00               	movlw	0
  4154  00010C  6E20               	movwf	___llmod@divisor+2,c
  4155  00010E  0E00               	movlw	0
  4156  000110  6E21               	movwf	___llmod@divisor+3,c
  4157  000112  ECCD  F005         	call	___llmod	;wreg free
  4158  000116  C01A  F035         	movff	?___llmod,affmotdec@temp
  4159  00011A  C01B  F036         	movff	?___llmod+1,affmotdec@temp+1
  4160  00011E  C01C  F037         	movff	?___llmod+2,affmotdec@temp+2
  4161  000122  C01D  F038         	movff	?___llmod+3,affmotdec@temp+3
  4162                           
  4163                           ;Fonctions_Affich.h: 220: mille=temp/1000;
  4164  000126  C035  F01A         	movff	affmotdec@temp,___lldiv@dividend
  4165  00012A  C036  F01B         	movff	affmotdec@temp+1,___lldiv@dividend+1
  4166  00012E  C037  F01C         	movff	affmotdec@temp+2,___lldiv@dividend+2
  4167  000132  C038  F01D         	movff	affmotdec@temp+3,___lldiv@dividend+3
  4168  000136  0EE8               	movlw	232
  4169  000138  6E1E               	movwf	___lldiv@divisor,c
  4170  00013A  0E03               	movlw	3
  4171  00013C  6E1F               	movwf	___lldiv@divisor+1,c
  4172  00013E  0E00               	movlw	0
  4173  000140  6E20               	movwf	___lldiv@divisor+2,c
  4174  000142  0E00               	movlw	0
  4175  000144  6E21               	movwf	___lldiv@divisor+3,c
  4176  000146  EC51  F005         	call	___lldiv	;wreg free
  4177  00014A  C01A  F02C         	movff	?___lldiv,??_affmotdec
  4178  00014E  C01B  F02D         	movff	?___lldiv+1,??_affmotdec+1
  4179  000152  C01C  F02E         	movff	?___lldiv+2,??_affmotdec+2
  4180  000156  C01D  F02F         	movff	?___lldiv+3,??_affmotdec+3
  4181  00015A  502C               	movf	??_affmotdec,w,c
  4182  00015C  6E33               	movwf	affmotdec@mille,c
  4183                           
  4184                           ;Fonctions_Affich.h: 221: temp=temp%1000;
  4185  00015E  C035  F01A         	movff	affmotdec@temp,___llmod@dividend
  4186  000162  C036  F01B         	movff	affmotdec@temp+1,___llmod@dividend+1
  4187  000166  C037  F01C         	movff	affmotdec@temp+2,___llmod@dividend+2
  4188  00016A  C038  F01D         	movff	affmotdec@temp+3,___llmod@dividend+3
  4189  00016E  0EE8               	movlw	232
  4190  000170  6E1E               	movwf	___llmod@divisor,c
  4191  000172  0E03               	movlw	3
  4192  000174  6E1F               	movwf	___llmod@divisor+1,c
  4193  000176  0E00               	movlw	0
  4194  000178  6E20               	movwf	___llmod@divisor+2,c
  4195  00017A  0E00               	movlw	0
  4196  00017C  6E21               	movwf	___llmod@divisor+3,c
  4197  00017E  ECCD  F005         	call	___llmod	;wreg free
  4198  000182  C01A  F035         	movff	?___llmod,affmotdec@temp
  4199  000186  C01B  F036         	movff	?___llmod+1,affmotdec@temp+1
  4200  00018A  C01C  F037         	movff	?___llmod+2,affmotdec@temp+2
  4201  00018E  C01D  F038         	movff	?___llmod+3,affmotdec@temp+3
  4202                           
  4203                           ;Fonctions_Affich.h: 222: cent=temp/100;
  4204  000192  C035  F01A         	movff	affmotdec@temp,___lldiv@dividend
  4205  000196  C036  F01B         	movff	affmotdec@temp+1,___lldiv@dividend+1
  4206  00019A  C037  F01C         	movff	affmotdec@temp+2,___lldiv@dividend+2
  4207  00019E  C038  F01D         	movff	affmotdec@temp+3,___lldiv@dividend+3
  4208  0001A2  0E64               	movlw	100
  4209  0001A4  6E1E               	movwf	___lldiv@divisor,c
  4210  0001A6  0E00               	movlw	0
  4211  0001A8  6E1F               	movwf	___lldiv@divisor+1,c
  4212  0001AA  0E00               	movlw	0
  4213  0001AC  6E20               	movwf	___lldiv@divisor+2,c
  4214  0001AE  0E00               	movlw	0
  4215  0001B0  6E21               	movwf	___lldiv@divisor+3,c
  4216  0001B2  EC51  F005         	call	___lldiv	;wreg free
  4217  0001B6  C01A  F02C         	movff	?___lldiv,??_affmotdec
  4218  0001BA  C01B  F02D         	movff	?___lldiv+1,??_affmotdec+1
  4219  0001BE  C01C  F02E         	movff	?___lldiv+2,??_affmotdec+2
  4220  0001C2  C01D  F02F         	movff	?___lldiv+3,??_affmotdec+3
  4221  0001C6  502C               	movf	??_affmotdec,w,c
  4222  0001C8  6E32               	movwf	affmotdec@cent,c
  4223                           
  4224                           ;Fonctions_Affich.h: 223: temp=temp%100;
  4225  0001CA  C035  F01A         	movff	affmotdec@temp,___llmod@dividend
  4226  0001CE  C036  F01B         	movff	affmotdec@temp+1,___llmod@dividend+1
  4227  0001D2  C037  F01C         	movff	affmotdec@temp+2,___llmod@dividend+2
  4228  0001D6  C038  F01D         	movff	affmotdec@temp+3,___llmod@dividend+3
  4229  0001DA  0E64               	movlw	100
  4230  0001DC  6E1E               	movwf	___llmod@divisor,c
  4231  0001DE  0E00               	movlw	0
  4232  0001E0  6E1F               	movwf	___llmod@divisor+1,c
  4233  0001E2  0E00               	movlw	0
  4234  0001E4  6E20               	movwf	___llmod@divisor+2,c
  4235  0001E6  0E00               	movlw	0
  4236  0001E8  6E21               	movwf	___llmod@divisor+3,c
  4237  0001EA  ECCD  F005         	call	___llmod	;wreg free
  4238  0001EE  C01A  F035         	movff	?___llmod,affmotdec@temp
  4239  0001F2  C01B  F036         	movff	?___llmod+1,affmotdec@temp+1
  4240  0001F6  C01C  F037         	movff	?___llmod+2,affmotdec@temp+2
  4241  0001FA  C01D  F038         	movff	?___llmod+3,affmotdec@temp+3
  4242                           
  4243                           ;Fonctions_Affich.h: 224: diz=temp/10;
  4244  0001FE  C035  F01A         	movff	affmotdec@temp,___lldiv@dividend
  4245  000202  C036  F01B         	movff	affmotdec@temp+1,___lldiv@dividend+1
  4246  000206  C037  F01C         	movff	affmotdec@temp+2,___lldiv@dividend+2
  4247  00020A  C038  F01D         	movff	affmotdec@temp+3,___lldiv@dividend+3
  4248  00020E  0E0A               	movlw	10
  4249  000210  6E1E               	movwf	___lldiv@divisor,c
  4250  000212  0E00               	movlw	0
  4251  000214  6E1F               	movwf	___lldiv@divisor+1,c
  4252  000216  0E00               	movlw	0
  4253  000218  6E20               	movwf	___lldiv@divisor+2,c
  4254  00021A  0E00               	movlw	0
  4255  00021C  6E21               	movwf	___lldiv@divisor+3,c
  4256  00021E  EC51  F005         	call	___lldiv	;wreg free
  4257  000222  C01A  F02C         	movff	?___lldiv,??_affmotdec
  4258  000226  C01B  F02D         	movff	?___lldiv+1,??_affmotdec+1
  4259  00022A  C01C  F02E         	movff	?___lldiv+2,??_affmotdec+2
  4260  00022E  C01D  F02F         	movff	?___lldiv+3,??_affmotdec+3
  4261  000232  502C               	movf	??_affmotdec,w,c
  4262  000234  6E31               	movwf	affmotdec@diz,c
  4263                           
  4264                           ;Fonctions_Affich.h: 225: unit=temp%10;
  4265  000236  C035  F01A         	movff	affmotdec@temp,___llmod@dividend
  4266  00023A  C036  F01B         	movff	affmotdec@temp+1,___llmod@dividend+1
  4267  00023E  C037  F01C         	movff	affmotdec@temp+2,___llmod@dividend+2
  4268  000242  C038  F01D         	movff	affmotdec@temp+3,___llmod@dividend+3
  4269  000246  0E0A               	movlw	10
  4270  000248  6E1E               	movwf	___llmod@divisor,c
  4271  00024A  0E00               	movlw	0
  4272  00024C  6E1F               	movwf	___llmod@divisor+1,c
  4273  00024E  0E00               	movlw	0
  4274  000250  6E20               	movwf	___llmod@divisor+2,c
  4275  000252  0E00               	movlw	0
  4276  000254  6E21               	movwf	___llmod@divisor+3,c
  4277  000256  ECCD  F005         	call	___llmod	;wreg free
  4278  00025A  C01A  F02C         	movff	?___llmod,??_affmotdec
  4279  00025E  C01B  F02D         	movff	?___llmod+1,??_affmotdec+1
  4280  000262  C01C  F02E         	movff	?___llmod+2,??_affmotdec+2
  4281  000266  C01D  F02F         	movff	?___llmod+3,??_affmotdec+3
  4282  00026A  502C               	movf	??_affmotdec,w,c
  4283  00026C  6E30               	movwf	affmotdec@unit,c
  4284                           
  4285                           ;Fonctions_Affich.h: 226: if (dixmille!=0)
  4286  00026E  5034               	movf	affmotdec@dixmille,w,c
  4287  000270  B4D8               	btfsc	status,2,c
  4288  000272  D004               	goto	l3222
  4289                           
  4290                           ;Fonctions_Affich.h: 227: valcaract(48+dixmille);
  4291  000274  5034               	movf	affmotdec@dixmille,w,c
  4292  000276  0F30               	addlw	48
  4293  000278  ECBC  F007         	call	_valcaract
  4294  00027C                     l3222:
  4295                           
  4296                           ;Fonctions_Affich.h: 228: if ((mille!=0) || (dixmille!=0))
  4297  00027C  6633               	tstfsz	affmotdec@mille,c
  4298  00027E  D003               	goto	l3226
  4299  000280  5034               	movf	affmotdec@dixmille,w,c
  4300  000282  B4D8               	btfsc	status,2,c
  4301  000284  D004               	goto	l3228
  4302  000286                     l3226:
  4303                           
  4304                           ;Fonctions_Affich.h: 229: valcaract(48+mille);
  4305  000286  5033               	movf	affmotdec@mille,w,c
  4306  000288  0F30               	addlw	48
  4307  00028A  ECBC  F007         	call	_valcaract
  4308  00028E                     l3228:
  4309                           
  4310                           ;Fonctions_Affich.h: 230: if ((coma==3)&&(data!=0))
  4311  00028E  502B               	movf	affmotdec@coma,w,c
  4312  000290  0A03               	xorlw	3
  4313  000292  A4D8               	btfss	status,2,c
  4314  000294  D009               	goto	l3234
  4315  000296  502A               	movf	affmotdec@data+3,w,c
  4316  000298  1027               	iorwf	affmotdec@data,w,c
  4317  00029A  1028               	iorwf	affmotdec@data+1,w,c
  4318  00029C  1029               	iorwf	affmotdec@data+2,w,c
  4319  00029E  B4D8               	btfsc	status,2,c
  4320  0002A0  D003               	goto	l3234
  4321                           
  4322                           ;Fonctions_Affich.h: 231: valcaract(',');
  4323  0002A2  0E2C               	movlw	44
  4324  0002A4  ECBC  F007         	call	_valcaract
  4325  0002A8                     l3234:
  4326                           
  4327                           ;Fonctions_Affich.h: 232: if ((cent!=0) || (mille!=0) || (dixmille!=0))
  4328  0002A8  6632               	tstfsz	affmotdec@cent,c
  4329  0002AA  D005               	goto	l3240
  4330  0002AC  6633               	tstfsz	affmotdec@mille,c
  4331  0002AE  D003               	goto	l3240
  4332  0002B0  5034               	movf	affmotdec@dixmille,w,c
  4333  0002B2  B4D8               	btfsc	status,2,c
  4334  0002B4  D004               	goto	l3242
  4335  0002B6                     l3240:
  4336                           
  4337                           ;Fonctions_Affich.h: 233: valcaract(48+cent);
  4338  0002B6  5032               	movf	affmotdec@cent,w,c
  4339  0002B8  0F30               	addlw	48
  4340  0002BA  ECBC  F007         	call	_valcaract
  4341  0002BE                     l3242:
  4342                           
  4343                           ;Fonctions_Affich.h: 234: if ((coma==2)&&(data!=0))
  4344  0002BE  502B               	movf	affmotdec@coma,w,c
  4345  0002C0  0A02               	xorlw	2
  4346  0002C2  A4D8               	btfss	status,2,c
  4347  0002C4  D009               	goto	l3248
  4348  0002C6  502A               	movf	affmotdec@data+3,w,c
  4349  0002C8  1027               	iorwf	affmotdec@data,w,c
  4350  0002CA  1028               	iorwf	affmotdec@data+1,w,c
  4351  0002CC  1029               	iorwf	affmotdec@data+2,w,c
  4352  0002CE  B4D8               	btfsc	status,2,c
  4353  0002D0  D003               	goto	l3248
  4354                           
  4355                           ;Fonctions_Affich.h: 235: valcaract(',');
  4356  0002D2  0E2C               	movlw	44
  4357  0002D4  ECBC  F007         	call	_valcaract
  4358  0002D8                     l3248:
  4359                           
  4360                           ;Fonctions_Affich.h: 236: if ((diz!=0) || (cent!=0) || (mille!=0) || (dixmille!=0))
  4361  0002D8  6631               	tstfsz	affmotdec@diz,c
  4362  0002DA  D007               	goto	l3256
  4363  0002DC  6632               	tstfsz	affmotdec@cent,c
  4364  0002DE  D005               	goto	l3256
  4365  0002E0  6633               	tstfsz	affmotdec@mille,c
  4366  0002E2  D003               	goto	l3256
  4367  0002E4  5034               	movf	affmotdec@dixmille,w,c
  4368  0002E6  B4D8               	btfsc	status,2,c
  4369  0002E8  D004               	goto	l3258
  4370  0002EA                     l3256:
  4371                           
  4372                           ;Fonctions_Affich.h: 237: valcaract(48+diz);
  4373  0002EA  5031               	movf	affmotdec@diz,w,c
  4374  0002EC  0F30               	addlw	48
  4375  0002EE  ECBC  F007         	call	_valcaract
  4376  0002F2                     l3258:
  4377                           
  4378                           ;Fonctions_Affich.h: 238: if ((coma==1)&&(data!=0))
  4379  0002F2  042B               	decf	affmotdec@coma,w,c
  4380  0002F4  A4D8               	btfss	status,2,c
  4381  0002F6  D009               	goto	l3264
  4382  0002F8  502A               	movf	affmotdec@data+3,w,c
  4383  0002FA  1027               	iorwf	affmotdec@data,w,c
  4384  0002FC  1028               	iorwf	affmotdec@data+1,w,c
  4385  0002FE  1029               	iorwf	affmotdec@data+2,w,c
  4386  000300  B4D8               	btfsc	status,2,c
  4387  000302  D003               	goto	l3264
  4388                           
  4389                           ;Fonctions_Affich.h: 239: valcaract(',');
  4390  000304  0E2C               	movlw	44
  4391  000306  ECBC  F007         	call	_valcaract
  4392  00030A                     l3264:
  4393                           
  4394                           ;Fonctions_Affich.h: 240: valcaract(48+unit);
  4395  00030A  5030               	movf	affmotdec@unit,w,c
  4396  00030C  0F30               	addlw	48
  4397  00030E  ECBC  F007         	call	_valcaract
  4398  000312  0012               	return	
  4399  000314                     __end_of_affmotdec:
  4400                           	opt stack 0
  4401                           tblptru	equ	0xFF8
  4402                           tblptrh	equ	0xFF7
  4403                           tblptrl	equ	0xFF6
  4404                           tablat	equ	0xFF5
  4405                           intcon	equ	0xFF2
  4406                           postinc0	equ	0xFEE
  4407                           wreg	equ	0xFE8
  4408                           indf2	equ	0xFDF
  4409                           fsr2h	equ	0xFDA
  4410                           fsr2l	equ	0xFD9
  4411                           status	equ	0xFD8
  4412                           
  4413 ;; *************** function _valcaract *****************
  4414 ;; Defined at:
  4415 ;;		line 91 in file "Fonctions_Affich.h"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  data            1    wreg     unsigned char 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  data            1   28[COMRAM] unsigned char 
  4420 ;; Return value:  Size  Location     Type
  4421 ;;		None               void
  4422 ;; Registers used:
  4423 ;;		wreg, status,2, cstack
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4432 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4433 ;;Total ram usage:        1 bytes
  4434 ;; Hardware stack levels used:    1
  4435 ;; Hardware stack levels required when called:    5
  4436 ;; This function calls:
  4437 ;;		_i2c_1trame
  4438 ;;		_tempo_1ms
  4439 ;; This function is called by:
  4440 ;;		_afftext
  4441 ;;		_affmotdec
  4442 ;;		_AffichTemp
  4443 ;;		_afftab
  4444 ;;		_affoctetdec
  4445 ;;		_affoctetbin
  4446 ;;		_affoctethexa
  4447 ;;		_affmotdecsign
  4448 ;;		_affmotbin
  4449 ;;		_affmothexa
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           	psect	text28
  4454  000F78                     __ptext28:
  4455                           	opt stack 0
  4456  000F78                     _valcaract:
  4457                           	opt stack 24
  4458                           
  4459                           ;incstack = 0
  4460                           ;valcaract@data stored from wreg
  4461  000F78  6E1D               	movwf	valcaract@data,c
  4462                           
  4463                           ;Fonctions_Affich.h: 93: LATC0=1;
  4464  000F7A  808B               	bsf	3979,0,c	;volatile
  4465                           
  4466                           ;Fonctions_Affich.h: 94: LATC2=1;
  4467  000F7C  848B               	bsf	3979,2,c	;volatile
  4468                           
  4469                           ;Fonctions_Affich.h: 95: __nop(); __nop(); __nop(); __nop();
  4470  000F7E  F000               	nop	
  4471  000F80  F000               	nop	
  4472  000F82  F000               	nop	
  4473  000F84  F000               	nop	
  4474                           
  4475                           ;Fonctions_Affich.h: 96: i2c_1trame(0x7C,data);
  4476  000F86  C01D  F01B         	movff	valcaract@data,i2c_1trame@i2c_octet
  4477  000F8A  0E7C               	movlw	124
  4478  000F8C  EC16  F008         	call	_i2c_1trame
  4479                           
  4480                           ;Fonctions_Affich.h: 97: __nop(); __nop(); __nop(); __nop();
  4481  000F90  F000               	nop	
  4482  000F92  F000               	nop	
  4483  000F94  F000               	nop	
  4484  000F96  F000               	nop	
  4485                           
  4486                           ;Fonctions_Affich.h: 98: LATC0=1;
  4487  000F98  808B               	bsf	3979,0,c	;volatile
  4488                           
  4489                           ;Fonctions_Affich.h: 99: tempo_1ms();
  4490  000F9A  EC45  F008         	call	_tempo_1ms	;wreg free
  4491                           
  4492                           ;Fonctions_Affich.h: 100: LATC0=0;
  4493  000F9E  908B               	bcf	3979,0,c	;volatile
  4494  000FA0  0012               	return	
  4495  000FA2                     __end_of_valcaract:
  4496                           	opt stack 0
  4497                           tblptru	equ	0xFF8
  4498                           tblptrh	equ	0xFF7
  4499                           tblptrl	equ	0xFF6
  4500                           tablat	equ	0xFF5
  4501                           intcon	equ	0xFF2
  4502                           postinc0	equ	0xFEE
  4503                           wreg	equ	0xFE8
  4504                           indf2	equ	0xFDF
  4505                           fsr2h	equ	0xFDA
  4506                           fsr2l	equ	0xFD9
  4507                           status	equ	0xFD8
  4508                           
  4509 ;; *************** function _tempo_1ms *****************
  4510 ;; Defined at:
  4511 ;;		line 185 in file "tst_mplabx.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;		None
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;		None
  4516 ;; Return value:  Size  Location     Type
  4517 ;;		None               void
  4518 ;; Registers used:
  4519 ;;		wreg, status,2
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4529 ;;Total ram usage:        0 bytes
  4530 ;; Hardware stack levels used:    1
  4531 ;; Hardware stack levels required when called:    3
  4532 ;; This function calls:
  4533 ;;		Nothing
  4534 ;; This function is called by:
  4535 ;;		_valinstr
  4536 ;;		_valcaract
  4537 ;;		_tempo_Xms
  4538 ;;		_tempo_1ms200us
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541                           
  4542                           	psect	text29
  4543  00108A                     __ptext29:
  4544                           	opt stack 0
  4545  00108A                     _tempo_1ms:
  4546                           	opt stack 26
  4547                           
  4548                           ;tst_mplabx.c: 188: TMR0IF=0;
  4549                           
  4550                           ;incstack = 0
  4551  00108A  94F2               	bcf	intcon,2,c	;volatile
  4552                           
  4553                           ;tst_mplabx.c: 189: TMR0L=131;
  4554  00108C  0E83               	movlw	131
  4555  00108E  6ED6               	movwf	4054,c	;volatile
  4556  001090                     l559:
  4557  001090  B4F2               	btfsc	intcon,2,c	;volatile
  4558  001092  0012               	return	
  4559  001094  D7FD               	goto	l559
  4560  001096                     __end_of_tempo_1ms:
  4561                           	opt stack 0
  4562                           tblptru	equ	0xFF8
  4563                           tblptrh	equ	0xFF7
  4564                           tblptrl	equ	0xFF6
  4565                           tablat	equ	0xFF5
  4566                           intcon	equ	0xFF2
  4567                           postinc0	equ	0xFEE
  4568                           wreg	equ	0xFE8
  4569                           indf2	equ	0xFDF
  4570                           fsr2h	equ	0xFDA
  4571                           fsr2l	equ	0xFD9
  4572                           status	equ	0xFD8
  4573                           
  4574 ;; *************** function _i2c_1trame *****************
  4575 ;; Defined at:
  4576 ;;		line 28 in file "I2C.h"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;  i2c_add         1    wreg     unsigned char 
  4579 ;;  i2c_octet       1   26[COMRAM] unsigned char 
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;  i2c_add         1   27[COMRAM] unsigned char 
  4582 ;; Return value:  Size  Location     Type
  4583 ;;		None               void
  4584 ;; Registers used:
  4585 ;;		wreg, status,2, cstack
  4586 ;; Tracked objects:
  4587 ;;		On entry : 0/0
  4588 ;;		On exit  : 0/0
  4589 ;;		Unchanged: 0/0
  4590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4591 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4594 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4595 ;;Total ram usage:        2 bytes
  4596 ;; Hardware stack levels used:    1
  4597 ;; Hardware stack levels required when called:    4
  4598 ;; This function calls:
  4599 ;;		_i2c_ecrire
  4600 ;;		_i2c_start
  4601 ;;		_i2c_stop
  4602 ;; This function is called by:
  4603 ;;		_valinstr
  4604 ;;		_valcaract
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           	psect	text30
  4609  00102C                     __ptext30:
  4610                           	opt stack 0
  4611  00102C                     _i2c_1trame:
  4612                           	opt stack 25
  4613                           
  4614                           ;incstack = 0
  4615                           ;i2c_1trame@i2c_add stored from wreg
  4616  00102C  6E1C               	movwf	i2c_1trame@i2c_add,c
  4617                           
  4618                           ;I2C.h: 30: i2c_start();
  4619  00102E  EC59  F008         	call	_i2c_start	;wreg free
  4620                           
  4621                           ;I2C.h: 31: i2c_ecrire(i2c_add);
  4622  001032  501C               	movf	i2c_1trame@i2c_add,w,c
  4623  001034  EC2D  F008         	call	_i2c_ecrire
  4624                           
  4625                           ;I2C.h: 32: i2c_ecrire(i2c_octet);
  4626  001038  501B               	movf	i2c_1trame@i2c_octet,w,c
  4627  00103A  EC2D  F008         	call	_i2c_ecrire
  4628                           
  4629                           ;I2C.h: 33: i2c_stop();
  4630  00103E  EC55  F008         	call	_i2c_stop	;wreg free
  4631  001042  0012               	return	
  4632  001044                     __end_of_i2c_1trame:
  4633                           	opt stack 0
  4634                           tblptru	equ	0xFF8
  4635                           tblptrh	equ	0xFF7
  4636                           tblptrl	equ	0xFF6
  4637                           tablat	equ	0xFF5
  4638                           intcon	equ	0xFF2
  4639                           postinc0	equ	0xFEE
  4640                           wreg	equ	0xFE8
  4641                           indf2	equ	0xFDF
  4642                           fsr2h	equ	0xFDA
  4643                           fsr2l	equ	0xFD9
  4644                           status	equ	0xFD8
  4645                           
  4646 ;; *************** function _i2c_stop *****************
  4647 ;; Defined at:
  4648 ;;		line 71 in file "I2C.h"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;		None
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;		None
  4653 ;; Return value:  Size  Location     Type
  4654 ;;		None               void
  4655 ;; Registers used:
  4656 ;;		None
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4666 ;;Total ram usage:        0 bytes
  4667 ;; Hardware stack levels used:    1
  4668 ;; Hardware stack levels required when called:    3
  4669 ;; This function calls:
  4670 ;;		Nothing
  4671 ;; This function is called by:
  4672 ;;		_i2c_1trame
  4673 ;;		_DS1621_init
  4674 ;;		_DS1621_conv
  4675 ;;		_DS1621_lire2octets
  4676 ;;		_DS1621_ecrire
  4677 ;;		_DS1621_lire1octets
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681                           	psect	text31
  4682  0010AA                     __ptext31:
  4683                           	opt stack 0
  4684  0010AA                     _i2c_stop:
  4685                           	opt stack 25
  4686                           
  4687                           ;I2C.h: 73: SSP1CON2bits.PEN=1;
  4688                           
  4689                           ;incstack = 0
  4690  0010AA  84C5               	bsf	4037,2,c	;volatile
  4691  0010AC                     l141:
  4692  0010AC  A4C5               	btfss	4037,2,c	;volatile
  4693  0010AE  0012               	return	
  4694  0010B0  D7FD               	goto	l141
  4695  0010B2                     __end_of_i2c_stop:
  4696                           	opt stack 0
  4697                           tblptru	equ	0xFF8
  4698                           tblptrh	equ	0xFF7
  4699                           tblptrl	equ	0xFF6
  4700                           tablat	equ	0xFF5
  4701                           intcon	equ	0xFF2
  4702                           postinc0	equ	0xFEE
  4703                           wreg	equ	0xFE8
  4704                           indf2	equ	0xFDF
  4705                           fsr2h	equ	0xFDA
  4706                           fsr2l	equ	0xFD9
  4707                           status	equ	0xFD8
  4708                           
  4709 ;; *************** function _i2c_start *****************
  4710 ;; Defined at:
  4711 ;;		line 57 in file "I2C.h"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;		None
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;		None
  4716 ;; Return value:  Size  Location     Type
  4717 ;;		None               void
  4718 ;; Registers used:
  4719 ;;		None
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4729 ;;Total ram usage:        0 bytes
  4730 ;; Hardware stack levels used:    1
  4731 ;; Hardware stack levels required when called:    3
  4732 ;; This function calls:
  4733 ;;		Nothing
  4734 ;; This function is called by:
  4735 ;;		_i2c_1trame
  4736 ;;		_DS1621_init
  4737 ;;		_DS1621_conv
  4738 ;;		_DS1621_lire2octets
  4739 ;;		_DS1621_ecrire
  4740 ;;		_DS1621_lire1octets
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           	psect	text32
  4745  0010B2                     __ptext32:
  4746                           	opt stack 0
  4747  0010B2                     _i2c_start:
  4748                           	opt stack 25
  4749                           
  4750                           ;I2C.h: 59: SSP1CON2bits.SEN=1;
  4751                           
  4752                           ;incstack = 0
  4753  0010B2  80C5               	bsf	4037,0,c	;volatile
  4754  0010B4                     l129:
  4755  0010B4  A0C5               	btfss	4037,0,c	;volatile
  4756  0010B6  0012               	return	
  4757  0010B8  D7FD               	goto	l129
  4758  0010BA                     __end_of_i2c_start:
  4759                           	opt stack 0
  4760                           tblptru	equ	0xFF8
  4761                           tblptrh	equ	0xFF7
  4762                           tblptrl	equ	0xFF6
  4763                           tablat	equ	0xFF5
  4764                           intcon	equ	0xFF2
  4765                           postinc0	equ	0xFEE
  4766                           wreg	equ	0xFE8
  4767                           indf2	equ	0xFDF
  4768                           fsr2h	equ	0xFDA
  4769                           fsr2l	equ	0xFD9
  4770                           status	equ	0xFD8
  4771                           
  4772 ;; *************** function _i2c_ecrire *****************
  4773 ;; Defined at:
  4774 ;;		line 90 in file "I2C.h"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;  i2c_octet       1    wreg     unsigned char 
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;  i2c_octet       1   25[COMRAM] unsigned char 
  4779 ;; Return value:  Size  Location     Type
  4780 ;;		None               void
  4781 ;; Registers used:
  4782 ;;		wreg
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/0
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4789 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4791 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4792 ;;Total ram usage:        1 bytes
  4793 ;; Hardware stack levels used:    1
  4794 ;; Hardware stack levels required when called:    3
  4795 ;; This function calls:
  4796 ;;		Nothing
  4797 ;; This function is called by:
  4798 ;;		_i2c_1trame
  4799 ;;		_DS1621_init
  4800 ;;		_DS1621_conv
  4801 ;;		_DS1621_lire2octets
  4802 ;;		_DS1621_ecrire
  4803 ;;		_DS1621_lire1octets
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           
  4807                           	psect	text33
  4808  00105A                     __ptext33:
  4809                           	opt stack 0
  4810  00105A                     _i2c_ecrire:
  4811                           	opt stack 25
  4812                           
  4813                           ;incstack = 0
  4814                           ;i2c_ecrire@i2c_octet stored from wreg
  4815  00105A  6E1A               	movwf	i2c_ecrire@i2c_octet,c
  4816                           
  4817                           ;I2C.h: 93: SSP1BUF=i2c_octet;
  4818  00105C  C01A  FFC9         	movff	i2c_ecrire@i2c_octet,4041	;volatile
  4819                           
  4820                           ;I2C.h: 94: SSP1IF=0;
  4821  001060  969E               	bcf	3998,3,c	;volatile
  4822  001062                     l154:
  4823  001062  A69E               	btfss	3998,3,c	;volatile
  4824  001064  D7FE               	goto	l154
  4825  001066                     l157:
  4826  001066  BCC5               	btfsc	4037,6,c	;volatile
  4827  001068  D7FE               	goto	l157
  4828                           
  4829                           ;I2C.h: 98: SSP1IF=0;
  4830  00106A  969E               	bcf	3998,3,c	;volatile
  4831  00106C  0012               	return	
  4832  00106E                     __end_of_i2c_ecrire:
  4833                           	opt stack 0
  4834                           tblptru	equ	0xFF8
  4835                           tblptrh	equ	0xFF7
  4836                           tblptrl	equ	0xFF6
  4837                           tablat	equ	0xFF5
  4838                           intcon	equ	0xFF2
  4839                           postinc0	equ	0xFEE
  4840                           wreg	equ	0xFE8
  4841                           indf2	equ	0xFDF
  4842                           fsr2h	equ	0xFDA
  4843                           fsr2l	equ	0xFD9
  4844                           status	equ	0xFD8
  4845                           
  4846 ;; *************** function ___llmod *****************
  4847 ;; Defined at:
  4848 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\llmod.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;  dividend        4   25[COMRAM] unsigned long 
  4851 ;;  divisor         4   29[COMRAM] unsigned long 
  4852 ;; Auto vars:     Size  Location     Type
  4853 ;;  counter         1   33[COMRAM] unsigned char 
  4854 ;; Return value:  Size  Location     Type
  4855 ;;                  4   25[COMRAM] unsigned long 
  4856 ;; Registers used:
  4857 ;;		wreg, status,2, status,0
  4858 ;; Tracked objects:
  4859 ;;		On entry : 0/0
  4860 ;;		On exit  : 0/0
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4863 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4864 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4866 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4867 ;;Total ram usage:        9 bytes
  4868 ;; Hardware stack levels used:    1
  4869 ;; Hardware stack levels required when called:    3
  4870 ;; This function calls:
  4871 ;;		Nothing
  4872 ;; This function is called by:
  4873 ;;		_affmotdec
  4874 ;;		_affmotdecsign
  4875 ;;		_RS232MotDec
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879                           	psect	text34
  4880  000B9A                     __ptext34:
  4881                           	opt stack 0
  4882  000B9A                     ___llmod:
  4883                           	opt stack 25
  4884                           
  4885                           ;incstack = 0
  4886  000B9A  5021               	movf	___llmod@divisor+3,w,c
  4887  000B9C  101E               	iorwf	___llmod@divisor,w,c
  4888  000B9E  101F               	iorwf	___llmod@divisor+1,w,c
  4889  000BA0  1020               	iorwf	___llmod@divisor+2,w,c
  4890  000BA2  B4D8               	btfsc	status,2,c
  4891  000BA4  D024               	goto	l1036
  4892  000BA6  0E01               	movlw	1
  4893  000BA8  6E22               	movwf	___llmod@counter,c
  4894  000BAA  D006               	goto	l3188
  4895  000BAC                     l3186:
  4896  000BAC  90D8               	bcf	status,0,c
  4897  000BAE  361E               	rlcf	___llmod@divisor,f,c
  4898  000BB0  361F               	rlcf	___llmod@divisor+1,f,c
  4899  000BB2  3620               	rlcf	___llmod@divisor+2,f,c
  4900  000BB4  3621               	rlcf	___llmod@divisor+3,f,c
  4901  000BB6  2A22               	incf	___llmod@counter,f,c
  4902  000BB8                     l3188:
  4903  000BB8  AE21               	btfss	___llmod@divisor+3,7,c
  4904  000BBA  D7F8               	goto	l3186
  4905  000BBC                     l3190:
  4906  000BBC  501E               	movf	___llmod@divisor,w,c
  4907  000BBE  5C1A               	subwf	___llmod@dividend,w,c
  4908  000BC0  501F               	movf	___llmod@divisor+1,w,c
  4909  000BC2  581B               	subwfb	___llmod@dividend+1,w,c
  4910  000BC4  5020               	movf	___llmod@divisor+2,w,c
  4911  000BC6  581C               	subwfb	___llmod@dividend+2,w,c
  4912  000BC8  5021               	movf	___llmod@divisor+3,w,c
  4913  000BCA  581D               	subwfb	___llmod@dividend+3,w,c
  4914  000BCC  A0D8               	btfss	status,0,c
  4915  000BCE  D008               	goto	l3194
  4916  000BD0  501E               	movf	___llmod@divisor,w,c
  4917  000BD2  5E1A               	subwf	___llmod@dividend,f,c
  4918  000BD4  501F               	movf	___llmod@divisor+1,w,c
  4919  000BD6  5A1B               	subwfb	___llmod@dividend+1,f,c
  4920  000BD8  5020               	movf	___llmod@divisor+2,w,c
  4921  000BDA  5A1C               	subwfb	___llmod@dividend+2,f,c
  4922  000BDC  5021               	movf	___llmod@divisor+3,w,c
  4923  000BDE  5A1D               	subwfb	___llmod@dividend+3,f,c
  4924  000BE0                     l3194:
  4925  000BE0  90D8               	bcf	status,0,c
  4926  000BE2  3221               	rrcf	___llmod@divisor+3,f,c
  4927  000BE4  3220               	rrcf	___llmod@divisor+2,f,c
  4928  000BE6  321F               	rrcf	___llmod@divisor+1,f,c
  4929  000BE8  321E               	rrcf	___llmod@divisor,f,c
  4930  000BEA  2E22               	decfsz	___llmod@counter,f,c
  4931  000BEC  D7E7               	goto	l3190
  4932  000BEE                     l1036:
  4933  000BEE  C01A  F01A         	movff	___llmod@dividend,?___llmod
  4934  000BF2  C01B  F01B         	movff	___llmod@dividend+1,?___llmod+1
  4935  000BF6  C01C  F01C         	movff	___llmod@dividend+2,?___llmod+2
  4936  000BFA  C01D  F01D         	movff	___llmod@dividend+3,?___llmod+3
  4937  000BFE  0012               	return	
  4938  000C00                     __end_of___llmod:
  4939                           	opt stack 0
  4940                           tblptru	equ	0xFF8
  4941                           tblptrh	equ	0xFF7
  4942                           tblptrl	equ	0xFF6
  4943                           tablat	equ	0xFF5
  4944                           intcon	equ	0xFF2
  4945                           postinc0	equ	0xFEE
  4946                           wreg	equ	0xFE8
  4947                           indf2	equ	0xFDF
  4948                           fsr2h	equ	0xFDA
  4949                           fsr2l	equ	0xFD9
  4950                           status	equ	0xFD8
  4951                           
  4952 ;; *************** function ___lldiv *****************
  4953 ;; Defined at:
  4954 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;  dividend        4   25[COMRAM] unsigned long 
  4957 ;;  divisor         4   29[COMRAM] unsigned long 
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;  quotient        4   33[COMRAM] unsigned long 
  4960 ;;  counter         1   37[COMRAM] unsigned char 
  4961 ;; Return value:  Size  Location     Type
  4962 ;;                  4   25[COMRAM] unsigned long 
  4963 ;; Registers used:
  4964 ;;		wreg, status,2, status,0
  4965 ;; Tracked objects:
  4966 ;;		On entry : 0/0
  4967 ;;		On exit  : 0/0
  4968 ;;		Unchanged: 0/0
  4969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4970 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4971 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4973 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4974 ;;Total ram usage:       13 bytes
  4975 ;; Hardware stack levels used:    1
  4976 ;; Hardware stack levels required when called:    3
  4977 ;; This function calls:
  4978 ;;		Nothing
  4979 ;; This function is called by:
  4980 ;;		_affmotdec
  4981 ;;		_affmotdecsign
  4982 ;;		_RS232MotDec
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           	psect	text35
  4987  000AA2                     __ptext35:
  4988                           	opt stack 0
  4989  000AA2                     ___lldiv:
  4990                           	opt stack 25
  4991                           
  4992                           ;incstack = 0
  4993  000AA2  0E00               	movlw	0
  4994  000AA4  6E22               	movwf	___lldiv@quotient,c
  4995  000AA6  0E00               	movlw	0
  4996  000AA8  6E23               	movwf	___lldiv@quotient+1,c
  4997  000AAA  0E00               	movlw	0
  4998  000AAC  6E24               	movwf	___lldiv@quotient+2,c
  4999  000AAE  0E00               	movlw	0
  5000  000AB0  6E25               	movwf	___lldiv@quotient+3,c
  5001  000AB2  5021               	movf	___lldiv@divisor+3,w,c
  5002  000AB4  101E               	iorwf	___lldiv@divisor,w,c
  5003  000AB6  101F               	iorwf	___lldiv@divisor+1,w,c
  5004  000AB8  1020               	iorwf	___lldiv@divisor+2,w,c
  5005  000ABA  B4D8               	btfsc	status,2,c
  5006  000ABC  D02A               	goto	l1026
  5007  000ABE  0E01               	movlw	1
  5008  000AC0  6E26               	movwf	___lldiv@counter,c
  5009  000AC2  D006               	goto	l3168
  5010  000AC4                     l3166:
  5011  000AC4  90D8               	bcf	status,0,c
  5012  000AC6  361E               	rlcf	___lldiv@divisor,f,c
  5013  000AC8  361F               	rlcf	___lldiv@divisor+1,f,c
  5014  000ACA  3620               	rlcf	___lldiv@divisor+2,f,c
  5015  000ACC  3621               	rlcf	___lldiv@divisor+3,f,c
  5016  000ACE  2A26               	incf	___lldiv@counter,f,c
  5017  000AD0                     l3168:
  5018  000AD0  AE21               	btfss	___lldiv@divisor+3,7,c
  5019  000AD2  D7F8               	goto	l3166
  5020  000AD4                     l3170:
  5021  000AD4  90D8               	bcf	status,0,c
  5022  000AD6  3622               	rlcf	___lldiv@quotient,f,c
  5023  000AD8  3623               	rlcf	___lldiv@quotient+1,f,c
  5024  000ADA  3624               	rlcf	___lldiv@quotient+2,f,c
  5025  000ADC  3625               	rlcf	___lldiv@quotient+3,f,c
  5026  000ADE  501E               	movf	___lldiv@divisor,w,c
  5027  000AE0  5C1A               	subwf	___lldiv@dividend,w,c
  5028  000AE2  501F               	movf	___lldiv@divisor+1,w,c
  5029  000AE4  581B               	subwfb	___lldiv@dividend+1,w,c
  5030  000AE6  5020               	movf	___lldiv@divisor+2,w,c
  5031  000AE8  581C               	subwfb	___lldiv@dividend+2,w,c
  5032  000AEA  5021               	movf	___lldiv@divisor+3,w,c
  5033  000AEC  581D               	subwfb	___lldiv@dividend+3,w,c
  5034  000AEE  A0D8               	btfss	status,0,c
  5035  000AF0  D009               	goto	l3178
  5036  000AF2  501E               	movf	___lldiv@divisor,w,c
  5037  000AF4  5E1A               	subwf	___lldiv@dividend,f,c
  5038  000AF6  501F               	movf	___lldiv@divisor+1,w,c
  5039  000AF8  5A1B               	subwfb	___lldiv@dividend+1,f,c
  5040  000AFA  5020               	movf	___lldiv@divisor+2,w,c
  5041  000AFC  5A1C               	subwfb	___lldiv@dividend+2,f,c
  5042  000AFE  5021               	movf	___lldiv@divisor+3,w,c
  5043  000B00  5A1D               	subwfb	___lldiv@dividend+3,f,c
  5044  000B02  8022               	bsf	___lldiv@quotient,0,c
  5045  000B04                     l3178:
  5046  000B04  90D8               	bcf	status,0,c
  5047  000B06  3221               	rrcf	___lldiv@divisor+3,f,c
  5048  000B08  3220               	rrcf	___lldiv@divisor+2,f,c
  5049  000B0A  321F               	rrcf	___lldiv@divisor+1,f,c
  5050  000B0C  321E               	rrcf	___lldiv@divisor,f,c
  5051  000B0E  2E26               	decfsz	___lldiv@counter,f,c
  5052  000B10  D7E1               	goto	l3170
  5053  000B12                     l1026:
  5054  000B12  C022  F01A         	movff	___lldiv@quotient,?___lldiv
  5055  000B16  C023  F01B         	movff	___lldiv@quotient+1,?___lldiv+1
  5056  000B1A  C024  F01C         	movff	___lldiv@quotient+2,?___lldiv+2
  5057  000B1E  C025  F01D         	movff	___lldiv@quotient+3,?___lldiv+3
  5058  000B22  0012               	return	
  5059  000B24                     __end_of___lldiv:
  5060                           	opt stack 0
  5061                           tblptru	equ	0xFF8
  5062                           tblptrh	equ	0xFF7
  5063                           tblptrl	equ	0xFF6
  5064                           tablat	equ	0xFF5
  5065                           intcon	equ	0xFF2
  5066                           postinc0	equ	0xFEE
  5067                           wreg	equ	0xFE8
  5068                           indf2	equ	0xFDF
  5069                           fsr2h	equ	0xFDA
  5070                           fsr2l	equ	0xFD9
  5071                           status	equ	0xFD8
  5072                           
  5073 ;; *************** function _tc_int *****************
  5074 ;; Defined at:
  5075 ;;		line 54 in file "tst_mplabx.c"
  5076 ;; Parameters:    Size  Location     Type
  5077 ;;		None
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;		None
  5080 ;; Return value:  Size  Location     Type
  5081 ;;		None               void
  5082 ;; Registers used:
  5083 ;;		wreg, status,2, status,0, cstack
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5091 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5092 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5093 ;;Total ram usage:       14 bytes
  5094 ;; Hardware stack levels used:    1
  5095 ;; Hardware stack levels required when called:    2
  5096 ;; This function calls:
  5097 ;;		i2_tempo_Xms
  5098 ;; This function is called by:
  5099 ;;		Interrupt level 2
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           	psect	intcode
  5104  000008                     __pintcode:
  5105                           	opt stack 0
  5106  000008                     _tc_int:
  5107                           	opt stack 22
  5108                           
  5109                           ;incstack = 0
  5110  000008  CFFA F00C          	movff	pclath,??_tc_int
  5111  00000C  CFFB F00D          	movff	pclatu,??_tc_int+1
  5112  000010  CFE9 F00E          	movff	fsr0l,??_tc_int+2
  5113  000014  CFEA F00F          	movff	fsr0h,??_tc_int+3
  5114  000018  CFE1 F010          	movff	fsr1l,??_tc_int+4
  5115  00001C  CFE2 F011          	movff	fsr1h,??_tc_int+5
  5116  000020  CFD9 F012          	movff	fsr2l,??_tc_int+6
  5117  000024  CFDA F013          	movff	fsr2h,??_tc_int+7
  5118  000028  CFF3 F014          	movff	prodl,??_tc_int+8
  5119  00002C  CFF4 F015          	movff	prodh,??_tc_int+9
  5120  000030  CFF6 F016          	movff	tblptrl,??_tc_int+10
  5121  000034  CFF7 F017          	movff	tblptrh,??_tc_int+11
  5122  000038  CFF8 F018          	movff	tblptru,??_tc_int+12
  5123  00003C  CFF5 F019          	movff	tablat,??_tc_int+13
  5124                           
  5125                           ;tst_mplabx.c: 56: if (INT0IF)
  5126  000040  A2F2               	btfss	intcon,1,c	;volatile
  5127  000042  D01C               	goto	i2l526
  5128                           
  5129                           ;tst_mplabx.c: 57: {
  5130                           ;tst_mplabx.c: 58: bouton=bouton+1;
  5131  000044  2844               	incf	_bouton,w,c
  5132  000046  6E44               	movwf	_bouton,c
  5133                           
  5134                           ;tst_mplabx.c: 60: inter=1;
  5135  000048  0E01               	movlw	1
  5136  00004A  0100               	movlb	0	; () banked
  5137  00004C  6F64               	movwf	_inter& (0+255),b
  5138                           
  5139                           ; BSR set to: 0
  5140                           ;tst_mplabx.c: 61: curs=1;
  5141  00004E  0E01               	movlw	1
  5142  000050  0100               	movlb	0	; () banked
  5143  000052  6F60               	movwf	_curs& (0+255),b
  5144  000054  0E00               	movlw	0
  5145  000056  0100               	movlb	0	; () banked
  5146  000058  6F61               	movwf	(_curs+1)& (0+255),b
  5147  00005A  0E00               	movlw	0
  5148  00005C  0100               	movlb	0	; () banked
  5149  00005E  6F62               	movwf	(_curs+2)& (0+255),b
  5150  000060  0E00               	movlw	0
  5151  000062  0100               	movlb	0	; () banked
  5152  000064  6F63               	movwf	(_curs+3)& (0+255),b
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;tst_mplabx.c: 62: tempo_Xms(500);
  5156  000066  0EF4               	movlw	244
  5157  000068  6E01               	movwf	i2tempo_Xms@time,c
  5158  00006A  0E01               	movlw	1
  5159  00006C  6E02               	movwf	i2tempo_Xms@time+1,c
  5160  00006E  0E00               	movlw	0
  5161  000070  6E03               	movwf	i2tempo_Xms@time+2,c
  5162  000072  0E00               	movlw	0
  5163  000074  6E04               	movwf	i2tempo_Xms@time+3,c
  5164  000076  ECF9  F006         	call	i2_tempo_Xms	;wreg free
  5165                           
  5166                           ;tst_mplabx.c: 63: INT0IF=0;
  5167  00007A  92F2               	bcf	intcon,1,c	;volatile
  5168  00007C                     i2l526:
  5169  00007C  C019  FFF5         	movff	??_tc_int+13,tablat
  5170  000080  C018  FFF8         	movff	??_tc_int+12,tblptru
  5171  000084  C017  FFF7         	movff	??_tc_int+11,tblptrh
  5172  000088  C016  FFF6         	movff	??_tc_int+10,tblptrl
  5173  00008C  C015  FFF4         	movff	??_tc_int+9,prodh
  5174  000090  C014  FFF3         	movff	??_tc_int+8,prodl
  5175  000094  C013  FFDA         	movff	??_tc_int+7,fsr2h
  5176  000098  C012  FFD9         	movff	??_tc_int+6,fsr2l
  5177  00009C  C011  FFE2         	movff	??_tc_int+5,fsr1h
  5178  0000A0  C010  FFE1         	movff	??_tc_int+4,fsr1l
  5179  0000A4  C00F  FFEA         	movff	??_tc_int+3,fsr0h
  5180  0000A8  C00E  FFE9         	movff	??_tc_int+2,fsr0l
  5181  0000AC  C00D  FFFB         	movff	??_tc_int+1,pclatu
  5182  0000B0  C00C  FFFA         	movff	??_tc_int,pclath
  5183  0000B4  0011               	retfie		f
  5184  0000B6                     __end_of_tc_int:
  5185                           	opt stack 0
  5186                           pclatu	equ	0xFFB
  5187                           pclath	equ	0xFFA
  5188                           tblptru	equ	0xFF8
  5189                           tblptrh	equ	0xFF7
  5190                           tblptrl	equ	0xFF6
  5191                           tablat	equ	0xFF5
  5192                           prodh	equ	0xFF4
  5193                           prodl	equ	0xFF3
  5194                           intcon	equ	0xFF2
  5195                           postinc0	equ	0xFEE
  5196                           fsr0h	equ	0xFEA
  5197                           fsr0l	equ	0xFE9
  5198                           wreg	equ	0xFE8
  5199                           fsr1h	equ	0xFE2
  5200                           fsr1l	equ	0xFE1
  5201                           indf2	equ	0xFDF
  5202                           fsr2h	equ	0xFDA
  5203                           fsr2l	equ	0xFD9
  5204                           status	equ	0xFD8
  5205                           
  5206 ;; *************** function i2_tempo_Xms *****************
  5207 ;; Defined at:
  5208 ;;		line 178 in file "tst_mplabx.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;  time            4    0[COMRAM] long 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  tempo_Xms       2    9[COMRAM] int 
  5213 ;; Return value:  Size  Location     Type
  5214 ;;		None               void
  5215 ;; Registers used:
  5216 ;;		wreg, status,2, status,0, cstack
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5222 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5223 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5224 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5225 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5226 ;;Total ram usage:       11 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; Hardware stack levels required when called:    1
  5229 ;; This function calls:
  5230 ;;		i2_tempo_1ms
  5231 ;; This function is called by:
  5232 ;;		_tc_int
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           	psect	text37
  5237  000DF2                     __ptext37:
  5238                           	opt stack 0
  5239  000DF2                     i2_tempo_Xms:
  5240                           	opt stack 22
  5241                           
  5242                           ;tst_mplabx.c: 180: int i;
  5243                           ;tst_mplabx.c: 181: for(i=0;i<time;i++){
  5244                           
  5245                           ;incstack = 0
  5246  000DF2  0E00               	movlw	0
  5247  000DF4  6E0B               	movwf	i2tempo_Xms@i+1,c
  5248  000DF6  0E00               	movlw	0
  5249  000DF8  6E0A               	movwf	i2tempo_Xms@i,c
  5250  000DFA  D004               	goto	i2l2790
  5251  000DFC                     i2l2786:
  5252                           
  5253                           ;tst_mplabx.c: 182: tempo_1ms();
  5254  000DFC  EC4B  F008         	call	i2_tempo_1ms	;wreg free
  5255  000E00  4A0A               	infsnz	i2tempo_Xms@i,f,c
  5256  000E02  2A0B               	incf	i2tempo_Xms@i+1,f,c
  5257  000E04                     i2l2790:
  5258  000E04  C00A  F005         	movff	i2tempo_Xms@i,??i2_tempo_Xms
  5259  000E08  C00B  F006         	movff	i2tempo_Xms@i+1,??i2_tempo_Xms+1
  5260  000E0C  0E00               	movlw	0
  5261  000E0E  BE06               	btfsc	(??i2_tempo_Xms+1)& (0+255),7,c
  5262  000E10  0EFF               	movlw	255
  5263  000E12  6E07               	movwf	(??i2_tempo_Xms+2)& (0+255),c
  5264  000E14  6E08               	movwf	(??i2_tempo_Xms+3)& (0+255),c
  5265  000E16  5008               	movf	??i2_tempo_Xms+3,w,c
  5266  000E18  0A80               	xorlw	128
  5267  000E1A  6E09               	movwf	(??i2_tempo_Xms+4)& (0+255),c
  5268  000E1C  5001               	movf	i2tempo_Xms@time,w,c
  5269  000E1E  5C05               	subwf	??i2_tempo_Xms,w,c
  5270  000E20  5002               	movf	i2tempo_Xms@time+1,w,c
  5271  000E22  5806               	subwfb	??i2_tempo_Xms+1,w,c
  5272  000E24  5003               	movf	i2tempo_Xms@time+2,w,c
  5273  000E26  5807               	subwfb	??i2_tempo_Xms+2,w,c
  5274  000E28  5004               	movf	i2tempo_Xms@time+3,w,c
  5275  000E2A  0A80               	xorlw	128
  5276  000E2C  5809               	subwfb	(??i2_tempo_Xms+4)& (0+255),w,c
  5277  000E2E  B0D8               	btfsc	status,0,c
  5278  000E30  0012               	return	
  5279  000E32  D7E4               	goto	i2l2786
  5280  000E34                     __end_ofi2_tempo_Xms:
  5281                           	opt stack 0
  5282                           pclatu	equ	0xFFB
  5283                           pclath	equ	0xFFA
  5284                           tblptru	equ	0xFF8
  5285                           tblptrh	equ	0xFF7
  5286                           tblptrl	equ	0xFF6
  5287                           tablat	equ	0xFF5
  5288                           prodh	equ	0xFF4
  5289                           prodl	equ	0xFF3
  5290                           intcon	equ	0xFF2
  5291                           postinc0	equ	0xFEE
  5292                           fsr0h	equ	0xFEA
  5293                           fsr0l	equ	0xFE9
  5294                           wreg	equ	0xFE8
  5295                           fsr1h	equ	0xFE2
  5296                           fsr1l	equ	0xFE1
  5297                           indf2	equ	0xFDF
  5298                           fsr2h	equ	0xFDA
  5299                           fsr2l	equ	0xFD9
  5300                           status	equ	0xFD8
  5301                           
  5302 ;; *************** function i2_tempo_1ms *****************
  5303 ;; Defined at:
  5304 ;;		line 185 in file "tst_mplabx.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;		None
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;		None
  5309 ;; Return value:  Size  Location     Type
  5310 ;;		None               void
  5311 ;; Registers used:
  5312 ;;		wreg, status,2
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5322 ;;Total ram usage:        0 bytes
  5323 ;; Hardware stack levels used:    1
  5324 ;; This function calls:
  5325 ;;		Nothing
  5326 ;; This function is called by:
  5327 ;;		i2_tempo_Xms
  5328 ;; This function uses a non-reentrant model
  5329 ;;
  5330                           
  5331                           	psect	text38
  5332  001096                     __ptext38:
  5333                           	opt stack 0
  5334  001096                     i2_tempo_1ms:
  5335                           	opt stack 22
  5336                           
  5337                           ;tst_mplabx.c: 188: TMR0IF=0;
  5338                           
  5339                           ;incstack = 0
  5340  001096  94F2               	bcf	intcon,2,c	;volatile
  5341                           
  5342                           ;tst_mplabx.c: 189: TMR0L=131;
  5343  001098  0E83               	movlw	131
  5344  00109A  6ED6               	movwf	4054,c	;volatile
  5345  00109C                     i2l559:
  5346  00109C  B4F2               	btfsc	intcon,2,c	;volatile
  5347  00109E  0012               	return	
  5348  0010A0  D7FD               	goto	i2l559
  5349  0010A2                     __end_ofi2_tempo_1ms:
  5350                           	opt stack 0
  5351                           pclatu	equ	0xFFB
  5352                           pclath	equ	0xFFA
  5353                           tblptru	equ	0xFF8
  5354                           tblptrh	equ	0xFF7
  5355                           tblptrl	equ	0xFF6
  5356                           tablat	equ	0xFF5
  5357                           prodh	equ	0xFF4
  5358                           prodl	equ	0xFF3
  5359                           intcon	equ	0xFF2
  5360                           postinc0	equ	0xFEE
  5361                           fsr0h	equ	0xFEA
  5362                           fsr0l	equ	0xFE9
  5363                           wreg	equ	0xFE8
  5364                           fsr1h	equ	0xFE2
  5365                           fsr1l	equ	0xFE1
  5366                           indf2	equ	0xFDF
  5367                           fsr2h	equ	0xFDA
  5368                           fsr2l	equ	0xFD9
  5369                           status	equ	0xFD8
  5370                           pclatu	equ	0xFFB
  5371                           pclath	equ	0xFFA
  5372                           tblptru	equ	0xFF8
  5373                           tblptrh	equ	0xFF7
  5374                           tblptrl	equ	0xFF6
  5375                           tablat	equ	0xFF5
  5376                           prodh	equ	0xFF4
  5377                           prodl	equ	0xFF3
  5378                           intcon	equ	0xFF2
  5379                           postinc0	equ	0xFEE
  5380                           fsr0h	equ	0xFEA
  5381                           fsr0l	equ	0xFE9
  5382                           wreg	equ	0xFE8
  5383                           fsr1h	equ	0xFE2
  5384                           fsr1l	equ	0xFE1
  5385                           indf2	equ	0xFDF
  5386                           fsr2h	equ	0xFDA
  5387                           fsr2l	equ	0xFD9
  5388                           status	equ	0xFD8
  5389                           
  5390                           	psect	rparam
  5391  0000                     pclatu	equ	0xFFB
  5392                           pclath	equ	0xFFA
  5393                           tblptru	equ	0xFF8
  5394                           tblptrh	equ	0xFF7
  5395                           tblptrl	equ	0xFF6
  5396                           tablat	equ	0xFF5
  5397                           prodh	equ	0xFF4
  5398                           prodl	equ	0xFF3
  5399                           intcon	equ	0xFF2
  5400                           postinc0	equ	0xFEE
  5401                           fsr0h	equ	0xFEA
  5402                           fsr0l	equ	0xFE9
  5403                           wreg	equ	0xFE8
  5404                           fsr1h	equ	0xFE2
  5405                           fsr1l	equ	0xFE1
  5406                           indf2	equ	0xFDF
  5407                           fsr2h	equ	0xFDA
  5408                           fsr2l	equ	0xFD9
  5409                           status	equ	0xFD8


Data Sizes:
    Strings     293
    Constant    0
    Data        0
    BSS         66
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      68
    BANK0           160     17      72
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    VitVentms@tab	PTR unsigned char  size(2) Largest target is 50
		 -> tab(BANK0[50]), 

    VitVentkmh@tab	PTR unsigned char  size(2) Largest target is 50
		 -> tab(BANK0[50]), 

    DirVent@tab	PTR unsigned char  size(2) Largest target is 50
		 -> tab(BANK0[50]), 

    traitementVent@tab	PTR unsigned char  size(2) Largest target is 50
		 -> tab(BANK0[50]), 

    DetectVent@tab	PTR unsigned char  size(2) Largest target is 50
		 -> tab(BANK0[50]), 

    Affich_D_Vent@tab	PTR unsigned char  size(2) Largest target is 50
		 -> tab(BANK0[50]), 

    Affich_V_Vent_ms@tab	PTR unsigned char  size(2) Largest target is 50
		 -> tab(BANK0[50]), 

    Affich_V_Vent_kmh@tab	PTR unsigned char  size(2) Largest target is 50
		 -> tab(BANK0[50]), 

    afftext@ptext	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_31(CODE[13]), STR_30(CODE[20]), STR_29(CODE[14]), STR_28(CODE[8]), 
		 -> STR_27(CODE[9]), STR_26(CODE[6]), STR_25(CODE[16]), STR_24(CODE[11]), 
		 -> STR_23(CODE[17]), STR_22(CODE[6]), STR_21(CODE[16]), STR_20(CODE[10]), 
		 -> STR_19(CODE[14]), STR_18(CODE[4]), STR_17(CODE[12]), STR_16(CODE[8]), 
		 -> STR_15(CODE[12]), STR_14(CODE[4]), STR_13(CODE[13]), STR_12(CODE[9]), 
		 -> STR_11(CODE[14]), STR_10(CODE[5]), STR_9(CODE[40]), STR_8(CODE[17]), 
		 -> STR_7(CODE[5]), STR_6(CODE[40]), STR_5(CODE[18]), STR_4(CODE[6]), 
		 -> STR_3(CODE[40]), STR_2(CODE[18]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_AffichTemp
    _rafraich->_DS1621_lire2octets
    _DS1621_lire2octets->_i2c_lire
    _InitLCD->_tempo_Xms
    _MessageAccueil->_tempo_Xms
    _DS1621_init->_i2c_ecrire
    _DS1621_conv->_i2c_ecrire
    _Affich_V_Vent_ms->_affmotdec
    _VitVentms->_traitementVent
    _Affich_V_Vent_kmh->_affmotdec
    _VitVentkmh->_traitementVent
    _Affich_D_Vent->_DirVent
    _DirVent->_traitementVent
    _AffichTemp->_affmotdec
    _valinstr->_i2c_1trame
    _afftext->_valcaract
    _affmotdec->___lldiv
    _valcaract->_i2c_1trame
    _i2c_1trame->_i2c_ecrire

Critical Paths under _tc_int in COMRAM

    _tc_int->i2_tempo_Xms

Critical Paths under _main in BANK0

    _main->_Affich_V_Vent_kmh
    _main->_Affich_V_Vent_ms

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tc_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tc_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tc_int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _tc_int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _tc_int in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _tc_int in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _tc_int in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _tc_int in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _tc_int in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _tc_int in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _tc_int in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _tc_int in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _tc_int in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   50811
                                             14 BANK0      3     3      0
                         _AffichTemp
                      _Affich_D_Vent
                  _Affich_V_Vent_kmh
                   _Affich_V_Vent_ms
                        _DS1621_init
                 _DS1621_lire2octets
                         _DetectVent
                               _Init
                            _InitLCD
                          _InitRS232
                            _afftext
                           _i2c_init
                           _rafraich
                          _tempo_Xms
                           _valinstr
 ---------------------------------------------------------------------------------
 (1) _rafraich                                             1     1      0     597
                                             31 COMRAM     1     1      0
                 _DS1621_lire2octets
                         _DetectVent
 ---------------------------------------------------------------------------------
 (2) _DetectVent                                           4     2      2     260
                                             25 COMRAM     4     2      2
                     _tempo_1ms200us
                        _tempo_200us
 ---------------------------------------------------------------------------------
 (3) _tempo_200us                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _tempo_1ms200us                                       0     0      0       0
                          _tempo_1ms
 ---------------------------------------------------------------------------------
 (2) _DS1621_lire2octets                                   3     3      0     303
                                             28 COMRAM     3     3      0
                         _i2c_ecrire
                           _i2c_lire
                        _i2c_restart
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (3) _i2c_lire                                             3     1      2     204
                                             25 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitRS232                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitLCD                                              0     0      0    4499
                     _MessageAccueil
                          _tempo_Xms
                           _valinstr
 ---------------------------------------------------------------------------------
 (2) _MessageAccueil                                       0     0      0    3432
                            _afftext
                          _tempo_Xms
                           _valinstr
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DS1621_init                                          3     1      2     285
                                             26 COMRAM     3     1      2
                        _DS1621_conv
                         _i2c_ecrire
                        _i2c_restart
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (3) _i2c_restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DS1621_conv                                          0     0      0      31
                         _i2c_ecrire
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (1) _Affich_V_Vent_ms                                    14     8      6   12322
                                              0 BANK0     14     8      6
                          _VitVentms
                          _affmotdec
                            _afftext
                          _tempo_Xms
                           _valinstr
 ---------------------------------------------------------------------------------
 (2) _VitVentms                                           12     8      4    3377
                                             39 COMRAM    12     8      4
                     _traitementVent
 ---------------------------------------------------------------------------------
 (1) _Affich_V_Vent_kmh                                   14     8      6   12842
                                              0 BANK0     14     8      6
                         _VitVentkmh
                          _affmotdec
                            _afftext
                          _tempo_Xms
                           _valinstr
 ---------------------------------------------------------------------------------
 (2) _VitVentkmh                                          12     8      4    3897
                                             39 COMRAM    12     8      4
                             ___lmul
                     _traitementVent
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     486
                                             25 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _Affich_D_Vent                                        8     2      6    7001
                                             41 COMRAM     8     2      6
                            _DirVent
                            _afftext
                          _tempo_Xms
                           _valinstr
 ---------------------------------------------------------------------------------
 (2) _DirVent                                              2     0      2    3216
                                             39 COMRAM     2     0      2
                     _traitementVent
 ---------------------------------------------------------------------------------
 (3) _traitementVent                                      14    10      4    3089
                                             25 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _AffichTemp                                           6     1      5    9165
                                             56 COMRAM     1     1      0
                                              0 BANK0      5     0      5
                          _affmotdec
                            _afftext
                          _tempo_Xms
                          _valcaract
                           _valinstr
 ---------------------------------------------------------------------------------
 (1) _valinstr                                             1     1      0     254
                                             28 COMRAM     1     1      0
                         _i2c_1trame
                          _tempo_1ms
 ---------------------------------------------------------------------------------
 (1) _tempo_Xms                                           11     7      4     813
                                             25 COMRAM    11     7      4
                          _tempo_1ms
 ---------------------------------------------------------------------------------
 (1) _afftext                                              2     0      2    2365
                                             29 COMRAM     2     0      2
                          _valcaract
 ---------------------------------------------------------------------------------
 (2) _affmotdec                                           18    13      5    5160
                                             38 COMRAM    18    13      5
                            ___lldiv
                            ___llmod
                          _valcaract
 ---------------------------------------------------------------------------------
 (2) _valcaract                                            1     1      0     254
                                             28 COMRAM     1     1      0
                         _i2c_1trame
                          _tempo_1ms
 ---------------------------------------------------------------------------------
 (2) _tempo_1ms                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_1trame                                           2     1      1     223
                                             26 COMRAM     2     1      1
                         _i2c_ecrire
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_ecrire                                           1     1      0      31
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8    1792
                                             25 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    1801
                                             25 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _tc_int                                              14    14      0      72
                                             11 COMRAM    14    14      0
                        i2_tempo_Xms
 ---------------------------------------------------------------------------------
 (8) i2_tempo_Xms                                         11     7      4      72
                                              0 COMRAM    11     7      4
                        i2_tempo_1ms
 ---------------------------------------------------------------------------------
 (9) i2_tempo_1ms                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AffichTemp
     _affmotdec
       ___lldiv
       ___llmod
       _valcaract
         _i2c_1trame
           _i2c_ecrire
           _i2c_start
           _i2c_stop
         _tempo_1ms
     _afftext
       _valcaract
         _i2c_1trame
           _i2c_ecrire
           _i2c_start
           _i2c_stop
         _tempo_1ms
     _tempo_Xms
       _tempo_1ms
     _valcaract
       _i2c_1trame
         _i2c_ecrire
         _i2c_start
         _i2c_stop
       _tempo_1ms
     _valinstr
       _i2c_1trame
         _i2c_ecrire
         _i2c_start
         _i2c_stop
       _tempo_1ms
   _Affich_D_Vent
     _DirVent
       _traitementVent
     _afftext
       _valcaract
         _i2c_1trame
           _i2c_ecrire
           _i2c_start
           _i2c_stop
         _tempo_1ms
     _tempo_Xms
       _tempo_1ms
     _valinstr
       _i2c_1trame
         _i2c_ecrire
         _i2c_start
         _i2c_stop
       _tempo_1ms
   _Affich_V_Vent_kmh
     _VitVentkmh
       ___lmul
       _traitementVent
     _affmotdec
       ___lldiv
       ___llmod
       _valcaract
         _i2c_1trame
           _i2c_ecrire
           _i2c_start
           _i2c_stop
         _tempo_1ms
     _afftext
       _valcaract
         _i2c_1trame
           _i2c_ecrire
           _i2c_start
           _i2c_stop
         _tempo_1ms
     _tempo_Xms
       _tempo_1ms
     _valinstr
       _i2c_1trame
         _i2c_ecrire
         _i2c_start
         _i2c_stop
       _tempo_1ms
   _Affich_V_Vent_ms
     _VitVentms
       _traitementVent
     _affmotdec
       ___lldiv
       ___llmod
       _valcaract
         _i2c_1trame
           _i2c_ecrire
           _i2c_start
           _i2c_stop
         _tempo_1ms
     _afftext
       _valcaract
         _i2c_1trame
           _i2c_ecrire
           _i2c_start
           _i2c_stop
         _tempo_1ms
     _tempo_Xms
       _tempo_1ms
     _valinstr
       _i2c_1trame
         _i2c_ecrire
         _i2c_start
         _i2c_stop
       _tempo_1ms
   _DS1621_init
     _DS1621_conv
       _i2c_ecrire
       _i2c_start
       _i2c_stop
     _i2c_ecrire
     _i2c_restart
     _i2c_start
     _i2c_stop
   _DS1621_lire2octets
     _i2c_ecrire
     _i2c_lire
     _i2c_restart
     _i2c_start
     _i2c_stop
   _DetectVent
     _tempo_1ms200us
       _tempo_1ms
     _tempo_200us
   _Init
   _InitLCD
     _MessageAccueil
       _afftext
         _valcaract
           _i2c_1trame
             _i2c_ecrire
             _i2c_start
             _i2c_stop
           _tempo_1ms
       _tempo_Xms
         _tempo_1ms
       _valinstr
         _i2c_1trame
           _i2c_ecrire
           _i2c_start
           _i2c_stop
         _tempo_1ms
     _tempo_Xms
       _tempo_1ms
     _valinstr
       _i2c_1trame
         _i2c_ecrire
         _i2c_start
         _i2c_stop
       _tempo_1ms
   _InitRS232
   _afftext
     _valcaract
       _i2c_1trame
         _i2c_ecrire
         _i2c_start
         _i2c_stop
       _tempo_1ms
   _i2c_init
   _rafraich
     _DS1621_lire2octets
       _i2c_ecrire
       _i2c_lire
       _i2c_restart
       _i2c_start
       _i2c_stop
     _DetectVent
       _tempo_1ms200us
         _tempo_1ms
       _tempo_200us
   _tempo_Xms
     _tempo_1ms
   _valinstr
     _i2c_1trame
       _i2c_ecrire
       _i2c_start
       _i2c_stop
     _tempo_1ms

 _tc_int (ROOT)
   i2_tempo_Xms
     i2_tempo_1ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     11      48       5       45.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      44       1       71.6%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8C      12        0.0%
DATA                 0      0      8C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Apr 09 08:56:31 2015

        ?_DS1621_lire2octets 0001                           _V1 003E                           _V2 0040  
                         _V3 0042                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
               __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000          __end_ofi2_tempo_1ms 10A2  
                __CFG_LVP$ON 000000                   _AffichTemp 0B24          __end_ofi2_tempo_Xms 0E34  
                        l141 10AC                          l135 10A4                          l129 10B4  
                        l154 1062                          l170 0FBC                          l171 0FC2  
                        l163 0FA6                          l157 1066                          l166 0FAA  
                        l169 0FBA                          l194 0F1E                          l284 04D2  
                        l532 05F8                          l472 0D14                          l571 1084  
                        l476 0D5E                          l565 1078                          l559 1090  
                        _V11 003F                          _V22 0041                          _V33 0043  
                        _GIE 007F97                 __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000  
                        _Chk 003A                          _Dir 003B                          _tab 0065  
                        wreg 000FE8                   _TXSTA2bits 000F72         ??_DS1621_lire2octets 001D  
                       l1026 0B12                         l1036 0BEE                         l3112 0DBA  
                       l3116 0DC2                         l3132 0C6C                         l3222 027C  
                       l3310 0EAE                         l3240 02B6                         l3152 0CCC  
                       l3170 0AD4                         l3242 02BE                         l3234 02A8  
                       l3226 0286                         l3138 0C8E                         l3228 028E  
                       l3500 0452                         l3156 0CE0                         l3412 09C0  
                       l3166 0AC4                         l3190 0BBC                         l3502 0460  
                       l3422 09FC                         l3406 0968                         l3168 0AD0  
                       l3264 030A                         l3256 02EA                         l3248 02D8  
                       l3504 046E                         l3280 0744                         l3432 088E  
                       l3178 0B04                         l3194 0BE0                         l3186 0BAC  
                       l3258 02F2                         l3188 0BB8                         l3540 0F1A  
                       l3390 0B74                         l3470 0380                         l3278 0734  
                       l3294 0838                         l3438 08E6                         l3534 0EFC  
                       l3480 03C6                         l3472 038E                         l3464 0366  
                       l3448 0922                         l3536 0F0C                         l3386 0B5E  
                       l3490 040C                         l3482 03D4                         l3474 039C  
                       l3458 0346                         l3396 0B94                         l3492 041A  
                       l3484 03E2                         l3476 03AA                         l3494 0428  
                       l3486 03F0                         l3478 03B8                         l3496 0436  
                       l3488 03FE                         l3498 0444                         l3780 0564  
                       l3782 058A                         l3774 051C                         l3784 05AC  
                       l3776 0524                         l3778 053E                         l3794 05D8  
                       l3798 0612                         STR_1 FF69                         STR_2 FF15  
                       STR_3 FED9                         STR_4 FFE4                         STR_5 FF15  
                       STR_6 FED9                         STR_7 FFF5                         STR_8 FF27  
                       STR_9 FED9                         u2820 0D50                         u2826 0D52  
                       u2915 08D4                         _PEIE 007F96                         _RCIF 007CF5  
                       u2885 09AE                         _Init 0EB2                         _main 04D8  
                       _curs 0060          Affich_V_Vent_ms@tab 009B                         fsr0h 000FEA  
                       fsr1h 000FE2                         fsr0l 000FE9                         fsr2h 000FDA  
                       fsr1l 000FE1                         indf2 000FDF                         fsr2l 000FD9  
              __CFG_BORV$190 000000                         pclat 000FFA                         prodh 000FF4  
                       prodl 000FF3                         start 00B6                __CFG_IESO$OFF 000000  
     __size_of_Affich_D_Vent 01C4              __end_of_DirVent 0EB2                ??_i2c_restart 001A  
        i2c_ecrire@i2c_octet 001A              __end_of_InitLCD 0AA2                   _DetectVent 0D12  
             _traitementVent 0C5E                 _BAUDCON2bits 000F70                        ?_Init 0001  
                      ?_main 0001                        STR_10 FFF0                        STR_11 FF85  
                      STR_12 FF8A                        STR_20 FF97                        STR_13 FFA1  
                      STR_21 FF59                        STR_14 FF8F                        STR_22 FF53  
                      STR_30 FF01                        STR_15 FFC7                        STR_31 FFAE  
                      STR_23 FF38                        STR_16 FFBF                        STR_24 FF4E  
                      STR_17 FFBB                        STR_25 FF49                        STR_18 FFFA  
                      STR_26 FFEA                        STR_27 FFD3                        STR_19 FF93  
                      STR_28 FFDC                        STR_29 FF77              __end_of___lldiv 0B24  
                      _T0CON 000FD5              __end_of___llmod 0C00                        _LATC0 007C58  
                      _LATC2 007C5A                  i2c_lire@ack 001A                        _RC2IE 007D1D  
                      _RC2IF 007D25                        i2l526 007C                        i2l559 109C  
                      _TMR0L 000FD6                        _PORTC 000F82                        _TRISA 000F92  
                      _TRISB 000F93                        _TRISC 000F94                        _SSPIF 007CF3  
            __end_of_afftext 0F4E                __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000  
              __CFG_WRT2$OFF 000000          ___lmul@multiplicand 001E                __CFG_WRT3$OFF 000000  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
             __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000                        _Start 003D  
              __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000  
                 _i2c_1trame 102C               __CFG_EBTRB$OFF 000000         Affich_V_Vent_kmh@tab 009B  
                      _inter 0064         Affich_V_Vent_ms@curs 0097         Affich_V_Vent_ms@vent 00A1  
         __CFG_MCLRE$EXTMCLR 000000               __CFG_BOREN$OFF 000000                        tablat 000FF5  
                      status 000FD8               __CFG_HFOFST$ON 000000                   _i2c_ecrire 105A  
            __initialization 0FF2                 __end_of_Init 0EEC                  i2_tempo_1ms 1096  
               __end_of_main 061C       __end_of_traitementVent 0CBC                  i2_tempo_Xms 0DF2  
           __end_of_i2c_init 102C             __end_of_i2c_lire 0FCA             __end_of_i2c_stop 10B2  
                     ??_Init 001A          __end_of_i2c_restart 10AA                       ??_main 003A  
                ?_AffichTemp 0097                __activetblptr 000002                _Affich_D_Vent 0314  
  __size_of_Affich_V_Vent_ms 00DA             ___llmod@dividend 001A                       _ANSELA 000F38  
                     _ANSELB 000F39                       _ANSELC 000F3A           __size_of_InitRS232 0028  
                     _INT0IE 007F94                       _INT0IF 007F91               __CFG_WDTEN$OFF 000000  
                     i2l2790 0E04                       i2l2786 0DFC                       _RCREG2 000F74  
                     _RCSTA2 000F71                       _OSCCON 000FD3                    ??_DirVent 002A  
                     _TMR0IF 007F92                       _SPBRG2 000F75                       _SSP1IF 007CF3  
              affmotdec@data 0027                affmotdec@cent 0032                affmotdec@coma 002B  
                     _SSPBUF 000FC9           __size_of_i2c_start 0008                affmotdec@temp 0035  
                     _TXREG2 000F73                affmotdec@unit 0030                       _TXSTA2 000F72  
                  ??_InitLCD 0025           traitementVent@data 0027                 ?_tempo_200us 0001  
             __CFG_XINST$OFF 000000                  ?_DetectVent 001A                       ___lmul 0CBC  
            ?_traitementVent 001A               __CFG_STVREN$ON 000000                    ??___lldiv 0022  
                  ??___llmod 0022                       _bouton 0044        Affich_V_Vent_kmh@curs 0097  
                  ??_afftext 0020                       clear_0 0FF8                       clear_1 1004  
                     _tc_int 0008        Affich_V_Vent_kmh@vent 00A1        Affich_V_Vent_ms@vent1 009D  
           __end_of_rafraich 0F1E                       main@TH 00A5                       main@TL 00A6  
             ?_Affich_D_Vent 002A               AffichTemp@curs 0097               AffichTemp@temp 009B  
                 _VitVentkmh 061C             __end_of_valinstr 0F78                 __mediumconst FED8  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
         __size_of_VitVentms 0104                  ?_i2c_1trame 001B                   __accesstop 0060  
    __end_of__initialization 100A              __CFG_PBADEN$OFF 000000          __size_of_AffichTemp 0076  
                ?_i2c_ecrire 0001               __pcstackCOMRAM 0001                  _i2c_restart 10A2  
         __size_of_affmotdec 025A            __end_of_InitRS232 0FF2      __size_of_MessageAccueil 005E  
          __end_of_i2c_start 10BA              i2tempo_Xms@time 0001          __size_of_DetectVent 0050  
                 __pbssBANK0 0060              __CFG_PLLCFG$OFF 000000                    ?_i2c_init 0001  
                  ?_i2c_lire 001A      __size_of_tempo_1ms200us 0010                    ?_i2c_stop 0001  
              ??_DS1621_conv 001B                ??_DS1621_init 001D           __CFG_CCP2MX$PORTC1 000000  
          __end_of_VitVentms 085A                      ?___lmul 001A          __size_of_i2c_1trame 0018  
         __CFG_CCP3MX$PORTB5 000000               ___lmul@product 0022                      ?_tc_int 0001  
         __size_of_valcaract 002A              ??_Affich_D_Vent 0030           __size_of_tempo_1ms 000C  
         __size_of_tempo_Xms 0042             _Affich_V_Vent_ms 085A                  ?_VitVentkmh 0028  
        __size_of_i2c_ecrire 0014                      _SPBRGH2 000F76                      _SSP1ADD 000FC8  
                    _SSP1BUF 000FC9  __size_of_DS1621_lire2octets 0040               affmotdec@mille 0033  
          __end_of_affmotdec 0314                   ??_i2c_init 001A                   ??_i2c_lire 001C  
                    _DirVent 0E74                   ??_i2c_stop 001A                      _InitLCD 0A0E  
                  ?_rafraich 0001              __CFG_PWRTEN$OFF 000000                      __Hparam 0000  
                    __Lparam 0000              traitementVent@i 0023              traitementVent@x 0022  
            traitementVent@y 001A                    ?_valinstr 0001                 ?i2_tempo_1ms 0001  
               ?i2_tempo_Xms 0001          __end_of_DS1621_conv 105A          __end_of_DS1621_init 0DB0  
       __size_of_tempo_200us 000C              __size_of___lmul 0056                      ___lldiv 0AA2  
                    ___llmod 0B9A                DetectVent@tab 001A                      _afftext 0F1E  
                    __pcinit 0FF2                      __ramtop 1000              __size_of_tc_int 00AE  
                    __ptext0 04D8                      __ptext1 0EEC                      __ptext2 0D12  
                    __ptext3 107E                      __ptext4 106E                      __ptext5 0E34  
                    __ptext6 0FA2                      __ptext7 1014                      __ptext8 0FCA  
                    __ptext9 0A0E                 ??_AffichTemp 0039       Affich_V_Vent_kmh@vent1 009D  
       end_of_initialization 100A              i2c_lire@octetlu 001C              AffichTemp@temp1 0039  
          __end_of_valcaract 0FA2            Affich_D_Vent@curs 002A            Affich_D_Vent@vent 0031  
              __Lmediumconst FED8                DS1621_init@TH 001B                DS1621_init@TL 001C  
                 ??_rafraich 0020            __end_of_tempo_1ms 1096             ??_traitementVent 001E  
          __end_of_tempo_Xms 0DF2              ___lldiv@divisor 001E           __end_of_AffichTemp 0B9A  
            ___lldiv@counter 0026          __size_of_VitVentkmh 013A                   ??_valinstr 001D  
               ??_DetectVent 001C                      postinc0 000FEE               _MessageAccueil 0C00  
                  _PORTBbits 000F81                    _PORTCbits 000F82                 ??_i2c_1trame 001C  
         __end_of_DetectVent 0D62               _tempo_1ms200us 106E                  _DS1621_conv 1044  
                _DS1621_init 0D62                 ??_i2c_ecrire 001A                 rafraich@temp 0020  
               ?_i2c_restart 0001                 i2tempo_Xms@i 000A       __end_of_MessageAccueil 0C5E  
         __end_of_i2c_1trame 1044               __end_of___lmul 0D12               __end_of_tc_int 00B6  
                  _InitRS232 0FCA          start_initialization 0FF2           __end_of_i2c_ecrire 106E  
                  _i2c_start 10B2       __end_of_tempo_1ms200us 107E              ___llmod@divisor 001E  
            ___llmod@counter 0022            __size_of_i2c_init 0018            __size_of_i2c_lire 0028  
               affmotdec@diz 0031            traitementVent@Inv 001D            __size_of_i2c_stop 0008  
   __end_of_Affich_V_Vent_ms 0934            traitementVent@tab 001B                valcaract@data 001D  
                   ??___lmul 0022              ?_MessageAccueil 0001         __size_ofi2_tempo_1ms 000C  
                  _VitVentms 0756         __size_ofi2_tempo_Xms 0042                     ??_tc_int 000C  
                 ?_InitRS232 0001                 afftext@ptext 001E                 ??_VitVentkmh 002C  
                __pbssCOMRAM 003A                __pcstackBANK0 0097                   ?_i2c_start 0001  
        __end_of__stringdata FFFE              ?_tempo_1ms200us 0001                     ?_DirVent 0028  
                  _affmotdec 00BA                     ?_InitLCD 0001            __size_of_rafraich 0032  
         __end_of_VitVentkmh 0756                    __pintcode 0008                __pmediumconst FED8  
                   ?___lldiv 001A                     ?___llmod 001A            __size_of_valinstr 002A  
                   ?_afftext 001E                   ?_VitVentms 0028             __CFG_PRICLKEN$ON 000000  
      __end_of_Affich_D_Vent 04D8                     _BAUDCON2 000F70   __end_of_DS1621_lire2octets 0E74  
          i2c_1trame@i2c_add 001C                   ?_affmotdec 0027            _Affich_V_Vent_kmh 0934  
           Affich_D_Vent@tab 002E                ??_tempo_200us 001A           ?_Affich_V_Vent_kmh 0097  
                  _valcaract 0F78                   tempo_Xms@i 0023                    _tempo_1ms 108A  
           __CFG_WDTPS$32768 000000                    _tempo_Xms 0DB0                     _SSP1CON1 000FC6  
                   _SSP1CON2 000FC5                     _SSP1CON3 000FCB                     _SSP1STAT 000FC7  
        ??_Affich_V_Vent_kmh 0039         __size_of_i2c_restart 0008                  __stringdata FED9  
                ??_InitRS232 001A                  ??_i2c_start 001A            ___lmul@multiplier 001A  
                   _Dirverif 003C    __end_of_Affich_V_Vent_kmh 0A0E                     _i2c_init 1014  
                   _i2c_lire 0FA2                     _i2c_stop 10AA             __size_of_DirVent 003E  
               ?_DS1621_conv 0001                 ?_DS1621_init 001B             __size_of_InitLCD 0094  
        i2c_1trame@i2c_octet 001B                   ?_valcaract 0001                     __Hrparam 0000  
                   __Lrparam 0000                   ?_tempo_1ms 0001                   ?_tempo_Xms 001A  
          __CFG_P2BMX$PORTB5 000000             __size_of___lldiv 0082          __end_of_tempo_200us 108A  
           __size_of___llmod 0066                  ??_VitVentms 002C             __size_of_afftext 0030  
            DS1621_init@data 001D      DS1621_lire2octets@tempH 001F      DS1621_lire2octets@tempL 001D  
                   __ptext10 0C00                     __ptext11 0EB2                     __ptext20 0314  
                   __ptext12 0D62                     __ptext21 0E74                     __ptext13 10A2  
                   __ptext30 102C                     __ptext22 0C5E                     __ptext14 1044  
                   __ptext31 10AA                     __ptext23 0B24                     __ptext15 085A  
                   __ptext32 10B2                     __ptext24 0F4E                     __ptext16 0756  
                   __ptext33 105A                     __ptext25 0DB0                     __ptext17 0934  
                   __ptext34 0B9A                     __ptext26 0F1E                     __ptext18 061C  
                   __ptext35 0AA2                     __ptext27 00BA                     __ptext19 0CBC  
                   __ptext28 0F78                     __ptext37 0DF2                     __ptext29 108A  
                   __ptext38 1096                 _SSP1CON2bits 000FC5                __size_of_Init 003A  
                DetectVent@i 001C                  ??_affmotdec 002C                __size_of_main 0144  
                   _rafraich 0EEC             ??_MessageAccueil 0025            ?_Affich_V_Vent_ms 0097  
                   _valinstr 0F4E           ??_Affich_V_Vent_ms 0039                     main@temp 00A7  
    __size_of_traitementVent 005E                tempo_Xms@time 001A             ??_tempo_1ms200us 001A  
         Affich_D_Vent@vent1 0030    DS1621_lire2octets@adresse 001E                     intlevel2 0000  
 __size_of_Affich_V_Vent_kmh 00DA             ___lldiv@dividend 001A                   DirVent@tab 0028  
              VitVentkmh@Vit 0030                   _RCSTA2bits 000F71                VitVentkmh@tab 0028  
               valinstr@data 001D                  ??_valcaract 001D                  _tempo_200us 107E  
              ??i2_tempo_1ms 0001                  ??_tempo_1ms 001A                ??i2_tempo_Xms 0005  
                ??_tempo_Xms 001E             ___lldiv@quotient 0022                 VitVentms@Vit 0030  
               VitVentms@tab 0028            __CFG_T3CMX$PORTC0 000000            affmotdec@dixmille 0034  
          __CFG_FOSC$INTIO67 000000           _DS1621_lire2octets 0E34         __size_of_DS1621_conv 0016  
       __size_of_DS1621_init 004E  
